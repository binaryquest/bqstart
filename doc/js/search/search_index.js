var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AppInitService.html",[0,1.96,1,2.091]],["body/injectables/AppInitService.html",[1,2.76,2,2.508,3,0.104,4,0.116,5,0.066,6,0.054,7,4.662,8,5.113,9,1.524,10,5.796,11,2.76,12,5.796,13,5.113,14,4.662,15,5.113,16,0.129,17,0.6,18,7.208,19,0.753,20,7.844,21,3.969,22,2.856,23,7.208,24,0.826,25,5.113,26,3.735,27,3.908,28,6.358,29,4.529,30,7.208,31,4.767,32,0.701,33,0.009,34,0.587,35,0.177,36,0.499,37,0.587,38,5.796,39,5.796,40,0.007,41,0.007]],["title/classes/AppInjector.html",[42,1.101,43,3.874]],["body/classes/AppInjector.html",[3,0.111,4,0.124,5,0.071,6,0.058,7,4.983,9,1.629,11,2.95,16,0.138,19,0.785,26,4.096,32,0.75,33,0.009,34,0.628,35,0.152,36,0.534,37,0.761,40,0.008,41,0.008,43,5.464,44,1.795,45,6.195,46,5.464,47,3.748,48,8.079,49,7.508,50,6.195,51,1.283]],["title/components/AppLayout.html",[52,1.075,53,1.304]],["body/components/AppLayout.html",[3,0.043,4,0.048,5,0.028,6,0.022,9,0.634,16,0.054,17,0.32,19,0.402,21,2.118,22,1.524,24,0.343,26,1.831,29,2.417,32,0.725,33,0.009,34,0.761,35,0.209,36,0.516,37,0.727,40,0.004,41,0.004,47,1.075,51,1.485,52,0.59,53,1.426,54,1.171,55,0.982,56,2.409,57,2.409,58,2.125,59,1.687,60,2.692,61,1.687,62,1.23,63,1.512,64,2.544,65,1.668,66,2.409,67,0.879,68,0.982,69,1.514,70,0.549,71,2.485,72,2.305,73,2.08,74,1.043,75,3.846,76,1.012,77,2.409,78,3.393,79,3.393,80,3.393,81,3.846,82,4.8,83,2.543,84,3.846,85,1.895,86,3.846,87,2.417,88,3.393,89,3.846,90,2.207,91,3.846,92,3.094,93,4.8,94,2.543,95,1.75,96,4.8,97,4.234,98,3.846,99,1.615,100,4.408,101,3.846,102,3.393,103,1.963,104,3.094,105,2.125,106,4.234,107,2.234,108,4.834,109,2.207,110,3.393,111,3.094,112,3.393,113,3.393,114,2.692,115,1.26,116,1.585,117,1.521,118,1.849,119,2.409,120,2.409,121,1.391,122,2.409,123,2.125,124,2.409,125,0.982,126,2.125,127,2.544,128,1.524,129,1.23,130,2.409,131,5.48,132,0.788,133,3.846,134,1.938,135,1.798,136,2.409,137,1.012,138,2.543,139,1.895,140,2.125,141,1.187,142,1.327,143,1.444,144,2.125,145,2.125,146,2.125,147,1.938,148,1.938,149,2.125,150,1.444,151,1.594,152,1.711,153,0.752,154,1.201,155,0.698,156,0.734,157,1.011,158,0.681,159,1.711,160,0.698,161,0.716,162,0.716,163,0.752,164,0.716,165,0.752,166,0.716,167,0.734,168,0.716,169,1.201,170,0.752,171,0.716,172,0.698,173,0.752,174,0.716,175,0.734,176,1.201,177,0.716,178,1.735,179,0.716,180,1.201,181,0.716,182,1.201,183,1.201,184,0.716,185,1.088,186,0.716,187,1.711,188,0.716,189,0.752,190,0.716,191,0.752,192,0.716,193,0.698,194,0.716,195,0.752,196,0.716,197,0.752,198,0.716,199,0.716,200,0.752,201,0.716,202,1.201,203,0.752,204,0.716,205,0.716,206,0.752,207,0.716,208,0.716,209,0.716,210,0.619,211,0.716,212,0.665,213,0.698,214,0.752,215,0.698,216,0.752,217,0.698,218,0.752,219,0.698,220,0.734,221,0.752]],["title/interfaces/ApplicationPathsType.html",[222,1.48,223,3.533]],["body/interfaces/ApplicationPathsType.html",[3,0.08,4,0.09,5,0.051,6,0.041,16,0.1,17,0.506,33,0.009,35,0.221,40,0.006,41,0.006,132,1.09,193,2.003,223,3.589,224,1.719,225,1.991,226,3.935,227,3.935,228,6.096,229,6.096,230,6.096,231,6.096,232,6.096,233,6.096,234,6.096,235,6.096,236,6.096,237,6.096,238,6.096,239,4.571,240,6.096,241,6.096,242,6.096,243,5.559,244,6.096,245,5.559,246,6.096]],["title/injectables/AuthorizeGuard.html",[0,1.96,247,3.874]],["body/injectables/AuthorizeGuard.html",[2,2.618,3,0.108,4,0.122,5,0.069,6,0.056,16,0.135,19,0.773,24,0.862,27,3.966,32,0.896,33,0.009,34,0.75,35,0.182,36,0.638,37,0.613,40,0.008,41,0.008,107,3.017,225,2.7,247,5.336,248,6.049,249,7.4,250,5.336,251,5.336,252,6.049,253,6.527,254,5.18,255,6.527,256,6.049,257,2.787,258,4.866]],["title/interceptors/AuthorizeInterceptor.html",[259,4.392,260,3.874]],["body/interceptors/AuthorizeInterceptor.html",[3,0.109,4,0.123,5,0.07,6,0.057,16,0.136,19,0.778,22,2.95,24,0.871,32,0.901,33,0.009,34,0.755,35,0.183,36,0.641,37,0.619,40,0.008,41,0.008,107,3.036,137,3.127,225,2.727,250,5.39,251,5.39,257,2.816,260,5.39,261,6.111,262,6.111,263,7.446,264,6.111,265,7.446,266,6.568,267,7.446,268,6.111]],["title/injectables/AuthorizeService.html",[0,1.96,107,1.791]],["body/injectables/AuthorizeService.html",[2,2.137,3,0.088,4,0.099,5,0.056,6,0.046,16,0.11,19,0.68,24,0.704,25,4.356,26,3.464,32,0.972,33,0.009,34,0.814,35,0.197,36,0.692,37,0.852,40,0.007,41,0.007,85,3.584,107,2.014,132,0.909,225,2.204,254,4.554,257,3.352,258,6.219,269,3.103,270,3.441,271,5.975,272,6.505,273,6.505,274,7.274,275,7.274,276,6.505,277,6.505,278,4.939,279,4.303,280,4.939,281,4.939,282,4.939]],["title/classes/BQConfigData.html",[42,1.101,137,1.844]],["body/classes/BQConfigData.html",[3,0.07,4,0.079,5,0.045,6,0.052,9,1.028,13,3.449,14,3.145,15,5.682,16,0.087,17,0.461,27,2.64,33,0.009,34,0.562,35,0.209,36,0.733,40,0.006,41,0.006,42,0.98,44,1.133,59,3.881,63,1.53,64,2.586,65,1.19,73,1.568,90,2.243,109,2.243,115,0.772,116,1.263,121,1.607,125,2.858,132,0.824,137,1.642,158,1.106,210,1.8,222,1.868,266,3.449,279,4.261,283,2.153,284,2.153,285,3.91,286,3.449,287,4.138,288,3.412,289,5.544,290,4.138,291,4.89,292,4.89,293,5.181,294,5.182,295,4.89,296,4.89,297,4.89,298,4.89,299,4.261,300,3.91,301,3.91,302,3.667,303,2.243,304,3.449,305,3.91,306,3.91,307,2.457,308,3.145,309,5.544,310,2.344,311,5.544,312,3.449,313,3.881,314,3.91,315,6.442,316,3.91,317,2.737,318,3.91,319,2.457,320,3.91,321,3.91,322,3.449,323,4.509,324,3.91,325,3.91,326,3.91,327,3.91,328,3.91,329,3.91,330,3.145,331,3.91,332,3.91,333,2.586,334,3.449,335,3.145,336,3.449,337,3.881,338,3.696,339,3.449,340,3.145,341,3.91,342,2.243,343,2.737,344,3.145,345,3.91,346,3.449,347,3.91,348,3.449,349,3.91,350,5.544,351,3.91,352,2.918,353,3.91,354,4.138,355,3.91,356,3.145,357,3.449,358,2.586,359,2.586,360,2.586,361,1.642,362,3.91,363,2.586,364,3.449,365,2.475,366,3.91,367,2.153]],["title/modules/BQStartPrimeModule.html",[114,3.074,368,3.533]],["body/modules/BQStartPrimeModule.html",[1,2.358,3,0.089,4,0.099,5,0.057,6,0.061,9,1.302,14,3.983,19,0.518,22,1.962,31,3.275,32,0.599,33,0.008,34,0.502,35,0.122,36,0.427,37,0.502,40,0.007,41,0.007,47,2.21,53,1.936,59,3.466,83,2.623,107,2.019,114,3.466,137,2.736,155,1.435,160,1.888,161,1.936,162,1.936,164,1.936,166,1.936,168,1.936,171,1.936,172,1.888,174,1.471,177,1.471,178,1.888,181,1.936,184,1.936,186,1.936,188,1.936,190,1.936,192,1.936,194,1.936,196,1.936,198,2.163,199,1.471,201,1.936,204,1.936,205,1.471,207,1.936,208,1.936,209,1.936,213,1.888,215,1.888,217,1.435,219,1.888,368,3.983,369,3.983,370,4.368,371,4.368,372,3.275,373,4.952,374,4.952,375,5.242,376,5.242,377,5.242,378,3.466,379,2.528,380,2.528,381,2.623,382,2.528,383,3.466,384,2.727,385,2.969,386,2.623,387,4.952,388,4.952,389,4.952,390,4.952]],["title/directives/BQTemplate.html",[213,1.273,391,3.074]],["body/directives/BQTemplate.html",[3,0.106,4,0.12,5,0.068,6,0.055,16,0.133,17,0.61,19,0.766,24,0.848,32,0.72,33,0.009,34,0.603,35,0.213,36,0.513,37,0.603,40,0.007,41,0.007,70,1.356,71,1.682,99,3.076,132,0.933,138,4.204,212,1.642,213,2.4,270,2.822,392,5.95,393,5.95,394,4.758,395,7.937,396,5.95]],["title/components/BaseComponent.html",[52,1.075,155,1.273]],["body/components/BaseComponent.html",[1,2.61,3,0.053,4,0.06,5,0.034,6,0.028,16,0.066,17,0.376,19,0.473,22,1.791,24,0.644,26,2.61,32,0.876,33,0.009,34,0.825,35,0.212,36,0.624,37,0.734,40,0.005,41,0.005,51,1.367,53,0.88,54,1.377,63,1.248,65,0.902,71,2.53,72,2.367,73,1.867,83,2.904,85,2.228,107,2.235,115,1.082,116,0.675,117,0.629,118,1.142,121,1.31,132,0.958,137,1.245,152,1.914,153,0.925,154,1.411,155,1.589,156,0.902,157,1.189,158,0.838,159,1.914,160,0.859,161,0.88,162,0.88,163,0.925,164,0.88,165,0.925,166,0.88,167,0.902,168,0.88,169,1.411,170,0.925,171,0.88,172,0.859,173,0.925,174,0.88,175,0.902,176,1.411,177,0.88,178,1.914,179,0.88,180,1.411,181,0.88,182,1.411,183,1.411,184,0.88,185,1.279,186,0.88,187,1.914,188,0.88,189,0.925,190,0.88,191,0.925,192,0.88,193,0.859,194,0.88,195,0.925,196,0.88,197,0.925,198,0.88,199,0.88,200,0.925,201,0.88,202,1.411,203,0.925,204,0.88,205,0.88,206,0.925,207,0.88,208,0.88,209,0.88,210,0.761,211,0.88,212,0.818,213,0.859,214,0.925,215,0.859,216,0.925,217,0.859,218,0.925,219,0.859,220,0.902,221,0.925,338,2.595,379,2.798,380,1.513,382,1.513,384,3.019,397,2.964,398,2.841,399,2.595,400,2.711,401,2.841,402,2.49,403,2.841,404,2.841,405,2.841,406,2.841,407,2.841,408,2.841,409,2.841,410,1.863,411,1.57,412,1.863,413,1.323,414,1.863,415,1.777,416,1.863,417,2.575,418,1.863,419,1.863,420,1.863,421,1.701,422,1.701,423,1.142]],["title/classes/BaseEntity.html",[42,1.101,424,3.874]],["body/classes/BaseEntity.html",[3,0.107,4,0.12,5,0.068,6,0.056,16,0.134,17,0.612,33,0.009,35,0.213,40,0.007,41,0.007,44,1.736,132,0.865,423,3.198,424,5.283,425,5.283,426,5.283,427,7.355,428,7.355,429,3.896,430,7.355,431,7.355,432,7.021,433,4.622,434,3.436]],["title/components/BaseField.html",[52,1.075,156,1.337]],["body/components/BaseField.html",[3,0.043,4,0.049,5,0.028,6,0.022,16,0.054,17,0.321,19,0.403,21,2.125,24,0.345,32,0.582,33,0.009,34,0.776,35,0.211,36,0.415,37,0.648,40,0.004,41,0.004,51,1.243,53,0.718,54,1.175,62,1.235,63,1.065,65,0.736,67,0.882,68,0.986,69,1.52,70,0.879,71,2.486,72,2.307,73,1.697,87,2.425,90,2.214,94,2.549,95,1.755,99,1.62,103,1.969,115,1.084,116,1.457,117,1.562,118,1.854,121,1.118,125,1.962,128,0.958,129,1.235,132,0.789,138,2.549,139,1.192,141,1.192,142,1.332,143,1.45,152,1.714,153,0.755,154,1.204,155,0.701,156,1.465,157,1.578,158,1.091,159,1.714,160,1.118,161,0.718,162,0.718,163,0.755,164,0.718,165,0.755,166,0.718,167,0.736,168,0.718,169,1.204,170,0.755,171,0.718,172,0.701,173,0.755,174,0.718,175,0.736,176,1.204,177,0.718,178,1.739,179,0.718,180,1.204,181,0.718,182,1.204,183,1.204,184,0.718,185,1.091,186,0.718,187,1.714,188,1.782,189,0.755,190,0.718,191,0.755,192,0.718,193,0.701,194,0.718,195,0.755,196,0.718,197,0.755,198,0.718,199,0.718,200,0.755,201,0.718,202,1.204,203,0.755,204,0.718,205,0.718,206,0.755,207,0.718,208,0.718,209,0.718,210,0.621,211,0.718,212,0.668,213,0.701,214,0.755,215,0.701,216,0.755,217,0.701,218,0.755,219,0.701,220,0.736,221,0.755,270,1.486,288,1.281,303,2.762,307,2.425,319,1.52,342,1.388,359,1.6,361,1.016,363,2.552,365,1.722,386,2.044,423,2.311,429,2.549,433,1.52,435,1.45,436,1.805,437,3.983,438,2.701,439,2.701,440,2.701,441,2.552,442,2.701,443,2.701,444,2.701,445,2.701,446,4.23,447,3.955,448,2.701,449,2.701,450,2.425,451,2.88,452,3.369,453,2.701,454,2.909,455,2.701,456,2.701,457,2.552,458,2.552,459,2.701,460,1.693,461,1.693,462,1.388,463,1.52,464,3.024,465,1.693,466,1.693,467,1.693,468,1.6,469,1.281,470,1.693,471,1.332,472,2.552,473,2.425,474,1.52,475,2.425,476,1.52,477,1.52,478,2.701,479,2.214,480,1.693,481,1.693,482,1.52,483,1.6,484,1.693,485,1.6,486,1.08,487,1.693,488,2.419,489,2.419]],["title/components/BaseFormView.html",[52,1.075,160,1.273]],["body/components/BaseFormView.html",[1,2.044,3,0.037,4,0.041,5,0.023,6,0.019,9,0.538,16,0.046,17,0.28,19,0.352,22,1.334,24,0.292,26,2.044,32,0.82,33,0.009,34,0.776,35,0.215,36,0.584,37,0.822,40,0.003,41,0.003,42,0.513,51,1.564,53,0.608,54,1.025,63,0.93,65,0.623,67,0.746,68,0.834,69,1.285,70,0.767,71,2.433,72,2.223,73,1.556,83,2.274,85,1.659,94,2.274,95,1.566,107,1.751,115,1.491,116,1.254,117,1.167,118,0.788,121,0.976,128,0.81,132,0.888,137,0.859,139,1.008,152,1.553,153,0.639,154,1.051,155,0.976,156,0.623,157,1.719,158,0.952,159,1.553,160,1.244,161,0.608,162,0.608,163,0.639,164,1.478,165,0.639,166,0.608,167,0.623,168,0.608,169,1.051,170,0.639,171,0.608,172,0.593,173,0.639,174,0.608,175,0.623,176,1.051,177,0.608,178,1.595,179,0.608,180,1.051,181,0.608,182,1.051,183,1.051,184,0.608,185,1.407,186,0.608,187,1.553,188,0.608,189,0.639,190,0.608,191,0.639,192,0.608,193,0.593,194,0.608,195,0.639,196,0.608,197,0.639,198,0.608,199,0.608,200,0.639,201,0.608,202,1.051,203,0.639,204,0.608,205,0.608,206,0.639,207,0.608,208,0.608,209,0.608,210,1.413,211,0.608,212,0.565,213,0.593,214,0.639,215,0.593,216,0.639,217,0.593,218,0.639,219,0.593,220,0.623,221,0.639,288,1.083,303,1.174,304,2.971,338,1.933,340,1.645,361,0.859,367,1.126,379,2.191,380,1.044,382,1.044,384,2.364,385,2.019,386,1.083,398,2.116,399,1.933,400,2.019,401,2.116,402,1.855,403,2.116,404,2.116,405,2.116,406,2.116,407,2.116,408,2.116,409,2.116,410,1.285,411,1.083,412,1.285,413,1.916,414,1.285,415,1.226,416,1.285,417,2.09,418,1.285,419,1.285,420,1.285,421,1.174,422,1.174,423,0.788,435,1.226,447,2.364,476,1.285,482,1.285,486,1.916,490,1.285,491,2.046,492,0.885,493,1.353,494,1.804,495,1.527,496,2.971,497,2.971,498,2.709,499,3.368,500,3.368,501,3.368,502,3.719,503,2.971,504,2.84,505,2.971,506,3.368,507,3.368,508,3.368,509,2.971,510,2.228,511,2.709,512,3.453,513,2.709,514,4.293,515,3.714,516,4.39,517,3.787,518,3.787,519,3.787,520,2.574,521,4.293,522,4.003,523,3.714,524,1.527,525,2.971,526,2.514,527,1.432,528,2.971,529,2.046,530,1.645,531,1.804,532,1.645,533,2.046,534,3.787,535,3.787,536,2.046,537,2.046,538,1.527,539,2.046,540,2.046,541,1.527,542,1.226,543,2.046,544,1.174]],["title/components/BaseListView.html",[52,1.075,161,1.304]],["body/components/BaseListView.html",[1,2.219,3,0.041,4,0.046,5,0.026,6,0.021,11,1.097,16,0.051,17,0.309,19,0.388,22,1.47,24,0.328,26,2.219,32,0.878,33,0.009,34,0.807,35,0.214,36,0.625,37,0.789,40,0.004,41,0.004,51,1.502,52,0.564,53,0.684,54,1.13,62,1.176,63,1.286,65,0.702,67,0.84,68,0.94,70,0.846,71,2.467,72,2.273,73,1.77,83,2.468,85,1.828,95,1.699,107,1.9,109,1.322,115,1.235,116,0.525,117,0.489,118,0.888,121,1.076,125,0.94,132,0.903,137,0.968,152,1.667,153,0.719,154,1.159,155,1.076,156,0.702,157,0.976,158,0.652,159,1.667,160,0.668,161,1.384,162,0.684,163,0.719,164,0.684,165,0.719,166,0.684,167,0.702,168,0.684,169,1.159,170,0.719,171,0.684,172,0.668,173,0.719,174,0.684,175,0.702,176,1.159,177,0.684,178,1.697,179,0.684,180,1.159,181,0.684,182,1.159,183,1.159,184,0.684,185,1.05,186,0.684,187,1.667,188,0.684,189,0.719,190,0.684,191,0.719,192,0.684,193,0.668,194,0.684,195,0.719,196,0.684,197,0.719,198,0.684,199,0.684,200,0.719,201,0.684,202,1.159,203,0.719,204,0.684,205,0.684,206,0.719,207,0.684,208,0.684,209,0.684,210,0.592,211,0.684,212,0.636,213,0.668,214,0.719,215,0.668,216,0.719,217,0.668,218,0.719,219,0.668,220,0.702,221,0.719,299,1.524,323,1.613,334,2.033,338,2.674,342,1.322,343,1.613,348,2.033,361,2.243,367,1.269,379,2.378,380,1.176,382,1.176,384,2.566,385,2.225,398,2.332,399,2.13,400,2.225,401,2.332,402,2.044,403,2.332,404,2.332,405,2.332,406,2.332,407,2.332,408,2.332,409,2.332,410,1.448,411,1.221,412,1.448,413,1.656,414,1.448,415,1.382,416,1.448,417,2.628,418,1.448,419,1.448,420,1.448,421,1.322,422,1.322,423,1.795,435,1.382,437,1.221,447,1.269,464,1.448,479,1.322,486,1.029,490,1.448,492,0.997,493,1.524,495,1.72,502,3.357,503,3.274,504,3.082,509,3.274,510,2.455,512,3.748,513,2.985,520,2.793,522,3.748,524,1.72,525,3.274,526,2.77,527,1.613,530,1.854,534,2.033,541,1.72,544,1.322,545,2.985,546,2.985,547,2.985,548,3.082,549,3.711,550,4.66,551,2.305,552,2.033,553,2.305,554,2.305,555,2.305,556,2.033,557,2.305,558,2.305,559,2.305,560,2.305,561,1.854,562,1.613,563,1.613,564,2.305,565,2.598,566,2.305,567,2.033,568,2.598,569,1.854,570,2.305,571,1.854,572,2.305,573,2.305,574,2.305,575,1.72,576,2.305]],["title/classes/BaseMenu.html",[42,1.101,577,3.278]],["body/classes/BaseMenu.html",[3,0.095,4,0.107,5,0.061,6,0.05,16,0.119,19,0.715,24,0.76,27,3.594,32,0.996,33,0.009,34,0.834,35,0.202,36,0.709,37,0.807,40,0.007,41,0.007,44,1.545,51,1.416,63,1.472,132,0.804,155,1.545,293,3.733,310,5.05,381,3.622,492,2.308,502,4.297,577,3.98,578,5.333,579,5.501,580,5.501,581,5.501,582,5.501,583,3.527,584,4.099,585,4.29,586,5.501,587,4.29,588,4.29,589,5.501,590,4.787,591,4.29]],["title/pipes/BoolToYesNoPipe.html",[375,3.533,592,3.533]],["body/pipes/BoolToYesNoPipe.html",[3,0.117,4,0.132,5,0.075,6,0.061,19,0.685,32,0.793,33,0.009,34,0.787,35,0.161,36,0.565,37,0.664,40,0.008,41,0.008,70,1.494,117,1.39,375,5.273,593,4.893,594,5.782,595,5.782,596,5.273,597,5.273,598,6.851]],["title/components/BqDropdownField.html",[52,1.075,162,1.304]],["body/components/BqDropdownField.html",[3,0.037,4,0.041,5,0.024,6,0.019,16,0.046,17,0.282,19,0.355,24,0.294,32,0.411,33,0.009,34,0.727,35,0.215,36,0.292,37,0.507,40,0.003,41,0.003,47,2.234,51,1.036,53,0.613,54,1.033,55,0.842,62,1.054,63,0.937,65,0.628,70,0.773,71,2.442,72,2.285,73,1.564,74,0.893,76,0.867,87,2.132,90,1.947,94,2.289,95,1.576,99,1.425,103,1.732,115,1.295,116,1.431,117,1.484,118,1.664,121,0.983,125,1.762,127,1.365,128,2.191,129,1.054,132,0.823,138,3.6,139,2.724,141,1.017,142,1.137,143,1.238,150,2.034,151,1.365,152,1.562,153,0.644,154,1.059,155,0.598,156,1.033,157,1.316,158,0.584,159,1.562,160,0.983,161,0.613,162,1.283,163,1.961,164,0.613,165,0.644,166,0.613,167,0.628,168,0.613,169,1.059,170,0.644,171,0.613,172,0.598,173,0.644,174,0.613,175,0.628,176,1.059,177,0.613,178,1.602,179,0.613,180,1.059,181,0.613,182,1.059,183,1.059,184,0.613,185,0.96,186,0.613,187,1.562,188,1.642,189,0.644,190,0.613,191,0.644,192,0.613,193,0.598,194,0.613,195,0.644,196,0.613,197,0.644,198,0.613,199,0.613,200,0.644,201,0.613,202,1.059,203,0.644,204,0.613,205,0.613,206,0.644,207,0.613,208,0.613,209,0.613,210,0.53,211,0.613,212,0.57,213,0.598,214,0.644,215,0.598,216,0.644,217,0.598,218,0.644,219,0.598,220,0.628,221,0.644,257,0.951,270,1.307,271,1.445,288,1.093,303,2.871,307,2.132,319,1.297,342,1.185,359,1.365,361,0.867,363,2.244,365,1.515,386,1.797,423,2.528,429,2.289,433,1.297,436,1.541,437,3.878,438,2.375,439,2.375,440,2.375,441,2.244,442,2.375,443,2.375,444,2.375,445,2.375,446,3.932,447,3.274,448,2.375,449,2.375,450,2.132,452,3.024,453,2.375,454,2.929,455,2.375,456,2.375,457,2.244,458,2.244,459,2.375,460,1.445,461,1.445,462,1.185,463,1.297,464,2.715,465,1.445,466,1.445,467,1.445,468,1.365,469,1.093,470,1.445,471,1.137,472,2.244,473,2.132,474,1.297,475,2.132,476,1.297,477,1.297,478,1.445,479,1.185,480,1.445,481,1.445,482,1.297,483,1.365,484,1.445,485,1.365,486,0.921,487,1.445,492,0.893,599,1.017,600,1.66,601,2.73,602,1.66,603,3.393,604,3.393,605,3.393,606,2.73,607,4.321,608,3.393,609,3.393,610,3.393,611,3.393,612,3.393,613,2.993,614,3.393,615,3.393,616,2.993,617,3.393,618,2.993,619,2.064,620,1.66,621,2.064,622,2.064,623,1.541,624,1.365,625,1.365,626,1.445,627,1.541,628,1.541,629,1.541,630,1.66,631,1.66,632,1.541,633,1.541]],["title/components/BqForm.html",[52,1.075,164,1.304]],["body/components/BqForm.html",[3,0.054,4,0.061,5,0.035,6,0.028,16,0.068,17,0.383,19,0.481,21,2.535,24,0.432,32,0.367,33,0.009,34,0.74,35,0.193,36,0.261,37,0.74,40,0.005,41,0.005,47,1.354,51,1.511,53,0.901,54,1.401,55,1.237,63,1.27,65,0.924,67,1.106,69,1.907,70,0.691,71,2.539,72,2.414,73,1.887,74,1.313,76,1.274,90,2.641,94,2.945,115,1.225,116,1.414,117,1.316,118,2.57,121,1.334,138,2.438,139,2.267,142,1.671,143,1.819,152,1.937,153,0.947,154,1.437,155,0.879,156,0.924,157,1.755,158,0.858,159,1.937,160,1.334,161,0.901,162,0.901,163,0.947,164,1.843,165,0.947,166,0.901,167,0.924,168,0.901,169,1.437,170,0.947,171,0.901,172,0.879,173,0.947,174,0.901,175,0.924,176,1.437,177,0.901,178,1.933,179,0.901,180,1.437,181,0.901,182,1.437,183,1.437,184,0.901,185,1.302,186,0.901,187,1.937,188,0.901,189,0.947,190,0.901,191,0.947,192,0.901,193,0.879,194,0.901,195,0.947,196,0.901,197,0.947,198,0.901,199,0.901,200,0.947,201,0.901,202,1.437,203,0.947,204,0.901,205,0.901,206,0.947,207,0.901,208,0.901,209,0.901,210,0.779,211,0.901,212,0.837,213,0.879,214,0.947,215,0.879,216,0.947,217,0.879,218,0.947,219,0.879,220,0.924,221,0.947,378,2.124,385,2.759,386,2.438,441,3.044,475,3.494,511,3.702,515,4.15,516,4.905,523,4.15,524,2.265,527,2.124,599,1.495,634,3.034,635,3.034,636,2.124,637,2.441,638,2.441,639,2.676,640,2.676,641,2.441,642,4.603,643,3.034,644,4.603,645,4.603,646,4.603,647,4.603,648,4.603,649,4.603,650,5.561,651,5.561,652,4.06,653,3.034,654,3.034,655,3.034]],["title/components/BqPasswordField.html",[52,1.075,166,1.304]],["body/components/BqPasswordField.html",[3,0.039,4,0.043,5,0.025,6,0.02,16,0.048,17,0.293,19,0.367,24,0.307,32,0.425,33,0.009,34,0.737,35,0.214,36,0.303,37,0.521,40,0.004,41,0.004,47,1.569,51,1.064,53,0.64,54,1.07,55,0.879,62,1.1,63,0.97,65,0.656,70,0.801,71,2.454,72,2.302,73,1.6,74,0.933,76,0.905,87,2.209,90,2.017,94,2.358,95,1.624,99,1.476,103,1.795,115,1.014,116,1.383,117,1.464,118,1.715,121,1.019,125,1.815,127,1.426,128,1.764,129,1.1,132,0.753,138,2.997,139,2.193,141,1.062,142,1.187,143,1.292,150,1.292,151,1.426,152,1.603,153,0.673,154,1.097,155,0.625,156,1.07,157,1.351,158,0.61,159,1.603,160,1.019,161,0.64,162,0.64,163,0.673,164,0.64,165,0.673,166,1.322,167,2.032,168,0.64,169,1.097,170,0.673,171,0.64,172,0.625,173,0.673,174,0.64,175,0.656,176,1.097,177,0.64,178,1.64,179,0.64,180,1.097,181,0.64,182,1.097,183,1.097,184,0.64,185,0.994,186,0.64,187,1.603,188,1.68,189,0.673,190,0.64,191,0.673,192,0.64,193,0.625,194,0.64,195,0.673,196,0.64,197,0.673,198,0.64,199,0.64,200,0.673,201,0.64,202,1.097,203,0.673,204,0.64,205,0.64,206,0.673,207,0.64,208,0.64,209,0.64,210,0.553,211,0.64,212,0.595,213,0.625,214,0.673,215,0.625,216,0.673,217,0.625,218,0.673,219,0.625,220,0.656,221,0.673,270,1.354,288,1.142,303,2.555,307,2.209,319,1.355,342,1.237,359,1.426,361,0.905,363,2.325,365,2.292,386,1.862,423,2.179,429,2.358,433,1.355,436,1.609,437,3.927,438,2.461,439,2.461,440,2.461,441,2.325,442,2.461,443,2.461,444,2.461,445,2.461,446,4.014,447,3.676,448,2.461,449,2.461,450,2.209,452,3.117,453,2.461,454,2.997,455,2.461,456,2.461,457,2.325,458,2.325,459,2.461,460,1.509,461,1.509,462,1.237,463,1.355,464,2.798,465,1.509,466,1.509,467,1.509,468,1.426,469,1.142,470,1.509,471,1.187,472,2.325,473,2.209,474,2.798,475,2.209,476,1.355,477,1.355,478,1.509,479,1.237,480,1.509,481,1.509,482,1.355,483,1.426,484,1.509,485,1.426,486,0.962,487,1.509,492,0.933,599,1.062,600,1.734,601,2.828,602,1.734,624,1.426,625,1.426,626,1.509,627,1.609,632,1.609,633,1.609,656,3.516,657,3.101,658,3.101,659,3.516,660,3.101,661,3.101,662,3.927,663,2.325,664,2.461,665,3.927,666,3.101,667,2.156,668,2.156,669,1.734,670,2.828,671,1.734,672,1.734,673,1.734,674,1.734,675,2.624,676,1.734,677,1.609]],["title/components/BqTextArea.html",[52,1.075,168,1.304]],["body/components/BqTextArea.html",[3,0.039,4,0.044,5,0.025,6,0.02,16,0.049,17,0.297,19,0.373,24,0.313,32,0.432,33,0.009,34,0.741,35,0.212,36,0.307,37,0.526,40,0.004,41,0.004,47,1.593,51,1.075,53,0.652,54,1.086,55,0.895,62,1.12,63,0.985,65,0.668,70,0.813,71,2.46,72,2.308,73,1.615,74,0.95,76,0.922,87,2.242,90,2.047,94,2.388,95,1.644,99,1.498,103,1.821,115,1.127,116,1.469,117,1.515,118,1.736,121,1.034,125,1.838,127,1.452,128,1.786,129,1.12,132,0.759,138,3.025,139,2.221,141,1.081,142,1.209,143,1.316,150,2.139,151,1.452,152,1.621,153,0.685,154,1.114,155,0.636,156,1.086,157,1.365,158,0.621,159,1.621,160,1.034,161,0.652,162,0.652,163,0.685,164,0.652,165,0.685,166,0.652,167,0.668,168,1.339,169,2.098,170,0.685,171,0.652,172,0.636,173,0.685,174,0.652,175,0.668,176,1.114,177,0.652,178,1.655,179,0.652,180,1.114,181,0.652,182,1.114,183,1.114,184,0.652,185,1.009,186,0.652,187,1.621,188,1.696,189,0.685,190,0.652,191,0.685,192,0.652,193,0.636,194,0.652,195,0.685,196,0.652,197,0.685,198,0.652,199,0.652,200,0.685,201,0.652,202,1.114,203,0.685,204,0.652,205,0.652,206,0.685,207,0.652,208,0.652,209,0.652,210,0.564,211,0.652,212,0.606,213,0.636,214,0.685,215,0.636,216,0.685,217,0.636,218,0.685,219,0.636,220,0.668,221,0.685,270,1.374,288,1.163,303,2.587,307,2.242,319,1.379,339,1.936,342,1.26,359,1.452,361,0.922,363,2.36,365,2.549,386,1.89,423,2.2,429,2.388,433,1.379,437,3.871,438,2.498,439,2.498,440,2.498,441,2.36,442,2.498,443,2.498,444,2.498,445,2.498,446,4.048,447,3.552,448,2.498,449,2.498,450,2.242,452,3.156,453,2.498,454,3.025,455,2.498,456,2.498,457,2.36,458,2.36,459,2.498,460,1.537,461,1.537,462,1.26,463,1.379,464,2.833,465,1.537,466,1.537,467,1.537,468,1.452,469,1.163,470,1.537,471,1.209,472,2.36,473,2.242,474,2.833,475,2.242,476,1.379,477,1.379,478,1.537,479,1.26,480,1.537,481,1.537,482,1.379,483,1.452,484,1.537,485,1.452,486,0.98,487,1.537,492,0.95,599,1.081,606,2.87,620,1.766,624,1.452,625,1.452,626,1.537,627,1.638,628,1.638,629,1.638,630,1.766,631,1.766,632,1.638,633,1.638,663,2.36,664,2.498,669,1.766,670,2.87,671,1.766,672,1.766,673,1.766,674,1.766,675,1.638,677,1.638,678,2.195,679,2.195,680,3.568,681,2.195,682,3.147,683,3.568,684,2.87,685,1.936,686,1.936]],["title/components/BqTextField.html",[52,1.075,171,1.304]],["body/components/BqTextField.html",[3,0.032,4,0.036,5,0.021,6,0.017,16,0.04,17,0.252,19,0.316,21,1.666,24,0.256,32,0.474,33,0.009,34,0.711,35,0.217,36,0.337,37,0.519,40,0.003,41,0.003,47,2.878,51,1.061,53,0.534,54,0.921,55,0.733,62,0.918,63,0.835,65,0.548,70,0.689,71,2.4,72,2.23,73,1.449,74,0.778,76,0.755,87,1.901,90,1.736,94,2.075,95,1.428,99,1.271,103,1.544,115,1.273,116,1.518,117,1.546,118,1.974,121,0.877,125,1.597,127,1.19,128,2.64,129,0.918,132,0.806,138,3.716,139,3.283,141,0.886,142,0.99,143,1.078,150,1.814,151,1.19,152,1.434,153,0.561,154,0.945,155,0.521,156,0.921,157,1.208,158,0.509,159,1.434,160,0.877,161,0.534,162,0.534,163,0.561,164,0.534,165,0.561,166,0.534,167,0.548,168,0.534,169,1.935,170,0.561,171,1.163,172,0.521,173,0.561,174,0.534,175,0.548,176,0.945,177,0.534,178,1.485,179,0.534,180,0.945,181,0.534,182,0.945,183,0.945,184,0.534,185,0.856,186,0.534,187,1.434,188,1.522,189,0.561,190,0.534,191,0.561,192,0.534,193,0.521,194,0.534,195,0.561,196,0.534,197,0.561,198,0.534,199,0.534,200,0.561,201,0.534,202,0.945,203,0.561,204,0.534,205,0.534,206,0.561,207,0.534,208,0.534,209,0.534,210,0.462,211,0.534,212,0.496,213,0.521,214,0.561,215,0.521,216,0.561,217,0.521,218,0.561,219,0.521,220,0.548,221,0.561,270,1.166,288,0.953,303,2.635,307,1.901,319,1.13,342,1.032,359,1.19,361,0.755,363,2.001,365,2.478,386,1.603,423,2.138,429,2.075,433,1.13,436,1.342,437,3.716,438,2.118,439,2.118,440,2.742,441,2.001,442,2.118,443,2.118,444,2.118,445,2.118,446,3.672,447,3.413,448,2.118,449,2.118,450,1.901,452,2.742,453,2.118,454,2.714,455,2.118,456,2.118,457,2.001,458,2.001,459,2.118,460,1.259,461,1.259,462,1.032,463,1.13,464,2.461,465,1.259,466,1.259,467,1.259,468,1.19,469,0.953,470,1.259,471,0.99,472,2.001,473,1.901,474,2.461,475,1.901,476,1.13,477,1.13,478,1.259,479,1.032,480,1.259,481,1.259,482,1.13,483,1.19,484,1.259,485,1.19,486,0.803,487,1.259,492,0.778,595,1.586,599,0.886,600,1.447,601,2.434,602,1.447,606,2.434,620,1.447,624,1.19,625,1.19,626,1.259,627,1.342,628,1.342,629,1.342,630,3.151,631,1.447,632,1.342,633,1.342,657,2.669,658,2.669,660,2.669,661,2.669,662,3.455,663,2.001,664,2.118,665,3.455,666,2.669,669,1.447,670,2.434,671,1.447,672,1.447,673,1.447,674,1.447,675,2.258,676,1.447,677,1.342,682,2.669,686,1.586,687,3.026,688,3.026,689,3.026,690,3.026,691,3.026,692,3.026,693,2.669,694,3.026,695,3.026,696,3.026,697,4.593,698,3.026,699,2.669,700,2.669,701,3.026,702,2.669,703,1.799,704,1.799,705,1.799,706,1.799,707,1.799,708,1.799,709,1.799,710,1.586,711,1.799,712,1.799,713,1.799,714,1.799]],["title/components/Breadcrumb.html",[52,1.075,172,1.273]],["body/components/Breadcrumb.html",[1,2.408,3,0.047,4,0.052,5,0.03,6,0.024,16,0.058,17,0.341,19,0.428,22,1.623,24,0.372,26,2.408,27,2.408,29,3.177,32,0.866,33,0.009,34,0.812,35,0.214,36,0.616,37,0.746,40,0.004,41,0.004,51,1.431,53,0.775,54,1.247,55,1.063,63,1.13,65,0.794,67,0.951,68,1.063,70,0.594,71,2.504,72,2.322,73,1.76,74,1.129,76,1.095,83,2.678,85,2.018,95,1.844,107,2.062,115,1.13,116,1.152,117,1.072,118,1.577,121,1.187,132,0.942,137,1.095,152,1.788,153,0.814,154,1.278,155,1.187,156,0.794,157,1.077,158,0.738,159,1.788,160,0.756,161,0.775,162,0.775,163,0.814,164,0.775,165,0.814,166,0.775,167,0.794,168,0.775,169,1.278,170,0.814,171,0.775,172,1.66,173,0.814,174,0.775,175,0.794,176,1.278,177,0.775,178,1.804,179,0.775,180,1.278,181,0.775,182,1.278,183,1.278,184,0.775,185,1.158,186,0.775,187,1.788,188,0.775,189,0.814,190,0.775,191,0.814,192,0.775,193,0.756,194,0.775,195,0.814,196,0.775,197,0.814,198,0.775,199,0.775,200,0.814,201,0.775,202,1.278,203,0.814,204,0.775,205,0.775,206,0.814,207,0.775,208,0.775,209,0.775,210,0.67,211,0.775,212,0.72,213,0.756,214,0.814,215,0.756,216,0.814,217,0.756,218,0.814,219,0.756,220,0.794,221,0.814,257,1.202,310,1.564,338,2.35,367,1.436,379,2.581,380,1.331,382,1.331,384,2.784,398,2.573,399,2.35,400,2.455,401,2.573,402,2.255,403,2.573,404,2.573,405,2.573,406,2.573,407,2.573,408,2.573,409,2.573,410,1.639,411,1.381,412,1.639,413,1.164,414,1.639,415,1.564,416,1.639,417,2.405,418,1.639,419,1.639,420,1.639,421,1.497,422,1.497,423,1.948,471,2.255,492,1.129,504,3.344,510,2.709,583,1.725,715,2.608,716,4.095,717,2.608,718,4.095,719,2.867,720,4.095,721,5.056,722,3.789,723,2.608]],["title/classes/Channel.html",[42,1.101,724,3.874]],["body/classes/Channel.html",[3,0.097,4,0.108,5,0.062,6,0.05,16,0.12,17,0.574,19,0.72,24,0.769,32,1,33,0.009,34,0.837,35,0.211,36,0.689,37,0.769,40,0.007,41,0.007,44,1.564,51,1.572,116,1.23,117,1.145,132,0.972,417,3.187,429,2.859,434,3.097,542,4.794,724,4.761,725,3.778,726,6.078,727,6.891,728,6.891,729,6.078,730,6.891,731,5.397,732,5.397,733,5.397,734,5.397]],["title/directives/CompareDirective.html",[215,1.273,391,3.074]],["body/directives/CompareDirective.html",[3,0.103,4,0.116,5,0.066,6,0.054,16,0.129,19,0.752,24,1.025,32,0.699,33,0.009,34,0.586,35,0.192,36,0.498,37,0.586,40,0.007,41,0.007,67,2.107,70,1.316,71,1.634,99,3.02,115,1.14,128,2.289,132,0.68,212,1.595,215,2.085,303,3.315,335,4.647,378,4.044,423,2.771,450,4.52,636,4.044,735,5.096,736,5.096,737,5.778,738,5.096,739,7.438,740,7.193,741,5.778,742,7.193,743,5.778,744,5.778]],["title/directives/ControlContainerDirective.html",[217,1.273,391,3.074]],["body/directives/ControlContainerDirective.html",[3,0.11,4,0.124,5,0.07,6,0.057,9,1.624,33,0.008,40,0.008,41,0.008,52,1.834,70,1.407,71,1.746,116,1.407,157,1.97,212,1.704,217,1.789,287,4.608,378,4.322,394,4.492,474,3.879,528,5.446,745,5.446,746,6.174,747,5.446,748,5.446,749,5.446,750,6.174,751,6.174,752,6.174,753,6.174,754,6.174,755,6.174,756,6.174,757,6.174,758,6.174,759,6.174,760,6.174,761,6.174,762,6.174,763,5.446,764,6.174]],["title/components/CustomFilter.html",[52,1.075,177,1.304]],["body/components/CustomFilter.html",[3,0.045,4,0.05,5,0.029,6,0.023,16,0.056,17,0.33,19,0.414,24,0.565,32,0.678,33,0.009,34,0.754,35,0.202,36,0.482,37,0.618,40,0.004,41,0.004,51,1.264,53,0.743,54,1.207,55,1.617,63,1.094,65,0.762,67,0.913,68,1.021,70,0.57,71,2.494,72,2.332,73,1.726,76,1.051,95,1.795,99,1.665,103,2.024,115,0.971,116,1.39,117,1.54,118,2.157,121,1.149,125,1.617,128,1.95,129,1.278,132,0.466,152,1.748,153,0.781,154,1.238,155,0.725,156,0.762,157,1.043,158,0.708,159,1.748,160,0.725,161,0.743,162,0.743,163,0.781,164,0.743,165,0.781,166,0.743,167,0.762,168,0.743,169,1.238,170,0.781,171,0.743,172,0.725,173,0.781,174,0.743,175,0.762,176,1.238,177,1.462,178,2.044,179,1.663,180,1.238,181,0.743,182,1.238,183,1.238,184,0.743,185,1.121,186,0.743,187,1.748,188,0.743,189,0.781,190,0.743,191,0.781,192,0.743,193,0.725,194,0.743,195,0.781,196,0.743,197,0.781,198,0.743,199,0.743,200,0.781,201,0.743,202,1.238,203,0.781,204,2.02,205,0.743,206,0.781,207,0.743,208,0.743,209,0.743,210,0.643,211,0.743,212,0.691,213,0.725,214,0.781,215,0.725,216,0.781,217,0.725,218,0.781,219,0.725,220,0.762,221,0.781,402,3.083,464,3.518,485,3.703,565,2.775,568,1.752,599,1.233,624,4.665,675,4.179,693,3.497,765,1.573,766,2.208,767,6.52,768,6.221,769,7.053,770,7.053,771,5.599,772,5.599,773,5.599,774,2.503,775,3.965,776,3.965,777,3.965,778,3.965,779,3.965,780,3.965,781,3.965,782,3.189,783,3.965,784,3.965,785,3.965,786,3.965,787,3.965,788,3.965,789,3.965,790,1.656,791,2.503,792,2.503,793,2.951,794,3.965,795,2.503,796,2.503,797,2.208,798,5.599]],["title/interfaces/CustomUserMenus.html",[222,1.48,356,3.533]],["body/interfaces/CustomUserMenus.html",[3,0.103,4,0.115,5,0.066,6,0.067,9,1.51,16,0.128,17,0.596,33,0.009,35,0.207,36,0.705,40,0.007,41,0.007,63,1.977,121,1.664,125,2.341,132,1.051,179,1.705,224,2.211,279,5.166,283,3.161,284,3.161,338,3.294,354,4.285,356,4.618,357,5.064,358,5.166,477,4.908,563,4.019,799,4.285,800,6.889,801,6.889]],["title/classes/DataServiceOptions.html",[42,1.101,802,3.533]],["body/classes/DataServiceOptions.html",[3,0.112,4,0.125,5,0.071,6,0.058,16,0.139,17,0.628,33,0.009,35,0.215,36,0.755,40,0.008,41,0.008,44,1.808,132,0.99,802,5.018,803,5.018,804,4.656,805,6.65,806,6.65,807,6.65]],["title/injectables/DialogService.html",[0,1.96,83,2.326]],["body/injectables/DialogService.html",[2,2.179,3,0.09,4,0.101,5,0.057,6,0.047,9,1.324,11,2.397,16,0.112,17,0.548,19,0.689,24,0.718,32,0.943,33,0.009,34,0.79,35,0.199,36,0.671,37,0.744,40,0.007,41,0.007,51,1.521,62,2.57,83,2.667,116,1.147,117,1.068,132,1.043,411,2.667,462,4.639,486,2.247,808,5.035,809,5.035,810,7.344,811,5.035,812,6.588,813,6.588,814,6.588,815,5.035,816,7.344,817,5.035,818,8.294,819,5.481,820,5.035,821,6.588,822,6.871,823,6.588,824,5.035,825,5.811]],["title/interfaces/Dictionary.html",[141,2.164,222,1.48]],["body/interfaces/Dictionary.html",[3,0.122,4,0.137,5,0.078,6,0.064,33,0.008,40,0.008,41,0.008,132,0.803,141,3.364,224,2.63,413,3.048,434,3.918,826,3.364,827,2.955,828,6.829]],["title/directives/DynamicHostDirective.html",[219,1.273,391,3.074]],["body/directives/DynamicHostDirective.html",[3,0.114,4,0.128,5,0.073,6,0.059,16,0.142,17,0.635,24,0.908,32,0.771,33,0.009,34,0.646,35,0.187,36,0.549,40,0.008,41,0.008,70,1.451,71,1.801,212,1.758,219,1.846,220,1.939,270,2.941,829,6.37,830,6.37,831,8.801,832,6.37]],["title/components/DynamicLoaderComponent.html",[52,1.075,181,1.304]],["body/components/DynamicLoaderComponent.html",[3,0.066,4,0.074,5,0.042,6,0.034,16,0.082,17,0.442,19,0.556,24,0.525,27,3.249,32,0.446,33,0.009,34,0.787,35,0.131,36,0.318,37,0.632,40,0.005,41,0.005,47,1.645,51,1.291,53,1.095,54,1.618,63,1.467,65,1.122,67,1.344,69,2.316,70,0.84,71,2.578,72,2.436,73,2.046,94,3.302,121,1.54,128,1.46,139,1.816,152,2.13,153,1.151,154,1.659,155,1.068,156,1.122,157,1.398,158,1.042,159,2.13,160,1.068,161,1.095,162,1.095,163,1.151,164,1.095,165,1.151,166,1.095,167,1.122,168,1.095,169,1.659,170,1.151,171,1.095,172,1.068,173,1.151,174,1.095,175,1.122,176,1.659,177,1.095,178,2.096,179,1.095,180,1.659,181,1.852,182,1.946,183,1.659,184,1.095,185,1.503,186,1.095,187,2.13,188,1.095,189,1.151,190,1.095,191,1.151,192,1.095,193,1.068,194,1.095,195,1.151,196,1.095,197,1.151,198,1.095,199,1.095,200,1.151,201,1.095,202,1.659,203,1.151,204,1.095,205,1.095,206,1.151,207,1.095,208,1.095,209,1.095,210,0.946,211,1.095,212,1.017,213,1.068,214,1.151,215,1.068,216,1.151,217,1.068,218,1.151,219,1.54,220,1.122,221,1.151,381,2.815,394,2.21,493,2.438,520,3.737,584,3.186,722,3.516,833,3.251,834,2.965,835,4.688,836,5.499,837,2.965,838,2.58,839,3.251]],["title/components/DynamicMDILoaderComponent.html",[52,1.075,184,1.304]],["body/components/DynamicMDILoaderComponent.html",[3,0.064,4,0.072,5,0.041,6,0.033,16,0.08,17,0.435,19,0.546,24,0.513,27,3.213,32,0.435,33,0.009,34,0.782,35,0.166,36,0.31,37,0.623,40,0.005,41,0.005,47,1.606,51,1.273,52,1.278,53,1.068,54,1.59,63,1.442,65,1.095,67,1.312,69,2.261,70,0.82,71,2.573,72,2.429,73,2.026,94,3.257,99,2.193,121,1.514,128,1.425,139,1.772,152,2.106,153,1.123,154,1.63,155,1.043,156,1.095,157,1.374,158,1.017,159,2.106,160,1.043,161,1.068,162,1.068,163,1.123,164,1.068,165,1.123,166,1.068,167,1.095,168,1.068,169,1.63,170,1.123,171,1.068,172,1.043,173,1.123,174,1.068,175,1.095,176,1.63,177,1.068,178,2.076,179,1.068,180,1.63,181,1.068,182,1.919,183,1.63,184,1.826,185,1.739,186,1.068,187,2.106,188,1.068,189,1.123,190,1.068,191,1.123,192,1.068,193,1.043,194,1.068,195,1.123,196,1.068,197,1.123,198,1.068,199,1.068,200,1.123,201,1.068,202,1.63,203,1.123,204,1.068,205,1.068,206,1.123,207,1.068,208,1.068,209,1.068,210,0.924,211,1.068,212,0.993,213,1.043,214,1.123,215,1.043,216,1.123,217,1.043,218,1.123,219,1.514,220,1.095,221,1.123,381,2.766,394,2.157,493,2.38,520,3.686,584,3.131,722,3.455,833,3.173,834,2.894,835,4.607,836,5.424,837,2.894,838,2.518,839,3.173,840,4.589]],["title/interfaces/EnumItem.html",[222,1.48,623,3.278]],["body/interfaces/EnumItem.html",[3,0.116,4,0.131,5,0.074,6,0.061,16,0.145,17,0.644,33,0.009,34,0.836,35,0.19,40,0.008,41,0.008,132,0.91,224,2.507,365,3.452,429,4.371,623,4.857,826,3.206,827,2.816]],["title/interfaces/FailureAuthenticationResult.html",[222,1.48,841,3.533]],["body/interfaces/FailureAuthenticationResult.html",[3,0.116,4,0.131,5,0.074,6,0.061,16,0.145,17,0.644,33,0.009,35,0.19,40,0.008,41,0.008,132,0.91,224,2.507,225,2.905,269,4.09,417,3.465,841,5.235,842,5.776,843,7.734]],["title/classes/FilterByClause.html",[42,1.101,790,2.905]],["body/classes/FilterByClause.html",[3,0.086,4,0.097,5,0.055,6,0.045,16,0.108,17,0.533,19,0.669,32,0.583,33,0.009,34,0.488,35,0.213,36,0.415,37,0.728,40,0.006,41,0.006,44,1.397,47,2.857,115,0.951,116,1.098,117,1.524,132,1.021,270,3.526,423,1.856,437,3.391,454,3.807,469,3.391,652,6.34,782,5.149,790,4.234,793,3.837,827,2.086,844,3.597,845,6.401,846,5.646,847,6.401,848,5.646,849,6.401,850,5.646,851,6.401,852,7.187,853,4.82]],["title/components/FooterBar.html",[52,1.075,186,1.304]],["body/components/FooterBar.html",[1,2.414,3,0.047,4,0.053,5,0.03,6,0.024,16,0.058,17,0.342,19,0.429,22,1.628,24,0.586,26,2.414,32,0.837,33,0.009,34,0.803,35,0.212,36,0.596,37,0.726,40,0.004,41,0.004,51,1.37,53,0.778,54,1.251,55,1.068,63,1.134,64,1.733,65,2.107,67,0.955,68,1.068,70,0.597,71,2.505,72,2.359,73,1.764,74,1.134,76,1.1,83,2.686,85,2.024,95,1.849,99,1.725,102,3.625,107,2.067,115,1.133,116,0.936,117,0.872,118,1.583,121,1.191,125,1.068,126,2.311,127,2.718,128,1.038,132,0.953,137,1.1,146,2.311,147,2.107,148,2.107,149,2.311,150,1.57,151,1.733,152,1.792,153,0.818,154,1.283,155,1.191,156,0.798,157,1.081,158,0.741,159,1.792,160,0.759,161,0.778,162,0.778,163,0.818,164,0.778,165,0.818,166,0.778,167,0.798,168,0.778,169,1.283,170,0.818,171,0.778,172,0.759,173,0.818,174,0.778,175,0.798,176,1.283,177,0.778,178,1.808,179,0.778,180,1.283,181,0.778,182,1.283,183,1.283,184,0.778,185,1.162,186,1.506,187,1.792,188,0.778,189,0.818,190,0.778,191,0.818,192,0.778,193,0.759,194,0.778,195,0.818,196,0.778,197,0.818,198,0.778,199,0.778,200,0.818,201,0.778,202,1.283,203,0.818,204,0.778,205,0.778,206,0.818,207,0.778,208,0.778,209,0.778,210,0.673,211,0.778,212,0.723,213,0.759,214,0.818,215,0.759,216,0.818,217,0.759,218,0.818,219,0.759,220,0.798,221,0.818,290,3.784,338,2.358,365,1.169,379,2.588,380,1.337,382,1.337,384,2.792,398,2.582,399,2.358,400,2.463,401,2.582,402,3.162,403,2.582,404,2.582,405,2.582,406,2.582,407,2.582,408,2.582,409,2.582,410,1.646,411,1.388,412,1.646,413,1.169,414,1.646,415,1.57,416,1.646,417,2.411,418,1.646,419,1.646,420,1.646,421,1.503,422,1.503,423,1.009,492,1.134,854,2.62,855,2.62,856,1.955,857,3.305,858,2.107,859,5.071,860,5.071,861,2.62,862,2.62]],["title/components/FormBlock.html",[52,1.075,188,1.304]],["body/components/FormBlock.html",[3,0.067,4,0.075,5,0.043,6,0.035,16,0.084,19,0.562,24,0.767,33,0.009,34,0.768,35,0.092,37,0.38,40,0.005,41,0.005,51,0.776,53,1.113,54,1.638,55,1.528,63,1.485,65,1.141,67,1.366,68,1.528,70,0.854,71,2.581,72,2.45,73,2.059,74,1.622,76,1.573,95,2.294,99,2.259,116,0.854,117,0.795,121,1.559,152,2.146,153,1.17,154,1.679,155,1.086,156,1.141,157,1.993,158,1.06,159,2.146,160,1.086,161,1.113,162,1.113,163,1.17,164,1.598,165,1.17,166,1.113,167,1.141,168,1.113,169,1.679,170,1.17,171,1.113,172,1.086,173,1.17,174,1.113,175,1.141,176,1.679,177,1.113,178,2.11,179,1.113,180,1.679,181,1.113,182,1.679,183,1.679,184,1.113,185,1.521,186,1.113,187,2.146,188,1.869,189,1.17,190,1.113,191,1.17,192,1.113,193,1.086,194,1.113,195,1.17,196,1.113,197,1.17,198,1.113,199,1.113,200,1.17,201,1.113,202,1.679,203,1.17,204,1.113,205,1.113,206,1.17,207,1.113,208,1.113,209,1.113,210,0.962,211,1.113,212,1.034,213,1.086,214,1.17,215,1.086,216,1.17,217,1.086,218,1.17,219,1.086,220,1.141,221,1.17,365,1.672,378,2.623,458,3.558,472,2.478,636,2.623,637,3.014,638,3.014,639,3.305,640,3.305,641,3.014,863,3.747,864,3.747,865,3.747,866,5.379,867,3.747,868,3.014]],["title/injectables/GenericDataService.html",[0,1.96,541,3.278]],["body/injectables/GenericDataService.html",[2,1.835,3,0.076,4,0.085,5,0.048,6,0.039,9,1.115,11,2.019,16,0.095,19,0.613,22,2.325,24,0.604,32,1.036,33,0.009,34,0.8,35,0.213,36,0.68,37,0.8,40,0.006,41,0.006,51,0.878,70,1.738,115,1.158,137,2.465,257,3.903,270,3.263,302,2.805,361,3.05,434,4.64,447,3.707,515,5.023,520,4.035,523,5.023,532,3.411,541,3.165,544,4.526,548,4.452,561,3.411,802,4.721,803,3.411,804,3.165,869,6.731,870,4.241,871,3.411,872,4.241,873,4.241,874,5.87,875,5.87,876,3.165,877,4.381,878,4.381,879,3.165,880,4.241,881,5.87,882,4.241,883,3.741,884,4.241,885,3.741,886,4.241,887,4.241,888,4.241,889,4.241,890,4.241,891,5.87]],["title/interfaces/IBaseEvents.html",[222,1.48,892,3.278]],["body/interfaces/IBaseEvents.html",[3,0.117,4,0.132,5,0.075,6,0.061,16,0.146,19,0.812,33,0.009,37,0.787,40,0.008,41,0.008,51,1.608,224,2.525,826,3.23,827,2.837,892,4.893,893,6.658,894,6.658]],["title/interfaces/IBaseFormViewEvents.html",[222,1.48,895,3.533]],["body/interfaces/IBaseFormViewEvents.html",[3,0.103,4,0.115,5,0.066,6,0.053,9,1.51,11,3.411,16,0.128,19,0.816,33,0.008,37,0.726,40,0.007,41,0.007,42,1.439,51,1.484,72,1.584,157,1.51,158,1.623,210,1.839,224,2.211,288,3.041,313,4.019,361,2.411,435,3.442,451,4.285,479,3.294,490,3.608,492,2.484,545,4.618,575,4.285,892,4.285,893,6.282,894,6.282,895,4.618,896,5.064,897,5.064,898,5.064,899,4.618,900,3.797,901,5.064,902,5.064,903,5.763,904,5.347,905,5.064,906,5.064,907,4.618,908,4.285,909,5.064,910,4.285,911,5.064,912,5.064,913,5.064]],["title/interfaces/IBaseListViewEvents.html",[222,1.48,914,3.533]],["body/interfaces/IBaseListViewEvents.html",[3,0.103,4,0.115,5,0.066,6,0.053,9,1.51,11,3.411,16,0.128,19,0.816,33,0.008,37,0.726,40,0.007,41,0.007,42,1.439,51,1.484,72,1.584,109,3.294,158,1.623,210,1.839,224,2.211,288,3.041,313,4.019,361,2.411,435,3.442,451,4.285,479,3.294,490,3.608,492,2.484,545,4.618,575,4.285,892,4.285,893,6.282,894,6.282,896,5.064,897,5.064,898,5.064,899,4.618,900,3.797,901,5.064,902,5.064,903,5.763,904,5.347,905,5.064,906,5.064,907,4.618,908,4.285,909,5.064,910,4.285,911,5.064,912,5.064,913,5.064,914,4.618]],["title/interfaces/IBaseView.html",[222,1.48,495,3.278]],["body/interfaces/IBaseView.html",[3,0.112,4,0.126,5,0.072,6,0.058,16,0.14,19,0.791,32,0.76,33,0.009,34,0.637,35,0.154,36,0.541,37,0.824,40,0.008,41,0.008,51,1.301,115,1.494,224,2.42,413,2.803,435,3.766,490,3.947,495,4.688,512,6.537,513,6.09,522,6.537,530,5.052]],["title/interfaces/IEditFormViewEvents.html",[222,1.48,915,3.533]],["body/interfaces/IEditFormViewEvents.html",[3,0.109,4,0.123,5,0.07,6,0.057,16,0.136,19,0.778,33,0.008,37,0.755,40,0.008,41,0.008,115,1.469,128,2.95,157,1.607,224,2.354,361,3.127,435,3.663,490,3.84,515,4.561,523,4.561,903,5.989,904,5.557,915,4.915,916,8.031,917,8.031,918,5.39,919,7.446,920,6.111,921,7.446,922,7.446,923,6.111]],["title/interfaces/INavigationState.html",[222,1.48,924,3.278]],["body/interfaces/INavigationState.html",[3,0.119,4,0.134,5,0.076,6,0.062,16,0.149,17,0.653,33,0.008,35,0.164,40,0.008,41,0.008,132,0.923,224,2.572,225,2.98,924,4.983,925,5.89,926,6.709]],["title/interfaces/INavigationState-1.html",[222,1.233,924,2.731,927,2.943]],["body/interfaces/INavigationState-1.html",[3,0.119,4,0.134,5,0.076,6,0.062,16,0.149,17,0.653,33,0.008,35,0.164,40,0.008,41,0.008,132,0.923,224,2.572,225,2.98,924,4.983,926,6.709,928,5.89]],["title/interfaces/IUser.html",[222,1.48,422,2.52]],["body/interfaces/IUser.html",[3,0.107,4,0.12,5,0.068,6,0.056,16,0.134,17,0.612,33,0.009,34,0.807,35,0.204,36,0.764,40,0.007,41,0.007,132,1.044,224,2.307,225,2.673,269,3.763,415,4.772,422,3.436,929,7.96,930,7.96]],["title/injectables/InternalLogService.html",[0,1.96,931,3.533]],["body/injectables/InternalLogService.html",[2,1.681,3,0.125,4,0.078,5,0.044,6,0.036,16,0.087,17,0.459,19,0.577,24,0.554,31,3.65,32,0.993,33,0.009,34,0.831,35,0.207,36,0.707,37,0.843,40,0.006,41,0.006,47,2.463,51,1.67,115,1.089,116,1.257,117,1.17,128,1.539,132,1.015,372,2.569,380,2.817,399,3.683,411,3.702,417,2.935,492,1.681,502,4.392,819,5.889,931,3.125,932,2.139,933,5.51,934,4.439,935,4.868,936,4.623,937,5.163,938,5.163,939,4.19,940,4.868,941,4.439,942,3.426,943,3.426,944,3.426,945,5.51,946,4.119,947,3.426,948,3.426,949,7.496,950,6.766,951,3.426,952,3.426,953,3.426,954,3.426,955,3.426,956,3.426,957,3.426,958,3.125,959,3.426]],["title/classes/LocaleId.html",[42,1.101,960,3.278]],["body/classes/LocaleId.html",[3,0.113,4,0.127,5,0.072,6,0.059,16,0.141,19,0.793,24,0.898,32,0.763,33,0.009,34,0.639,35,0.155,36,0.543,37,0.769,40,0.008,41,0.008,44,1.827,132,0.957,379,4.155,492,2.728,850,7.18,960,4.704,961,5.07,962,8.14,963,6.303]],["title/injectables/LocaleService.html",[0,1.96,379,2.242]],["body/injectables/LocaleService.html",[2,2.149,3,0.089,4,0.1,5,0.057,6,0.046,9,1.306,11,2.364,16,0.111,19,0.682,21,3.595,24,0.708,32,1,33,0.009,34,0.837,35,0.203,36,0.712,37,0.816,40,0.007,41,0.007,51,1.51,116,1.131,117,1.053,132,1.026,257,3.008,379,3.723,402,3.595,421,3.746,876,3.706,877,4.873,879,3.706,960,5.783,961,3.994,964,4.966,965,6.529,966,6.529,967,6.529,968,6.529,969,6.529,970,6.529,971,6.529,972,4.966,973,6.529,974,4.966,975,4.966,976,6.529,977,4.966,978,4.966,979,4.966]],["title/classes/LogConsole.html",[42,1.101,980,3.874]],["body/classes/LogConsole.html",[3,0.107,4,0.12,5,0.068,6,0.056,9,1.57,16,0.133,17,0.611,19,0.767,24,1.046,32,0.722,33,0.009,34,0.605,35,0.195,36,0.514,37,0.744,40,0.007,41,0.007,44,1.73,115,1.178,132,0.702,257,3.382,317,5.138,372,3.948,492,2.583,932,3.287,936,5.257,939,4.765,980,5.265,981,5.969,982,4.455,983,4.178,984,5.478,985,5.265,986,5.138]],["title/classes/LogEntry.html",[42,1.101,986,3.074]],["body/classes/LogEntry.html",[3,0.099,4,0.111,5,0.063,6,0.051,9,1.454,16,0.123,17,0.582,19,0.731,33,0.009,35,0.204,37,0.709,40,0.007,41,0.007,44,1.602,115,1.091,116,1.838,117,1.711,128,2.191,132,0.979,372,4.628,417,2.938,433,4.397,486,2.468,932,3.045,933,5.223,934,5.629,939,4.195,945,4.127,986,3.871,987,4.877,988,6.998,989,6.998,990,7.677,991,7.677,992,5.53,993,4.877]],["title/classes/LogLocalStorage.html",[42,1.101,994,3.874]],["body/classes/LogLocalStorage.html",[3,0.106,4,0.12,5,0.068,6,0.055,9,1.565,16,0.133,17,0.61,19,0.766,24,1.044,32,0.72,33,0.009,34,0.603,35,0.195,36,0.513,37,0.742,40,0.007,41,0.007,44,1.724,115,1.174,132,0.7,257,3.375,317,5.127,372,3.935,492,2.575,932,3.276,936,5.249,939,4.758,983,4.165,984,5.467,985,5.248,986,5.127,994,5.248,995,5.95,996,5.95,997,5.95]],["title/classes/LogPublisher.html",[42,1.101,983,3.074]],["body/classes/LogPublisher.html",[3,0.104,4,0.117,5,0.067,6,0.054,9,1.534,16,0.13,17,0.602,19,0.756,32,0.706,33,0.009,34,0.591,35,0.193,36,0.503,37,0.733,40,0.007,41,0.007,42,1.462,44,1.691,115,1.151,132,0.686,158,1.65,179,1.733,257,3.334,317,5.066,451,6.311,535,5.146,636,4.084,932,3.213,936,5.204,939,4.716,982,4.354,983,4.084,984,5.401,986,5.066,998,5.146,999,5.834,1000,5.146,1001,5.834]],["title/classes/LogPublisherConfig.html",[42,1.101,1002,3.874]],["body/classes/LogPublisherConfig.html",[3,0.113,4,0.127,5,0.072,6,0.059,9,1.663,16,0.141,17,0.633,22,2.506,33,0.009,35,0.208,40,0.008,41,0.008,44,1.833,115,1.5,132,0.894,932,3.483,984,5.674,998,5.579,1002,5.579,1003,7.603,1004,7.603,1005,7.603]],["title/injectables/LogPublishersService.html",[0,1.96,31,2.905]],["body/injectables/LogPublishersService.html",[2,2.453,3,0.101,4,0.143,5,0.065,6,0.053,9,1.491,11,2.699,16,0.126,19,0.743,21,3.914,22,2.246,24,0.808,31,3.749,32,0.86,33,0.009,34,0.72,35,0.175,36,0.612,37,0.825,40,0.007,41,0.007,51,1.472,116,1.292,257,2.612,876,4.231,877,5.305,879,4.231,932,3.122,939,4.261,982,6.259,983,5.436,993,5,1006,5.669,1007,7.108,1008,7.766,1009,7.766,1010,5.669,1011,5.669,1012,5.669]],["title/injectables/LogService.html",[0,1.96,380,2.242]],["body/injectables/LogService.html",[2,1.681,3,0.125,4,0.078,5,0.044,6,0.036,9,1.022,11,1.85,16,0.087,17,0.459,19,0.577,24,0.554,31,3.65,32,0.993,33,0.009,34,0.831,35,0.207,36,0.707,37,0.831,40,0.006,41,0.006,42,0.974,51,1.67,115,1.089,116,1.257,117,1.17,128,1.539,132,1.015,372,3.65,380,1.983,411,3.702,417,2.935,502,4.392,819,5.889,932,2.139,933,5.51,934,4.439,935,4.868,936,4.623,937,5.163,938,5.163,939,4.598,940,4.868,941,4.439,942,3.426,943,3.426,944,3.426,945,5.51,946,4.119,947,3.426,948,3.426,949,7.496,950,6.766,951,3.426,952,3.426,953,3.426,954,3.426,955,3.426,956,3.426,957,3.426,958,3.125,959,3.426,982,2.899,1013,3.885,1014,3.885,1015,3.885]],["title/components/LoginComponent.html",[52,1.075,190,1.304]],["body/components/LoginComponent.html",[3,0.066,4,0.074,5,0.042,6,0.034,16,0.082,17,0.443,19,0.556,24,0.526,27,3.252,32,0.447,33,0.009,34,0.788,35,0.091,36,0.318,37,0.374,40,0.005,41,0.005,53,1.097,54,1.621,55,1.506,63,1.469,65,1.124,67,1.347,68,1.506,70,0.842,71,2.578,72,2.437,73,2.133,74,1.598,76,1.551,95,2.276,107,2.545,116,0.842,117,0.783,121,1.543,152,2.132,153,1.153,154,1.662,155,1.07,156,1.124,157,1.4,158,1.044,159,2.132,160,1.07,161,1.097,162,1.097,163,1.153,164,1.097,165,1.153,166,1.097,167,1.124,168,1.097,169,1.662,170,1.153,171,1.097,172,1.07,173,1.153,174,1.097,175,1.124,176,1.662,177,1.097,178,2.098,179,1.097,180,1.662,181,1.097,182,1.662,183,1.662,184,1.097,185,1.505,186,1.097,187,2.132,188,1.097,189,1.153,190,1.854,191,1.153,192,1.097,193,1.543,194,1.097,195,1.153,196,1.097,197,1.153,198,1.097,199,1.097,200,1.153,201,1.097,202,1.662,203,1.153,204,1.097,205,1.097,206,1.153,207,1.097,208,1.097,209,1.097,210,0.948,211,1.097,212,1.019,213,1.07,214,1.153,215,1.07,216,1.153,217,1.07,218,1.153,219,1.07,220,1.124,221,1.153,225,1.648,270,2.05,271,4.369,417,2.621,486,1.648,722,4.518,925,3.258,1016,5.323,1017,3.693,1018,2.971,1019,2.971]],["title/components/LoginMenuComponent.html",[52,1.075,192,1.304]],["body/components/LoginMenuComponent.html",[3,0.065,4,0.073,5,0.042,6,0.034,16,0.081,17,0.439,19,0.551,24,0.52,32,0.442,33,0.009,34,0.785,35,0.152,36,0.314,37,0.37,40,0.005,41,0.005,51,0.756,53,1.084,54,1.606,55,1.488,63,1.711,65,1.111,67,1.33,68,1.488,70,0.831,71,2.576,72,2.433,73,2.124,74,1.579,76,1.532,85,2.599,95,2.26,107,2.527,121,1.529,152,2.12,153,1.139,154,1.647,155,1.057,156,1.111,157,1.388,158,1.032,159,2.12,160,1.057,161,1.084,162,1.084,163,1.139,164,1.084,165,1.139,166,1.084,167,1.111,168,1.084,169,1.647,170,1.139,171,1.084,172,1.057,173,1.139,174,1.084,175,1.111,176,1.647,177,1.084,178,2.088,179,1.084,180,1.647,181,1.084,182,1.647,183,1.647,184,1.084,185,1.492,186,1.084,187,2.12,188,1.084,189,1.139,190,1.084,191,1.139,192,1.841,193,2.176,194,1.084,195,1.139,196,1.084,197,1.139,198,1.084,199,1.084,200,1.139,201,1.084,202,1.647,203,1.139,204,1.084,205,1.084,206,1.139,207,1.084,208,1.084,209,1.084,210,0.937,211,1.084,212,1.007,213,1.057,214,1.139,215,1.057,216,1.139,217,1.057,218,1.139,219,1.057,220,1.111,221,1.139,225,1.628,239,2.413,245,2.935,257,2.431,270,2.616,271,2.554,1018,2.935,1020,3.649,1021,3.649,1022,3.649,1023,5.277,1024,3.649,1025,6.198,1026,3.649]],["title/components/LogoutComponent.html",[52,1.075,194,1.304]],["body/components/LogoutComponent.html",[3,0.066,4,0.074,5,0.042,6,0.034,16,0.082,17,0.443,19,0.556,24,0.526,27,3.252,32,0.447,33,0.009,34,0.788,35,0.091,36,0.318,37,0.374,40,0.005,41,0.005,53,1.097,54,1.621,55,1.506,63,1.469,65,1.124,67,1.347,68,1.506,70,0.842,71,2.578,72,2.437,73,2.133,74,1.598,76,1.551,95,2.276,107,2.545,116,0.842,117,0.783,121,1.543,152,2.132,153,1.153,154,1.662,155,1.07,156,1.124,157,1.4,158,1.044,159,2.132,160,1.07,161,1.097,162,1.097,163,1.153,164,1.097,165,1.153,166,1.097,167,1.124,168,1.097,169,1.662,170,1.153,171,1.097,172,1.07,173,1.153,174,1.097,175,1.124,176,1.662,177,1.097,178,2.098,179,1.097,180,1.662,181,1.097,182,1.662,183,1.662,184,1.097,185,1.505,186,1.097,187,2.132,188,1.097,189,1.153,190,1.097,191,1.153,192,1.097,193,1.07,194,1.854,195,1.153,196,1.097,197,1.153,198,1.097,199,1.097,200,1.153,201,1.097,202,1.662,203,1.153,204,1.097,205,1.097,206,1.153,207,1.097,208,1.097,209,1.097,210,0.948,211,1.097,212,1.019,213,1.07,214,1.153,215,1.07,216,1.153,217,1.07,218,1.153,219,1.07,220,1.124,221,1.153,225,1.648,239,2.443,270,2.05,271,4.369,417,2.621,486,1.648,722,4.518,928,3.258,1018,2.971,1019,2.971,1027,5.323,1028,3.693]],["title/components/MDIComponent.html",[52,1.075,196,1.304]],["body/components/MDIComponent.html",[3,0.066,4,0.074,5,0.042,6,0.034,9,0.971,16,0.082,17,0.443,19,0.556,24,0.526,32,0.644,33,0.009,34,0.806,35,0.153,36,0.459,37,0.54,40,0.005,41,0.005,51,1.102,53,1.097,54,1.621,61,2.585,62,1.885,63,1.469,65,1.124,70,0.842,71,2.578,72,2.446,73,2.047,121,1.543,152,2.132,153,1.153,154,1.662,155,1.07,156,1.124,157,1.4,158,1.044,159,2.132,160,1.07,161,1.097,162,1.097,163,1.153,164,1.097,165,1.153,166,1.097,167,1.124,168,1.097,169,1.662,170,1.153,171,1.097,172,1.07,173,1.153,174,1.097,175,1.124,176,1.662,177,1.097,178,2.098,179,1.097,180,1.662,181,1.097,182,1.662,183,1.662,184,1.097,185,1.931,186,1.097,187,2.132,188,1.097,189,1.153,190,1.097,191,1.153,192,1.097,193,1.07,194,1.097,195,1.153,196,1.854,197,1.153,198,1.097,199,1.097,200,1.153,201,1.097,202,1.662,203,1.153,204,1.097,205,1.097,206,1.153,207,1.097,208,1.097,209,1.097,210,1.602,211,1.097,212,1.019,213,1.07,214,1.153,215,1.07,216,1.153,217,1.07,218,1.153,219,1.07,220,1.124,221,1.153,270,2.05,336,3.258,337,2.585,342,2.119,381,3.306,394,2.214,584,3.741,1029,3.693,1030,3.258,1031,3.693,1032,5.323,1033,6.241,1034,3.693,1035,3.693,1036,3.693,1037,3.693]],["title/components/MDILayoutComponent.html",[52,1.075,198,1.304]],["body/components/MDILayoutComponent.html",[3,0.052,4,0.059,5,0.033,6,0.027,9,0.769,16,0.065,17,0.373,19,0.468,21,2.465,22,2.154,24,0.417,26,2.132,32,0.658,33,0.009,34,0.772,35,0.201,36,0.468,37,0.617,40,0.005,41,0.005,47,1.306,51,1.261,52,0.716,53,0.869,54,1.363,55,1.825,58,2.581,59,2.048,60,4.264,62,1.493,63,1.236,65,0.891,67,1.067,68,1.193,69,1.838,70,0.667,71,2.531,72,2.374,73,1.958,78,3.949,79,3.949,80,3.949,85,2.205,87,2.813,88,3.949,90,2.569,92,3.601,94,2.88,95,1.983,99,1.88,100,4.9,103,2.285,104,3.601,105,2.581,106,4.796,107,2.484,108,5.373,109,2.569,110,3.949,111,3.601,112,3.949,113,3.949,114,3.134,115,0.577,116,1.02,117,1.153,121,1.297,128,1.774,129,1.493,134,2.353,135,2.184,137,1.229,138,2.88,139,2.205,140,2.581,141,1.441,142,1.611,143,1.754,144,2.581,145,2.581,152,1.901,153,0.913,154,1.397,155,0.848,156,0.891,157,1.177,158,0.827,159,1.901,160,0.848,161,0.869,162,0.869,163,0.913,164,0.869,165,0.913,166,0.869,167,0.891,168,0.869,169,1.397,170,0.913,171,0.869,172,0.848,173,0.913,174,0.869,175,0.891,176,1.397,177,0.869,178,1.902,179,0.869,180,1.397,181,0.869,182,1.397,183,1.397,184,0.869,185,1.958,186,0.869,187,1.901,188,0.869,189,0.913,190,0.869,191,0.913,192,0.869,193,0.848,194,0.869,195,0.913,196,0.869,197,0.913,198,1.615,199,0.869,200,0.913,201,0.869,202,1.397,203,0.913,204,0.869,205,0.869,206,0.913,207,0.869,208,0.869,209,0.869,210,0.751,211,0.869,212,0.807,213,0.848,214,0.913,215,0.848,216,0.913,217,0.848,218,0.913,219,0.848,220,0.891,221,0.913,222,0.986,299,1.935,330,2.353,337,2.048,394,1.754,1038,2.926,1039,4.477,1040,4.477,1041,4.477]],["title/injectables/MainRegionAdapterService.html",[0,1.96,381,2.326]],["body/injectables/MainRegionAdapterService.html",[2,1.898,3,0.078,4,0.088,5,0.05,6,0.041,9,1.153,16,0.134,17,0.5,19,0.628,22,2.38,24,0.625,26,2.86,27,3.262,32,0.934,33,0.009,34,0.782,35,0.215,36,0.665,37,0.747,40,0.006,41,0.006,42,1.099,51,1.526,52,1.47,59,3.07,61,3.07,85,2.959,107,2.793,115,1.352,116,1.368,117,1.274,118,1.689,132,1.003,137,1.841,185,1.24,210,1.126,222,1.478,358,4.873,365,3.057,380,2.239,381,2.323,382,2.239,383,5.157,399,3.446,400,3.601,413,2.681,471,2.415,583,2.901,840,3.273,1042,3.868,1043,4.386,1044,4.386,1045,4.386,1046,4.386,1047,4.386,1048,4.386,1049,4.386,1050,4.386,1051,6.006,1052,6.006,1053,6.006,1054,6.006,1055,6.006,1056,6.006,1057,4.386,1058,4.386,1059,4.386,1060,4.483,1061,3.07,1062,4.386,1063,3.868,1064,4.386]],["title/components/MenuBar.html",[52,1.075,199,1.304]],["body/components/MenuBar.html",[1,2.202,3,0.041,4,0.046,5,0.026,6,0.021,16,0.051,17,0.306,19,0.384,22,1.457,24,0.325,26,2.202,27,2.202,28,3.244,29,2.311,32,0.951,33,0.009,34,0.839,35,0.213,36,0.677,37,0.797,40,0.004,41,0.004,51,1.497,53,0.677,54,1.12,55,0.929,63,1.995,64,1.507,65,0.694,67,0.831,68,0.929,70,0.519,71,2.47,72,2.284,73,1.647,74,0.986,76,0.957,83,2.449,85,1.812,95,1.686,99,1.544,107,1.885,115,1.149,116,0.838,117,0.78,118,0.878,121,1.066,132,0.925,137,0.957,152,1.656,153,0.711,154,1.148,155,0.66,156,0.694,157,0.967,158,0.644,159,1.656,160,0.66,161,0.677,162,0.677,163,0.711,164,0.677,165,0.711,166,0.677,167,0.694,168,0.677,169,1.148,170,0.711,171,0.677,172,0.66,173,0.711,174,0.677,175,0.694,176,1.148,177,0.677,178,1.687,179,0.677,180,1.148,181,0.677,182,1.148,183,1.148,184,0.677,185,1.04,186,0.677,187,1.656,188,0.677,189,0.711,190,0.677,191,0.711,192,0.677,193,0.66,194,0.677,195,0.711,196,0.677,197,0.711,198,0.677,199,1.373,200,0.711,201,0.677,202,1.148,203,0.711,204,0.677,205,0.677,206,0.711,207,0.677,208,0.677,209,0.677,210,0.585,211,0.677,212,0.629,213,0.66,214,0.711,215,0.66,216,0.711,217,0.66,218,0.711,219,0.66,220,0.694,221,0.711,293,3.237,310,4.588,338,2.11,360,1.507,379,2.36,380,1.163,381,1.948,382,1.163,384,2.546,398,2.311,399,2.11,400,2.204,401,2.311,402,2.025,403,2.311,404,2.311,405,2.311,406,2.311,407,2.311,408,2.311,409,2.311,410,1.432,411,1.207,412,1.432,413,1.017,414,1.432,415,1.366,416,1.432,417,2.228,418,1.432,419,1.432,420,1.432,421,1.307,422,1.307,423,0.878,471,2.025,492,0.986,502,2.311,577,1.7,579,2.958,580,2.958,581,2.958,582,2.958,583,1.507,584,2.204,585,1.833,586,3.719,587,1.833,588,1.833,589,2.958,590,2.574,591,1.833,856,1.7,857,2.958,858,1.833,900,3.058,1065,2.278,1066,2.278,1067,2.278,1068,2.278,1069,3.677,1070,3.677,1071,3.677,1072,3.677,1073,3.677,1074,2.278,1075,2.278,1076,2.278,1077,2.278,1078,3.677,1079,2.278,1080,2.278,1081,2.278]],["title/interfaces/MenuData.html",[222,1.48,310,2.633]],["body/interfaces/MenuData.html",[3,0.084,4,0.094,5,0.053,6,0.058,9,1.228,16,0.104,17,0.522,33,0.009,35,0.219,36,0.78,40,0.006,41,0.006,52,1.851,63,1.73,73,1.321,115,1.492,125,2.556,132,1.043,185,1.321,210,1.199,224,1.799,283,2.572,284,2.572,310,4.241,337,3.269,358,4.679,477,4.445,561,3.756,563,3.269,590,4.952,799,3.485,1061,4.952,1082,7.075,1083,7.075,1084,7.075,1085,7.075,1086,7.075,1087,7.075,1088,7.075,1089,7.075,1090,4.387]],["title/classes/Message.html",[42,1.101,417,1.844]],["body/classes/Message.html",[3,0.121,4,0.136,5,0.077,6,0.063,16,0.151,17,0.658,33,0.009,35,0.166,40,0.008,41,0.008,44,1.957,417,2.835,434,3.874,725,4.726,1091,7.903]],["title/classes/MessageBusPayLoad.html",[42,1.101,1092,3.874]],["body/classes/MessageBusPayLoad.html",[3,0.116,4,0.131,5,0.074,6,0.061,16,0.145,17,0.644,33,0.009,35,0.203,40,0.008,41,0.008,44,1.886,132,0.765,413,3.452,826,3.206,827,2.816,1092,5.741,1093,7.278,1094,5.772]],["title/injectables/MessageService.html",[0,1.96,382,2.242]],["body/injectables/MessageService.html",[2,2.114,3,0.087,4,0.098,5,0.056,6,0.045,9,1.285,11,2.326,16,0.109,19,0.675,24,0.696,29,4.058,32,1.031,33,0.009,34,0.811,35,0.214,36,0.69,37,0.78,40,0.007,41,0.007,51,1.594,61,3.419,62,2.493,132,1.038,382,2.493,417,3.233,434,4.152,542,4.615,725,3.419,726,6.382,819,3.646,871,3.929,958,3.929,1095,4.885,1096,4.885,1097,4.309,1098,6.459,1099,6.459,1100,6.459,1101,6.459,1102,4.885,1103,6.459,1104,4.885,1105,4.885,1106,4.885,1107,5.697,1108,4.885,1109,4.885,1110,6.459]],["title/injectables/MetaDataResolver.html",[0,1.96,1111,3.874]],["body/injectables/MetaDataResolver.html",[2,2.6,3,0.108,4,0.121,5,0.069,6,0.056,9,1.58,16,0.134,19,0.77,24,0.856,32,0.892,33,0.009,34,0.747,35,0.196,36,0.635,37,0.609,40,0.007,41,0.007,70,1.369,253,6.501,254,5.159,255,6.501,257,2.769,258,4.833,302,3.975,383,5.58,556,5.3,838,4.206,1111,5.3,1112,5.3,1113,6.009,1114,5.3,1115,7.37,1116,6.009,1117,6.009]],["title/injectables/MetaDataService.html",[0,1.96,383,3.074]],["body/injectables/MetaDataService.html",[2,2.533,3,0.105,4,0.118,5,0.067,6,0.054,9,1.539,16,0.131,17,0.604,19,0.758,22,2.873,24,0.834,32,0.877,33,0.009,34,0.735,35,0.193,36,0.625,37,0.593,40,0.007,41,0.007,61,4.097,70,1.334,116,1.334,117,1.241,132,0.927,137,3.045,257,2.697,302,3.871,383,4.097,538,4.368,804,4.368,876,4.368,877,5.412,879,4.368,1094,4.368,1112,5.163,1118,5.853,1119,7.251,1120,7.251,1121,5.853]],["title/classes/MetadataField.html",[42,1.101,469,2.326]],["body/classes/MetadataField.html",[3,0.072,4,0.081,5,0.046,6,0.037,16,0.09,17,0.471,19,0.591,32,0.792,33,0.009,34,0.758,35,0.224,36,0.644,37,0.72,40,0.006,41,0.006,44,1.166,47,2.525,115,1.723,132,0.986,141,1.982,361,1.689,365,2.525,450,3.555,454,2.997,469,3.466,623,3.003,663,3.742,699,4.99,826,1.982,827,1.741,846,4.99,1122,5.658,1123,5.658,1124,5.658,1125,5.658,1126,5.658,1127,5.658,1128,5.658,1129,5.658,1130,5.658,1131,5.658,1132,5.658,1133,5.658,1134,5.658,1135,5.658,1136,5.658,1137,5.658,1138,5.658,1139,5.658,1140,5.658,1141,5.263,1142,5.658,1143,4.99,1144,5.658,1145,6.544,1146,5.658,1147,3.236,1148,3.549,1149,3.549,1150,4.023,1151,4.023,1152,4.023]],["title/classes/ModelMetadata.html",[42,1.101,544,2.52]],["body/classes/ModelMetadata.html",[3,0.087,4,0.098,5,0.055,6,0.045,16,0.108,17,0.536,19,0.673,32,0.994,33,0.009,34,0.779,35,0.218,36,0.662,37,0.779,40,0.007,41,0.007,44,1.408,47,2.872,115,1.516,132,0.94,141,2.394,270,3.163,279,3.214,423,2.479,434,4.408,447,2.676,468,4.257,496,5.676,498,5.176,544,3.693,571,3.908,826,2.394,827,2.102,1094,4.803,1143,5.676,1148,4.286,1149,4.286,1153,5.676,1154,6.436,1155,6.436,1156,6.436,1157,6.436,1158,6.436,1159,3.908,1160,4.859,1161,4.859,1162,4.859]],["title/pipes/ModelValuePipe.html",[376,3.533,592,3.533]],["body/pipes/ModelValuePipe.html",[3,0.117,4,0.131,5,0.075,6,0.061,19,0.683,32,0.79,33,0.009,34,0.785,35,0.16,36,0.563,37,0.662,40,0.008,41,0.008,70,1.488,117,1.385,376,5.254,593,4.875,596,5.254,597,5.254,598,6.836,1163,6.532,1164,6.532,1165,6.532]],["title/injectables/NavigationService.html",[0,1.96,384,2.419]],["body/injectables/NavigationService.html",[1,3.912,2,2.516,3,0.104,4,0.117,5,0.066,6,0.054,9,1.529,11,2.769,16,0.13,19,0.755,24,0.829,27,3.741,32,0.874,33,0.009,34,0.732,35,0.177,36,0.622,37,0.589,40,0.007,41,0.007,51,1.204,115,1.425,116,1.325,117,1.233,118,2.24,185,1.644,211,1.727,222,1.959,299,3.846,317,5.751,333,3.846,337,4.071,381,3.825,384,3.202,583,3.846,584,4.33,1063,5.129,1166,5.815,1167,5.815,1168,7.222,1169,5.815]],["title/classes/OAuthConfig.html",[42,1.101,294,3.533]],["body/classes/OAuthConfig.html",[3,0.1,4,0.113,5,0.064,6,0.066,9,1.477,16,0.125,17,0.588,33,0.009,35,0.213,40,0.007,41,0.007,44,1.627,73,1.588,132,1.004,193,1.627,239,3.714,279,5.114,283,3.092,284,3.092,287,4.191,294,4.517,312,4.953,323,5.412,429,2.975,552,4.953,729,6.233,878,4.191,908,4.191,1170,7.732,1171,7.066,1172,7.066,1173,7.066,1174,7.066,1175,7.732,1176,4.953,1177,4.953,1178,5.616,1179,4.953,1180,5.616,1181,5.616]],["title/classes/ODataResponse.html",[42,1.101,1182,3.533]],["body/classes/ODataResponse.html",[3,0.106,4,0.119,5,0.067,6,0.055,16,0.132,17,0.607,21,4.017,24,0.842,32,0.715,33,0.009,34,0.599,35,0.203,36,0.509,40,0.007,41,0.007,44,1.713,70,1.662,270,3.33,423,2.277,434,4.186,446,5.718,538,5.445,1179,5.213,1182,4.754,1183,5.911,1184,5.911,1185,7.295,1186,7.295,1187,5.911,1188,5.911,1189,5.911]],["title/classes/OrderByClause.html",[42,1.101,1190,3.874]],["body/classes/OrderByClause.html",[3,0.114,4,0.128,5,0.072,6,0.059,16,0.142,17,0.634,33,0.009,35,0.2,40,0.008,41,0.008,44,1.839,132,0.96,270,3.387,454,4.036,827,2.747,844,4.738,848,6.721,1190,5.599,1191,7.619]],["title/pipes/PasswordPipe.html",[377,3.533,592,3.533]],["body/pipes/PasswordPipe.html",[3,0.115,4,0.129,5,0.074,6,0.06,19,0.673,32,0.779,33,0.009,34,0.779,35,0.158,36,0.555,37,0.653,40,0.008,41,0.008,70,1.467,117,1.366,132,1.001,167,1.96,377,5.179,462,3.694,593,4.805,594,5.679,596,5.179,597,5.179,1192,7.684]],["title/classes/PredefinedFilter.html",[42,1.101,562,3.074]],["body/classes/PredefinedFilter.html",[3,0.104,4,0.117,5,0.066,6,0.054,16,0.13,17,0.601,19,0.755,21,3.977,24,0.829,32,0.704,33,0.009,34,0.589,35,0.202,36,0.501,37,0.589,40,0.007,41,0.007,44,1.685,115,1.148,117,1.532,270,2.782,360,4.777,437,3.825,454,3.825,562,4.071,782,5.809,790,3.846,793,4.33,827,2.516,844,4.34,1193,7.222,1194,7.856,1195,7.222,1196,5.815,1197,4.34,1198,5.815,1199,5.815,1200,5.815,1201,5.815,1202,5.815,1203,5.815]],["title/classes/Predicate.html",[42,1.101,793,2.633]],["body/classes/Predicate.html",[3,0.113,4,0.127,5,0.072,6,0.059,16,0.141,17,0.633,24,1.084,33,0.009,35,0.208,40,0.008,41,0.008,44,1.833,115,1.248,125,3.1,132,0.959,413,3.393,793,3.792,826,3.116,827,2.737,1204,6.706,1205,6.706]],["title/classes/PrimaryKey.html",[42,1.101,1159,3.533]],["body/classes/PrimaryKey.html",[3,0.118,4,0.133,5,0.075,6,0.061,16,0.147,17,0.649,33,0.009,35,0.192,40,0.008,41,0.008,44,1.914,132,0.917,826,3.253,827,2.858,1159,5.312,1206,7.801,1207,7.801]],["title/interfaces/RedirectAuthenticationResult.html",[222,1.48,1208,3.533]],["body/interfaces/RedirectAuthenticationResult.html",[3,0.119,4,0.134,5,0.076,6,0.062,16,0.149,17,0.653,33,0.008,35,0.164,40,0.008,41,0.008,224,2.572,225,2.98,269,4.196,842,5.838,1208,5.371,1209,7.852]],["title/classes/RouteData.html",[42,1.101,719,3.074]],["body/classes/RouteData.html",[3,0.106,4,0.119,5,0.067,6,0.068,9,1.554,16,0.132,17,0.607,24,1.04,33,0.009,35,0.212,36,0.629,40,0.007,41,0.007,44,1.713,70,1.662,115,1.166,116,1.347,117,1.254,118,2.277,283,3.255,284,3.255,361,2.482,367,3.255,413,3.256,504,5.234,510,4.825,532,5.868,544,3.391,719,4.137,838,4.137,907,4.754,1210,4.411,1211,7.295]],["title/injectables/RouterService.html",[0,1.96,385,2.633]],["body/injectables/RouterService.html",[2,2.026,3,0.084,4,0.094,5,0.053,6,0.044,9,1.231,11,2.229,16,0.104,17,0.523,19,0.656,24,0.667,27,3.869,32,0.857,33,0.009,34,0.718,35,0.21,36,0.61,37,0.636,40,0.006,41,0.006,51,1.3,60,3.277,70,1.43,115,0.924,116,1.614,117,1.502,132,0.89,185,1.775,211,1.391,222,1.577,279,3.097,299,3.097,333,3.097,340,3.766,342,3.603,367,2.578,381,3.326,385,2.807,413,2.802,462,2.686,486,2.802,504,4.685,510,4.153,544,2.686,584,3.764,590,4.959,719,5.298,722,4.153,837,3.766,838,4.395,878,4.686,885,4.13,1019,5.05,1030,4.13,1060,4.686,1061,3.277,1212,4.682,1213,4.682,1214,6.279,1215,6.279,1216,6.279,1217,6.279,1218,4.682,1219,4.682,1220,4.682,1221,4.682,1222,6.279]],["title/interfaces/RowExpandedEventData.html",[222,1.48,1223,3.874]],["body/interfaces/RowExpandedEventData.html",[3,0.117,4,0.131,5,0.075,6,0.061,16,0.146,17,0.645,33,0.009,35,0.19,40,0.008,41,0.008,115,1.529,224,2.516,599,3.218,684,6.647,765,4.104,1223,5.761,1224,5.254,1225,7.289]],["title/classes/RunningConfigHelper.html",[42,1.101,1226,3.874]],["body/classes/RunningConfigHelper.html",[3,0.089,4,0.099,5,0.057,6,0.061,9,1.302,16,0.11,17,0.542,19,0.681,22,2.582,24,0.706,32,0.789,33,0.009,34,0.66,35,0.219,36,0.667,37,0.502,40,0.007,41,0.007,42,1.241,44,1.435,115,0.977,116,1.128,117,1.05,132,0.971,137,2.736,141,3.589,283,2.727,284,2.727,286,4.368,287,3.696,290,4.864,291,5.748,292,5.748,293,4.562,295,5.748,298,5.748,299,4.31,310,2.969,360,3.275,361,2.079,364,4.368,367,2.727,899,3.983,1061,3.466,1210,3.696,1226,4.368,1227,4.952,1228,6.517,1229,6.517,1230,6.517,1231,6.517,1232,6.517,1233,4.952,1234,4.952,1235,4.952,1236,4.952]],["title/classes/Subscription.html",[42,1.101,542,2.633]],["body/classes/Subscription.html",[3,0.119,4,0.133,5,0.076,6,0.062,16,0.148,17,0.651,33,0.009,35,0.192,40,0.008,41,0.008,44,1.921,132,0.78,429,4.141,542,3.973,725,4.64,822,5.846,1237,6.895]],["title/interfaces/SuccessAuthenticationResult.html",[222,1.48,1238,3.533]],["body/interfaces/SuccessAuthenticationResult.html",[3,0.117,4,0.132,5,0.075,6,0.061,16,0.146,17,0.646,33,0.009,35,0.191,40,0.008,41,0.008,224,2.525,225,2.926,254,5.794,269,4.119,842,5.794,1238,5.273,1239,7.767]],["title/components/Table.html",[52,1.075,178,1.273]],["body/components/Table.html",[1,2.342,3,0.036,4,0.04,5,0.023,6,0.019,9,0.528,16,0.045,17,0.276,19,0.346,24,0.286,32,0.814,33,0.009,34,0.773,35,0.213,36,0.58,37,0.75,40,0.003,41,0.003,47,0.896,51,1.393,52,0.491,53,0.596,54,1.009,55,0.818,60,1.405,62,1.024,63,0.915,65,0.611,67,0.732,68,0.818,70,1.121,71,2.434,72,2.298,73,1.54,74,0.868,76,0.843,95,1.545,99,1.392,103,1.692,115,1.433,116,1.336,117,1.244,118,1.277,121,0.961,125,1.352,128,1.678,129,1.692,132,0.579,135,2.474,138,1.756,139,2.087,142,1.826,148,1.614,150,1.987,152,1.535,153,0.626,154,1.035,155,0.582,156,0.611,157,0.872,158,0.568,159,1.535,160,0.582,161,0.596,162,0.596,163,0.626,164,0.596,165,0.626,166,0.596,167,0.611,168,0.596,169,1.035,170,0.626,171,0.596,172,0.582,173,0.626,174,0.596,175,0.611,176,1.035,177,0.596,178,2.306,179,0.596,180,1.035,181,0.596,182,1.035,183,1.035,184,0.596,185,0.938,186,0.596,187,1.535,188,0.596,189,0.626,190,0.596,191,0.626,192,0.596,193,0.582,194,0.596,195,0.626,196,0.596,197,0.626,198,0.596,199,0.596,200,0.626,201,0.596,202,1.035,203,0.626,204,0.596,205,0.596,206,0.626,207,0.596,208,0.596,209,0.596,210,1.263,211,0.596,212,0.554,213,0.582,214,0.626,215,0.582,216,0.626,217,0.582,218,0.626,219,0.582,220,0.611,221,0.626,288,1.063,302,1.327,303,1.152,313,1.405,323,2.321,333,1.327,343,1.405,361,1.392,365,1.891,385,1.987,394,1.987,437,2.605,447,2.333,462,1.152,463,1.261,469,2.605,471,1.105,473,2.662,482,1.261,483,1.327,493,1.327,497,2.924,498,2.667,505,2.924,517,2.924,518,2.924,520,2.539,527,2.321,531,1.77,542,1.987,544,1.152,546,2.667,547,2.667,548,2.802,562,1.405,565,2.321,569,1.614,599,0.989,624,1.327,684,3.407,765,1.261,767,1.614,768,1.77,871,1.614,878,3.161,900,3.602,908,1.498,946,1.498,1000,1.77,1090,1.405,1114,1.77,1153,2.924,1197,1.498,1210,1.498,1224,1.614,1225,3.736,1240,2.007,1241,3.315,1242,2.007,1243,4.236,1244,2.924,1245,3.315,1246,3.315,1247,3.315,1248,3.315,1249,3.315,1250,2.924,1251,3.315,1252,3.315,1253,3.315,1254,4.236,1255,4.236,1256,3.315,1257,3.315,1258,3.315,1259,4.236,1260,3.736,1261,3.315,1262,3.315,1263,3.315,1264,3.315,1265,3.315,1266,3.315,1267,3.315,1268,3.315,1269,3.315,1270,3.315,1271,2.007,1272,2.007,1273,1.77,1274,2.007,1275,2.007,1276,1.77,1277,2.007,1278,2.007,1279,2.007,1280,2.007,1281,2.007,1282,2.007,1283,2.007,1284,2.007,1285,2.007,1286,2.007,1287,2.007,1288,2.007,1289,2.007,1290,2.007,1291,1.77,1292,1.77,1293,1.77,1294,2.007,1295,2.007,1296,2.007,1297,2.007,1298,4.919,1299,2.007,1300,2.007,1301,2.007,1302,2.007,1303,2.007,1304,2.007,1305,3.315,1306,2.007,1307,3.315,1308,2.007,1309,2.007,1310,2.007,1311,2.007,1312,1.77,1313,1.77,1314,3.315,1315,2.007,1316,2.007]],["title/components/TableColumn.html",[52,1.075,201,1.304]],["body/components/TableColumn.html",[3,0.063,4,0.071,5,0.04,6,0.033,9,0.926,16,0.079,19,0.537,24,0.733,33,0.009,34,0.752,35,0.188,37,0.357,40,0.005,41,0.005,51,0.729,53,1.046,54,1.565,60,2.464,63,1.419,65,1.072,67,1.284,68,1.435,70,0.802,71,2.569,72,2.432,73,2.009,95,2.215,99,2.159,115,0.695,116,1.384,117,1.288,121,1.49,132,0.785,138,1.865,152,2.085,153,1.099,154,1.605,155,1.02,156,1.072,157,1.352,158,0.995,159,2.085,160,1.02,161,1.046,162,1.046,163,1.099,164,1.046,165,1.099,166,1.046,167,1.072,168,1.046,169,1.605,170,1.099,171,1.046,172,1.02,173,1.099,174,1.046,175,1.072,176,1.605,177,1.046,178,2.276,179,1.046,180,1.605,181,1.046,182,1.605,183,1.605,184,1.046,185,1.454,186,1.046,187,2.085,188,1.046,189,1.099,190,1.046,191,1.099,192,1.046,193,1.02,194,1.046,195,1.099,196,1.046,197,1.099,198,1.046,199,1.046,200,1.099,201,1.804,202,1.896,203,1.099,204,1.046,205,1.046,206,1.099,207,1.046,208,1.046,209,1.046,210,0.904,211,1.046,212,0.972,213,1.02,214,1.099,215,1.02,216,1.099,217,1.02,218,1.099,219,1.02,220,1.072,221,1.099,423,2.857,437,2.723,454,2.723,469,1.865,473,3.23,599,1.734,765,2.212,987,3.105,1317,3.52,1318,5.141,1319,5.141,1320,5.141,1321,5.141,1322,5.141]],["title/components/TableFilter.html",[52,1.075,204,1.304]],["body/components/TableFilter.html",[3,0.062,4,0.069,5,0.039,6,0.032,16,0.077,17,0.421,19,0.529,24,0.721,33,0.009,34,0.746,35,0.192,37,0.349,40,0.005,41,0.005,51,0.714,53,1.024,54,1.541,63,1.397,65,1.049,67,1.257,68,1.405,70,0.785,71,2.565,72,2.426,73,1.991,95,2.188,99,2.125,109,1.977,115,0.999,116,1.153,117,1.272,118,1.95,121,1.467,125,2.064,132,0.706,152,2.064,153,1.076,154,1.58,155,0.999,156,1.049,157,1.331,158,0.975,159,2.064,160,0.999,161,1.024,162,1.024,163,2.064,164,1.024,165,1.076,166,1.024,167,1.049,168,1.024,169,1.58,170,1.076,171,1.024,172,0.999,173,1.076,174,1.024,175,1.049,176,1.58,177,1.024,178,2.205,179,1.024,180,1.58,181,1.024,182,1.58,183,1.58,184,1.024,185,1.431,186,1.024,187,2.064,188,1.024,189,1.076,190,1.024,191,1.076,192,1.024,193,0.999,194,1.024,195,1.076,196,1.024,197,1.076,198,1.024,199,1.024,200,1.076,201,1.024,202,1.873,203,1.076,204,1.782,205,1.024,206,1.076,207,1.024,208,1.024,209,1.024,210,0.885,211,1.024,212,0.951,213,0.999,214,1.076,215,0.999,216,1.076,217,0.999,218,1.076,219,0.999,220,1.049,221,1.076,313,2.412,343,3.543,437,2.681,454,2.681,469,1.825,479,2.904,567,3.04,568,3.543,571,4.825,599,1.698,613,4.465,616,4.465,618,4.465,702,4.465,765,2.166,766,3.04,793,2.066,1323,5.062,1324,5.062,1325,3.446,1326,3.446,1327,3.446]],["title/components/TableFilters.html",[52,1.075,205,1.304]],["body/components/TableFilters.html",[3,0.04,4,0.045,5,0.025,6,0.021,16,0.101,17,0.299,19,0.376,24,0.316,32,0.695,33,0.009,34,0.743,35,0.205,36,0.495,37,0.801,40,0.004,41,0.004,51,1.617,53,0.658,54,1.095,55,0.904,63,0.993,65,0.675,67,0.808,68,0.904,70,1.19,71,2.462,72,2.377,73,1.623,74,0.959,76,0.931,95,1.655,99,1.51,103,1.836,115,0.896,116,0.505,117,0.47,121,1.042,123,3.172,125,1.466,128,0.878,129,1.131,142,1.221,147,3.65,150,2.721,152,1.63,153,0.692,154,1.123,155,0.642,156,0.675,157,0.946,158,0.627,159,1.63,160,0.642,161,0.658,162,0.658,163,0.692,164,0.658,165,0.692,166,0.658,167,0.675,168,0.658,169,1.123,170,0.692,171,0.658,172,0.642,173,0.692,174,0.658,175,0.675,176,1.123,177,0.658,178,2.202,179,1.068,180,1.123,181,0.658,182,1.123,183,1.123,184,0.658,185,1.017,186,0.658,187,1.63,188,0.658,189,0.692,190,0.658,191,0.692,192,0.658,193,0.642,194,0.658,195,0.692,196,0.658,197,0.692,198,0.658,199,0.658,200,0.692,201,0.658,202,1.123,203,0.692,204,1.068,205,1.348,206,0.692,207,0.658,208,0.658,209,0.658,210,1.165,211,0.658,212,0.612,213,0.642,214,0.692,215,0.642,216,0.692,217,0.642,218,0.692,219,0.642,220,0.675,221,0.692,270,2.011,302,1.466,333,1.466,354,2.684,360,2.379,365,1.605,382,1.836,402,2.876,421,2.064,423,1.385,471,2.876,493,1.466,494,1.955,519,4.003,520,2.721,542,1.329,544,1.272,546,2.893,547,2.893,548,3.002,562,3.177,565,3.177,568,4.304,569,1.783,599,1.092,625,1.466,626,1.552,628,1.654,629,1.654,700,1.955,765,1.393,790,2.379,799,1.654,801,3.172,900,3.454,936,3.002,946,1.654,1090,1.552,1197,1.654,1250,3.172,1291,1.955,1292,1.955,1293,1.955,1312,1.955,1313,3.172,1328,2.217,1329,3.597,1330,2.217,1331,3.597,1332,5.064,1333,3.597,1334,3.597,1335,5.222,1336,3.597,1337,5.222,1338,3.597,1339,4.538,1340,4.538,1341,4.538,1342,4.538,1343,4.538,1344,3.597,1345,4.538,1346,3.597,1347,3.597,1348,3.597,1349,4.003,1350,4.538,1351,3.597,1352,2.217,1353,4.003,1354,4.538,1355,3.597,1356,3.597,1357,2.217,1358,2.217,1359,2.217,1360,2.217,1361,3.597,1362,2.217,1363,2.217,1364,5.222,1365,2.217,1366,2.217,1367,2.217,1368,2.217,1369,2.217,1370,2.217,1371,2.217,1372,3.597,1373,2.217,1374,2.217,1375,2.217,1376,3.597,1377,2.217,1378,2.217,1379,3.597,1380,2.217,1381,2.217,1382,2.217,1383,2.217,1384,2.217]],["title/classes/TableParams.html",[42,1.101,548,2.905]],["body/classes/TableParams.html",[1,2.818,3,0.077,4,0.086,5,0.049,6,0.04,16,0.096,17,0.493,19,0.618,24,0.612,32,0.982,33,0.009,34,0.802,35,0.216,36,0.682,37,0.838,40,0.006,41,0.006,44,1.244,51,1.68,116,0.978,117,0.91,121,1.715,132,0.505,257,1.977,270,3.331,360,3.914,361,1.802,365,2.641,385,3.547,434,2.462,486,1.915,524,3.203,527,3.004,548,2.839,565,3.004,568,4.142,790,5.237,825,5.22,827,1.857,844,3.203,1182,4.76,1197,3.203,1244,5.22,1385,5.918,1386,5.918,1387,5.918,1388,5.918,1389,5.918,1390,5.918,1391,6.773,1392,6.773,1393,6.773,1394,5.918,1395,5.918,1396,5.918,1397,5.918,1398,5.918,1399,4.292,1400,4.292,1401,4.292,1402,4.292,1403,4.292]],["title/components/TopBar.html",[52,1.075,207,1.304]],["body/components/TopBar.html",[3,0.052,4,0.058,5,0.033,6,0.027,16,0.12,17,0.368,19,0.463,22,1.754,24,0.631,26,2.566,32,0.789,33,0.009,34,0.798,35,0.206,36,0.562,37,0.769,40,0.004,41,0.004,51,1.532,53,0.856,54,1.348,55,1.176,63,1.222,64,1.907,65,0.878,67,1.052,68,1.176,70,0.657,71,2.528,72,2.37,73,1.844,74,1.248,76,1.211,85,2.181,95,1.965,97,3.905,103,2.26,107,2.197,115,1.193,121,1.995,129,1.472,132,0.634,137,1.211,139,1.421,152,1.887,153,0.9,154,1.382,155,0.836,156,0.878,157,1.164,158,0.815,159,1.887,160,0.836,161,0.856,162,0.856,163,0.9,164,0.856,165,0.9,166,0.856,167,0.878,168,0.856,169,1.382,170,0.9,171,0.856,172,0.836,173,0.9,174,0.856,175,0.878,176,1.382,177,0.856,178,1.89,179,0.856,180,1.382,181,0.856,182,1.382,183,1.382,184,0.856,185,1.252,186,0.856,187,1.887,188,0.856,189,0.9,190,0.856,191,0.9,192,0.856,193,1.283,194,0.856,195,0.9,196,0.856,197,0.9,198,0.856,199,0.856,200,0.9,201,0.856,202,1.382,203,0.9,204,0.856,205,0.856,206,0.9,207,1.6,208,0.856,209,0.856,210,0.74,211,0.856,212,0.796,213,0.836,214,0.9,215,0.836,216,0.9,217,0.836,218,0.9,219,0.836,220,0.878,221,0.9,239,1.907,243,2.32,308,4.335,354,2.152,365,2.405,423,1.111,520,3.231,542,3.231,625,2.928,842,2.019,856,2.152,857,3.561,858,2.32,900,4.553,1349,3.905,1353,2.544,1404,2.544,1405,2.544,1406,4.427,1407,3.905,1408,3.905,1409,4.427,1410,4.427,1411,3.905,1412,5.389,1413,4.427,1414,4.427,1415,5.389,1416,4.427,1417,2.544,1418,2.884,1419,2.884,1420,2.884,1421,4.427,1422,2.884,1423,2.884,1424,2.884]],["title/components/TopMenuBar.html",[52,1.075,208,1.304]],["body/components/TopMenuBar.html",[1,2.196,3,0.041,4,0.046,5,0.026,6,0.021,16,0.051,17,0.305,19,0.383,22,1.452,24,0.323,26,2.196,27,2.196,32,0.95,33,0.009,34,0.838,35,0.216,36,0.677,37,0.786,40,0.004,41,0.004,51,1.456,53,0.674,54,1.116,63,1.805,64,1.501,65,0.691,70,0.517,71,2.469,72,2.282,73,1.643,83,2.443,85,1.806,92,2.949,103,1.871,104,2.949,107,1.88,115,1.147,116,1.051,117,0.978,118,0.874,121,1.336,129,1.159,132,0.966,134,1.826,135,1.694,137,0.953,152,1.653,153,0.709,154,1.144,155,0.658,156,0.691,157,0.964,158,0.642,159,1.653,160,0.658,161,0.674,162,0.674,163,0.709,164,0.674,165,0.709,166,0.674,167,0.691,168,0.674,169,1.144,170,0.709,171,0.674,172,0.658,173,0.709,174,0.674,175,0.691,176,1.144,177,0.674,178,1.684,179,0.674,180,1.144,181,0.674,182,1.144,183,1.144,184,0.674,185,1.037,186,0.674,187,1.653,188,0.674,189,0.709,190,0.674,191,0.709,192,0.674,193,0.658,194,0.674,195,0.709,196,0.674,197,0.709,198,0.674,199,0.674,200,0.709,201,0.674,202,1.144,203,0.709,204,0.674,205,0.674,206,0.709,207,0.674,208,1.37,209,0.674,210,0.583,211,0.674,212,0.626,213,0.658,214,0.709,215,0.658,216,0.709,217,0.658,218,0.709,219,0.658,220,0.691,221,0.709,293,1.589,296,3.234,297,3.234,308,2.949,310,4.425,338,2.104,352,1.694,379,2.354,380,1.159,381,1.942,382,1.159,384,2.54,394,1.361,398,2.304,399,2.104,400,2.198,401,2.304,402,2.019,403,2.304,404,2.304,405,2.304,406,2.304,407,2.304,408,2.304,409,2.304,410,1.426,411,1.202,412,1.426,413,1.013,414,1.426,415,1.361,416,1.426,417,2.223,418,1.426,419,1.426,420,1.426,421,1.302,422,1.302,423,0.874,492,0.982,502,2.304,577,1.694,579,2.949,580,2.949,581,2.949,582,2.949,583,1.501,584,2.198,585,1.826,586,2.949,587,1.826,588,1.826,589,2.949,590,2.566,591,1.826,842,1.589,856,1.694,1404,2.002,1405,2.002,1407,3.234,1408,3.234,1411,3.234,1417,2.002,1425,3.666,1426,3.666,1427,3.666,1428,3.666,1429,2.27,1430,4.612,1431,2.27,1432,2.002]],["title/interfaces/TopRightMenuData.html",[222,1.48,352,3.278]],["body/interfaces/TopRightMenuData.html",[3,0.108,4,0.121,5,0.069,6,0.069,9,1.58,16,0.134,17,0.613,29,5.009,33,0.009,35,0.204,36,0.635,40,0.007,41,0.007,63,1.658,73,1.699,125,2.45,132,1.044,224,2.315,283,3.309,284,3.309,352,4.485,358,5.273,563,4.206,799,4.485,800,7.031,1433,7.972]],["title/classes/TypeSystem.html",[42,1.101,1141,3.533]],["body/classes/TypeSystem.html",[3,0.108,4,0.121,5,0.069,6,0.056,16,0.134,17,0.613,19,0.77,24,0.856,32,0.892,33,0.009,34,0.747,35,0.204,36,0.635,37,0.609,40,0.007,41,0.007,44,1.741,117,1.274,132,0.938,413,3.558,793,4.779,826,2.96,827,2.6,1141,4.833,1434,8.311,1435,7.37,1436,6.009,1437,6.009]],["title/interfaces/ValidationData.html",[222,1.48,1147,3.533]],["body/interfaces/ValidationData.html",[3,0.092,4,0.103,5,0.058,6,0.048,16,0.114,17,0.554,33,0.009,35,0.217,36,0.766,40,0.007,41,0.007,115,1.547,132,1.012,224,1.973,365,3.839,457,4.897,663,4.897,664,5.183,676,5.955,826,2.523,827,2.216,1147,4.119,1438,7.404,1439,7.404,1440,7.404,1441,7.404,1442,7.404,1443,7.404,1444,7.17]],["title/interfaces/ViewData.html",[222,1.48,367,2.419]],["body/interfaces/ViewData.html",[3,0.095,4,0.107,5,0.061,6,0.064,9,1.403,16,0.119,17,0.569,29,4.743,33,0.009,35,0.215,36,0.589,40,0.007,41,0.007,52,1.949,70,1.215,109,3.06,115,1.35,125,2.175,132,0.991,157,1.403,172,1.545,210,2.199,224,2.054,283,2.937,284,2.937,323,3.733,346,4.704,361,2.239,367,2.937,429,2.825,463,3.351,476,3.351,538,3.98,563,3.733,1060,6.144,1061,5.284,1094,5.634,1445,5.333,1446,7.549,1447,5.333,1448,4.704,1449,5.333,1450,5.333,1451,5.333,1452,5.333]],["title/classes/ViewOptionalData.html",[42,1.101,526,3.278]],["body/classes/ViewOptionalData.html",[3,0.114,4,0.128,5,0.072,6,0.059,16,0.142,17,0.634,33,0.009,35,0.2,36,0.758,40,0.008,41,0.008,44,1.839,132,0.96,526,4.738,805,6.721,806,6.721,807,6.721,826,3.127,827,2.747]],["title/classes/ViewRunningData.html",[42,1.101,840,3.278]],["body/classes/ViewRunningData.html",[3,0.116,4,0.131,5,0.074,6,0.061,16,0.145,17,0.644,33,0.009,35,0.203,40,0.008,41,0.008,44,1.886,132,0.765,358,5.115,367,3.584,510,5.115,719,5.776,840,4.857,1042,5.741]],["title/components/ViewWrapper.html",[52,1.075,209,1.304]],["body/components/ViewWrapper.html",[3,0.069,4,0.078,5,0.044,6,0.036,16,0.086,19,0.575,24,0.551,32,0.468,33,0.008,34,0.799,35,0.095,36,0.333,37,0.392,40,0.006,41,0.006,51,0.801,53,1.149,54,1.675,55,1.577,63,1.519,65,1.178,67,1.41,68,1.577,70,0.881,71,2.586,72,2.45,73,2.084,74,1.674,76,1.624,95,2.335,121,1.594,152,2.177,153,1.207,154,1.717,155,1.121,156,1.178,157,1.447,158,1.094,159,2.177,160,1.121,161,1.149,162,1.149,163,1.207,164,1.149,165,1.207,166,1.149,167,1.178,168,1.149,169,1.717,170,1.207,171,1.149,172,1.121,173,1.207,174,1.149,175,1.178,176,1.717,177,1.149,178,2.136,179,1.149,180,1.717,181,1.149,182,1.717,183,1.717,184,1.149,185,1.556,186,1.149,187,2.177,188,1.149,189,1.207,190,1.149,191,1.207,192,1.149,193,1.121,194,1.149,195,1.207,196,1.149,197,1.207,198,1.149,199,1.149,200,1.207,201,1.149,202,1.717,203,1.207,204,1.149,205,1.149,206,1.207,207,1.149,208,1.149,209,1.902,210,1.892,211,1.634,212,1.068,213,1.121,214,1.207,215,1.121,216,1.207,217,1.121,218,1.207,219,1.121,220,1.178,221,1.207,386,2.914,511,3.111,1453,3.412,1454,3.412,1455,3.868,1456,5.502,1457,3.868,1458,3.868]],["title/injectables/ViewWrapperService.html",[0,1.96,386,2.326]],["body/injectables/ViewWrapperService.html",[2,2.618,3,0.108,4,0.122,5,0.069,6,0.056,16,0.135,17,0.616,19,0.773,24,1.055,32,0.732,33,0.009,34,0.613,35,0.182,36,0.689,37,0.613,40,0.008,41,0.008,51,1.253,116,1.378,117,1.283,160,2.317,210,1.553,270,2.85,386,3.204,486,2.7,1453,5.336,1454,5.336,1459,6.049,1460,7.4,1461,7.4,1462,7.4,1463,6.049,1464,6.049]],["title/dependencies.html",[1465,2.943,1466,4.664]],["body/dependencies.html",[33,0.009,40,0.007,41,0.007,46,4.454,100,4.061,111,4.061,330,4.061,344,4.061,736,4.454,767,5.915,834,4.061,1097,4.454,1176,5.822,1466,4.454,1467,5.049,1468,8.577,1469,5.049,1470,5.049,1471,5.049,1472,5.049,1473,6.601,1474,6.601,1475,5.049,1476,5.049,1477,5.049,1478,6.601,1479,5.049,1480,6.601,1481,5.049,1482,6.601,1483,5.049,1484,5.049,1485,5.049,1486,5.049,1487,5.049,1488,6.601,1489,5.049,1490,5.049,1491,5.049,1492,5.049,1493,5.049,1494,5.049,1495,5.049,1496,5.049,1497,5.049,1498,5.049,1499,5.049,1500,5.049,1501,5.049,1502,5.049,1503,5.049,1504,5.049,1505,5.049,1506,5.049,1507,5.049,1508,5.049,1509,5.049,1510,5.049,1511,5.049,1512,5.049,1513,5.049,1514,5.049,1515,5.049,1516,5.049]],["title/miscellaneous/enumerations.html",[1517,2.193,1518,4.664]],["body/miscellaneous/enumerations.html",[3,0.102,5,0.091,6,0.078,16,0.091,33,0.009,35,0.1,40,0.006,41,0.006,72,1.128,109,3.787,117,1.905,157,1.736,178,1.658,210,1.469,225,1.824,254,2.861,269,2.568,283,2.251,284,3.634,288,2.165,411,3.03,425,3.605,426,5.046,432,5.046,474,2.568,475,2.568,486,1.824,504,3.784,599,2.014,663,2.703,664,2.861,677,3.05,685,5.046,725,2.861,739,3.605,765,2.568,826,2.014,827,2.856,868,5.308,918,5.821,927,5.75,932,2.251,933,3.05,937,3.288,938,3.288,939,2.45,941,4.601,945,4.269,1060,4.269,1093,5.046,1107,5.046,1177,3.605,1224,4.601,1260,3.605,1273,5.046,1276,3.605,1444,5.046,1448,3.605,1517,2.45,1518,3.605,1519,5.72,1520,3.605,1521,5.308,1522,3.605,1523,4.087,1524,5.046,1525,3.605,1526,5.72,1527,4.087,1528,4.087,1529,4.087,1530,7.149,1531,5.046,1532,5.72,1533,4.087,1534,4.087,1535,4.087,1536,4.087,1537,4.087,1538,4.087,1539,4.087,1540,4.087,1541,4.087,1542,5.72,1543,5.72,1544,5.72,1545,3.605,1546,4.087,1547,4.087,1548,4.087]],["title/miscellaneous/functions.html",[910,3.946,1517,2.193]],["body/miscellaneous/functions.html",[1,3.699,5,0.086,6,0.074,7,3.251,8,5.006,16,0.09,32,1.002,33,0.009,34,0.839,35,0.208,36,0.713,37,0.809,40,0.006,41,0.006,44,1.645,109,3.764,157,1.971,222,1.912,370,3.565,371,5.006,435,3.402,490,5.118,735,3.565,895,4.565,904,4.236,910,5.592,914,4.565,915,4.565,1090,5.991,1210,5.309,1517,2.423,1521,3.251,1525,6.853,1549,7.113,1550,7.113,1551,5.675,1552,5.675,1553,7.113,1554,4.041,1555,5.675,1556,4.041,1557,5.675,1558,5.675,1559,5.675,1560,5.675,1561,5.675,1562,5.675,1563,5.675,1564,7.77,1565,5.675,1566,4.041,1567,4.041,1568,5.675,1569,4.041,1570,4.041]],["title/index.html",[16,0.082,1571,3.659,1572,3.659]],["body/index.html",[6,0.074,33,0.008,40,0.008,41,0.008,72,2.205,343,4.817,344,5.535,1465,5.535,1573,6.881,1574,6.881,1575,6.881]],["title/modules.html",[369,4.836]],["body/modules.html",[33,0.008,40,0.008,41,0.008,368,5.687,369,5.687,1576,7.07]],["title/overview.html",[1577,5.303]],["body/overview.html",[2,2.922,33,0.008,40,0.008,41,0.008,44,1.957,54,2.056,114,4.726,212,1.864,224,2.601,593,5.039,868,5.431,927,5.431,1531,5.956,1577,5.956,1578,7.903,1579,6.752,1580,6.752]],["title/properties.html",[17,0.44,1465,2.943]],["body/properties.html",[17,0.586,33,0.009,40,0.008,41,0.008,1581,7.042,1582,7.042]],["title/miscellaneous/typealiases.html",[1517,2.193,1583,5.287]],["body/miscellaneous/typealiases.html",[5,0.077,6,0.063,16,0.15,33,0.009,35,0.165,40,0.008,41,0.008,225,3.002,269,4.227,841,5.411,1208,5.411,1238,5.411,1517,4.033,1520,5.934,1584,6.727,1585,7.886]],["title/miscellaneous/variables.html",[1517,2.193,1586,4.664]],["body/miscellaneous/variables.html",[5,0.072,6,0.063,11,0.879,16,0.041,22,0.732,33,0.009,35,0.205,36,0.159,40,0.003,41,0.003,52,0.452,72,1.857,115,0.364,116,1.928,117,1.788,118,2.51,125,2.743,128,1.226,132,0.549,141,0.91,157,0.486,174,0.548,175,1.215,193,1.507,223,2.488,225,0.824,226,1.629,227,5.529,228,1.629,229,1.629,230,1.629,231,1.629,232,2.729,233,1.629,234,2.729,235,1.629,236,2.729,237,1.629,238,1.629,239,3.089,240,2.729,241,1.629,242,1.629,243,3.211,244,1.629,245,3.211,246,1.629,283,1.017,284,1.703,290,2.309,307,1.16,319,1.944,322,1.629,333,1.221,335,1.485,379,0.942,391,1.293,413,3.158,417,1.299,423,1.192,486,3.488,575,1.378,599,0.91,636,2.794,637,3.211,638,1.485,641,2.488,710,1.629,738,1.629,745,1.629,747,1.629,748,1.629,749,1.629,763,2.729,793,4.868,797,5.271,803,1.485,804,2.309,826,0.91,827,3.349,883,1.629,926,3.211,931,1.485,932,1.017,960,1.378,961,1.485,1090,3.64,1204,5.935,1205,5.935,1237,2.729,1332,2.729,1432,1.629,1517,1.107,1521,2.488,1522,2.729,1524,6.752,1545,1.629,1586,1.629,1587,3.093,1588,3.093,1589,5.976,1590,5.201,1591,3.093,1592,3.093,1593,3.093,1594,3.992,1595,3.093,1596,3.992,1597,3.093,1598,1.846,1599,3.093,1600,1.846,1601,3.093,1602,3.093,1603,6.729,1604,3.992,1605,6.268,1606,4.67,1607,5.201,1608,5.201,1609,5.627,1610,5.201,1611,4.67,1612,4.67,1613,4.67,1614,4.67,1615,5.201,1616,5.201,1617,3.093,1618,3.093,1619,3.093,1620,1.846,1621,1.846,1622,4.67,1623,3.093,1624,3.093,1625,7.075,1626,1.846,1627,1.846,1628,1.846,1629,1.846,1630,1.846,1631,1.846,1632,1.846,1633,1.846,1634,1.846,1635,1.846,1636,1.846,1637,1.846,1638,1.846,1639,1.846,1640,1.846,1641,1.846,1642,1.846,1643,1.846,1644,1.846,1645,1.846,1646,1.846,1647,1.846,1648,1.846,1649,1.846,1650,1.846,1651,1.846,1652,1.846,1653,1.846,1654,1.846,1655,1.846,1656,1.846,1657,1.846,1658,1.846,1659,1.846,1660,1.846,1661,1.846,1662,1.846,1663,1.846,1664,1.846,1665,1.846,1666,1.846,1667,1.846,1668,1.846,1669,1.846,1670,1.846,1671,1.846,1672,1.846,1673,1.846,1674,1.846,1675,1.846,1676,3.093,1677,1.846,1678,1.846,1679,1.846,1680,3.093,1681,1.846,1682,1.846,1683,1.846,1684,1.846,1685,1.846,1686,1.846,1687,1.846,1688,1.846,1689,1.846,1690,1.846,1691,1.846,1692,1.846]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/AppLayout.html":{},"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"classes/BQConfigData.html":{},"modules/BQStartPrimeModule.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"classes/BaseEntity.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"pipes/BoolToYesNoPipe.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/CompareDirective.html":{},"directives/ControlContainerDirective.html":{},"components/CustomFilter.html":{},"interfaces/CustomUserMenus.html":{},"classes/DataServiceOptions.html":{},"injectables/DialogService.html":{},"interfaces/Dictionary.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"interfaces/EnumItem.html":{},"interfaces/FailureAuthenticationResult.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseEvents.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IBaseView.html":{},"interfaces/IEditFormViewEvents.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"classes/Message.html":{},"classes/MessageBusPayLoad.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"pipes/ModelValuePipe.html":{},"injectables/NavigationService.html":{},"classes/OAuthConfig.html":{},"classes/ODataResponse.html":{},"classes/OrderByClause.html":{},"pipes/PasswordPipe.html":{},"classes/PredefinedFilter.html":{},"classes/Predicate.html":{},"classes/PrimaryKey.html":{},"interfaces/RedirectAuthenticationResult.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"interfaces/RowExpandedEventData.html":{},"classes/RunningConfigHelper.html":{},"classes/Subscription.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/TopRightMenuData.html":{},"classes/TypeSystem.html":{},"interfaces/ValidationData.html":{},"interfaces/ViewData.html":{},"classes/ViewOptionalData.html":{},"classes/ViewRunningData.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":471,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableFilters.html":{}}}],["0.0.0",{"_index":1582,"title":{},"body":{"properties.html":{}}}],["0.13.1",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["0.5.43",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["0px",{"_index":149,"title":{},"body":{"components/AppLayout.html":{},"components/FooterBar.html":{}}}],["1",{"_index":927,"title":{"interfaces/INavigationState-1.html":{}},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.11.5",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":151,"title":{},"body":{"components/AppLayout.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/FooterBar.html":{}}}],["10px",{"_index":1424,"title":{},"body":{"components/TopBar.html":{}}}],["11.1.1",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["13.0.8",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["13.9.0",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["14.0.0",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["15.0.4",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":1379,"title":{},"body":{"components/TableFilters.html":{}}}],["16",{"_index":1579,"title":{},"body":{"overview.html":{}}}],["16.2.3",{"_index":1468,"title":{},"body":{"dependencies.html":{}}}],["16.3.1",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1530,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2.3.0",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1580,"title":{},"body":{"overview.html":{}}}],["3",{"_index":868,"title":{},"body":{"components/FormBlock.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3.3.0",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["3.30.1",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["3.4.2",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1578,"title":{},"body":{"overview.html":{}}}],["30vw",{"_index":1366,"title":{},"body":{"components/TableFilters.html":{}}}],["36f4c5",{"_index":773,"title":{},"body":{"components/CustomFilter.html":{}}}],["4",{"_index":1531,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["4.17.21",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":685,"title":{},"body":{"components/BqTextArea.html":{},"miscellaneous/enumerations.html":{}}}],["50",{"_index":1234,"title":{},"body":{"classes/RunningConfigHelper.html":{}}}],["576px",{"_index":1377,"title":{},"body":{"components/TableFilters.html":{}}}],["5px",{"_index":626,"title":{},"body":{"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/TableFilters.html":{}}}],["6",{"_index":1532,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["6.0.1",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":1041,"title":{},"body":{"components/MDILayoutComponent.html":{}}}],["7",{"_index":1541,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["7.0.0",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["7.21.4",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":1381,"title":{},"body":{"components/TableFilters.html":{}}}],["960px",{"_index":631,"title":{},"body":{"components/BqDropdownField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["9999",{"_index":1369,"title":{},"body":{"components/TableFilters.html":{}}}],["_configuration/${applicationname",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_model",{"_index":438,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["_next",{"_index":256,"title":{},"body":{"injectables/AuthorizeGuard.html":{}}}],["_self",{"_index":1431,"title":{},"body":{"components/TopMenuBar.html":{}}}],["_singleton",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["absolute",{"_index":1367,"title":{},"body":{"components/TableFilters.html":{}}}],["abstract",{"_index":451,"title":{},"body":{"components/BaseField.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"classes/LogPublisher.html":{}}}],["abstractcontrol",{"_index":742,"title":{},"body":{"directives/CompareDirective.html":{}}}],["accept",{"_index":821,"title":{},"body":{"injectables/DialogService.html":{}}}],["accessors",{"_index":21,"title":{},"body":{"injectables/AppInitService.html":{},"components/AppLayout.html":{},"components/BaseField.html":{},"components/BqForm.html":{},"components/BqTextField.html":{},"injectables/LocaleService.html":{},"injectables/LogPublishersService.html":{},"components/MDILayoutComponent.html":{},"classes/ODataResponse.html":{},"classes/PredefinedFilter.html":{}}}],["act",{"_index":1291,"title":{},"body":{"components/Table.html":{},"components/TableFilters.html":{}}}],["activatedroute",{"_index":722,"title":{},"body":{"components/Breadcrumb.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/RouterService.html":{}}}],["activatedroutesnapshot",{"_index":253,"title":{},"body":{"injectables/AuthorizeGuard.html":{},"injectables/MetaDataResolver.html":{}}}],["active",{"_index":1073,"title":{},"body":{"components/MenuBar.html":{}}}],["activeindex",{"_index":1051,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["activemenuindex",{"_index":1406,"title":{},"body":{"components/TopBar.html":{}}}],["activesubmenus",{"_index":1069,"title":{},"body":{"components/MenuBar.html":{}}}],["actual_component",{"_index":221,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["addbuttonclicked",{"_index":1351,"title":{},"body":{"components/TableFilters.html":{}}}],["addclass",{"_index":91,"title":{},"body":{"components/AppLayout.html":{}}}],["addclass(element",{"_index":130,"title":{},"body":{"components/AppLayout.html":{}}}],["addcondtion",{"_index":1339,"title":{},"body":{"components/TableFilters.html":{}}}],["added",{"_index":1533,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["addfilter",{"_index":1389,"title":{},"body":{"classes/TableParams.html":{}}}],["addfilter(filter",{"_index":1399,"title":{},"body":{"classes/TableParams.html":{}}}],["addfilters",{"_index":1390,"title":{},"body":{"classes/TableParams.html":{}}}],["addfilters(filters",{"_index":1400,"title":{},"body":{"classes/TableParams.html":{}}}],["addgenericcomponenttoview",{"_index":1053,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["addgenericcomponenttoview(menutitle",{"_index":1057,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["addifnotinlist",{"_index":611,"title":{},"body":{"components/BqDropdownField.html":{}}}],["additional",{"_index":760,"title":{},"body":{"directives/ControlContainerDirective.html":{}}}],["additionalactions",{"_index":644,"title":{},"body":{"components/BqForm.html":{}}}],["additionalactionsonright",{"_index":645,"title":{},"body":{"components/BqForm.html":{}}}],["additionalqueryparam",{"_index":1082,"title":{},"body":{"interfaces/MenuData.html":{}}}],["addpublisher",{"_index":1007,"title":{},"body":{"injectables/LogPublishersService.html":{}}}],["addpublisher(pub",{"_index":1010,"title":{},"body":{"injectables/LogPublishersService.html":{}}}],["addsubscription",{"_index":728,"title":{},"body":{"classes/Channel.html":{}}}],["addsubscription(subscription",{"_index":732,"title":{},"body":{"classes/Channel.html":{}}}],["addtoview",{"_index":1054,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["addtoview(viewid",{"_index":1059,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["adhost",{"_index":835,"title":{},"body":{"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{}}}],["adpaters",{"_index":1049,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["aftercontentinit",{"_index":69,"title":{},"body":{"components/AppLayout.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BqForm.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/MDILayoutComponent.html":{}}}],["afterviewinit",{"_index":494,"title":{},"body":{"components/BaseFormView.html":{},"components/TableFilters.html":{}}}],["alert",{"_index":813,"title":{},"body":{"injectables/DialogService.html":{}}}],["alert(msg",{"_index":817,"title":{},"body":{"injectables/DialogService.html":{}}}],["alertstore",{"_index":812,"title":{},"body":{"injectables/DialogService.html":{}}}],["aliases",{"_index":1584,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all_predicates",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowadd",{"_index":1153,"title":{},"body":{"classes/ModelMetadata.html":{},"components/Table.html":{}}}],["allowdelete",{"_index":496,"title":{},"body":{"components/BaseFormView.html":{},"classes/ModelMetadata.html":{}}}],["allowdetails",{"_index":497,"title":{},"body":{"components/BaseFormView.html":{},"components/Table.html":{}}}],["allowed",{"_index":673,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["allowedit",{"_index":498,"title":{},"body":{"components/BaseFormView.html":{},"classes/ModelMetadata.html":{},"components/Table.html":{}}}],["allowedroles",{"_index":1083,"title":{},"body":{"interfaces/MenuData.html":{}}}],["allowmultiple",{"_index":612,"title":{},"body":{"components/BqDropdownField.html":{}}}],["allownew",{"_index":499,"title":{},"body":{"components/BaseFormView.html":{}}}],["allowrelatedviewinsert",{"_index":1122,"title":{},"body":{"classes/MetadataField.html":{}}}],["allowrelatedviewselect",{"_index":1123,"title":{},"body":{"classes/MetadataField.html":{}}}],["allows",{"_index":331,"title":{},"body":{"classes/BQConfigData.html":{}}}],["allowselect",{"_index":1154,"title":{},"body":{"classes/ModelMetadata.html":{}}}],["allowsort",{"_index":1318,"title":{},"body":{"components/TableColumn.html":{}}}],["alternate",{"_index":1289,"title":{},"body":{"components/Table.html":{}}}],["always",{"_index":126,"title":{},"body":{"components/AppLayout.html":{},"components/FooterBar.html":{}}}],["angular",{"_index":344,"title":{},"body":{"classes/BQConfigData.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1467,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1469,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["animationevent",{"_index":1421,"title":{},"body":{"components/TopBar.html":{}}}],["anything",{"_index":320,"title":{},"body":{"classes/BQConfigData.html":{}}}],["api",{"_index":301,"title":{},"body":{"classes/BQConfigData.html":{}}}],["apiauthorizationclientconfigurationurl",{"_index":228,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["apirooturl",{"_index":289,"title":{},"body":{"classes/BQConfigData.html":{}}}],["app",{"_index":73,"title":{},"body":{"components/AppLayout.html":{},"classes/BQConfigData.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"classes/OAuthConfig.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/TopRightMenuData.html":{},"components/ViewWrapper.html":{}}}],["appinitservice",{"_index":1,"title":{"injectables/AppInitService.html":{}},"body":{"injectables/AppInitService.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"injectables/NavigationService.html":{},"components/Table.html":{},"classes/TableParams.html":{},"components/TopMenuBar.html":{},"miscellaneous/functions.html":{}}}],["appinjector",{"_index":43,"title":{"classes/AppInjector.html":{}},"body":{"classes/AppInjector.html":{}}}],["applayout",{"_index":53,"title":{"components/AppLayout.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["application",{"_index":15,"title":{},"body":{"injectables/AppInitService.html":{},"classes/BQConfigData.html":{}}}],["applicationname",{"_index":290,"title":{},"body":{"classes/BQConfigData.html":{},"components/FooterBar.html":{},"classes/RunningConfigHelper.html":{},"miscellaneous/variables.html":{}}}],["applicationpaths",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationpathstype",{"_index":223,"title":{"interfaces/ApplicationPathsType.html":{}},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["appliedfilters",{"_index":1331,"title":{},"body":{"components/TableFilters.html":{}}}],["apply",{"_index":1340,"title":{},"body":{"components/TableFilters.html":{}}}],["approved",{"_index":1178,"title":{},"body":{"classes/OAuthConfig.html":{}}}],["apps",{"_index":350,"title":{},"body":{"classes/BQConfigData.html":{}}}],["appsvc",{"_index":1397,"title":{},"body":{"classes/TableParams.html":{}}}],["area",{"_index":339,"title":{},"body":{"classes/BQConfigData.html":{},"components/BqTextArea.html":{}}}],["area'},{'name",{"_index":170,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["area.html",{"_index":681,"title":{},"body":{"components/BqTextArea.html":{}}}],["area.scss",{"_index":680,"title":{},"body":{"components/BqTextArea.html":{}}}],["area.ts",{"_index":679,"title":{},"body":{"components/BqTextArea.html":{}}}],["area/bq",{"_index":678,"title":{},"body":{"components/BqTextArea.html":{}}}],["arg",{"_index":1564,"title":{},"body":{"miscellaneous/functions.html":{}}}],["args",{"_index":598,"title":{},"body":{"pipes/BoolToYesNoPipe.html":{},"pipes/ModelValuePipe.html":{}}}],["array",{"_index":1398,"title":{},"body":{"classes/TableParams.html":{}}}],["assets/log",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assumed",{"_index":305,"title":{},"body":{"classes/BQConfigData.html":{}}}],["async",{"_index":271,"title":{},"body":{"injectables/AuthorizeService.html":{},"components/BqDropdownField.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{}}}],["attachtoview",{"_index":1460,"title":{},"body":{"injectables/ViewWrapperService.html":{}}}],["auth",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["authentication/${loginactions.login",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication/${loginactions.logincallback",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication/${loginactions.loginfailed",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication/${loginactions.profile",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication/${loginactions.register",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication/${logoutactions.loggedout",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication/${logoutactions.logout",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication/${logoutactions.logoutcallback",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticationchanged",{"_index":1411,"title":{},"body":{"components/TopBar.html":{},"components/TopMenuBar.html":{}}}],["authenticationchanged(status",{"_index":1417,"title":{},"body":{"components/TopBar.html":{},"components/TopMenuBar.html":{}}}],["authenticationresultstatus",{"_index":1519,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authenticationresultstatus.fail",{"_index":843,"title":{},"body":{"interfaces/FailureAuthenticationResult.html":{}}}],["authenticationresultstatus.redirect",{"_index":1209,"title":{},"body":{"interfaces/RedirectAuthenticationResult.html":{}}}],["authenticationresultstatus.success",{"_index":1239,"title":{},"body":{"interfaces/SuccessAuthenticationResult.html":{}}}],["authority",{"_index":1170,"title":{},"body":{"classes/OAuthConfig.html":{}}}],["authorization.constants.ts",{"_index":227,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["authorization/api",{"_index":226,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["authorization/authorize.guard.ts",{"_index":248,"title":{},"body":{"injectables/AuthorizeGuard.html":{}}}],["authorization/authorize.interceptor.ts",{"_index":262,"title":{},"body":{"interceptors/AuthorizeInterceptor.html":{}}}],["authorization/authorize.service.ts",{"_index":269,"title":{},"body":{"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IUser.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["authorization/login",{"_index":1020,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["authorization/login/login.component.ts",{"_index":925,"title":{},"body":{"interfaces/INavigationState.html":{},"components/LoginComponent.html":{}}}],["authorization/logout/logout.component.ts",{"_index":928,"title":{},"body":{"interfaces/INavigationState-1.html":{},"components/LogoutComponent.html":{}}}],["authorize",{"_index":251,"title":{},"body":{"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{}}}],["authorizeguard",{"_index":247,"title":{"injectables/AuthorizeGuard.html":{}},"body":{"injectables/AuthorizeGuard.html":{}}}],["authorizeinterceptor",{"_index":260,"title":{"interceptors/AuthorizeInterceptor.html":{}},"body":{"interceptors/AuthorizeInterceptor.html":{}}}],["authorizeservice",{"_index":107,"title":{"injectables/AuthorizeService.html":{}},"body":{"components/AppLayout.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{}}}],["autogen",{"_index":1124,"title":{},"body":{"classes/MetadataField.html":{}}}],["autoloadlookupdata",{"_index":500,"title":{},"body":{"components/BaseFormView.html":{}}}],["autoresize",{"_index":683,"title":{},"body":{"components/BqTextArea.html":{}}}],["babel/core",{"_index":1476,"title":{},"body":{"dependencies.html":{}}}],["back",{"_index":1168,"title":{},"body":{"injectables/NavigationService.html":{}}}],["back(skipcanclose",{"_index":1169,"title":{},"body":{"injectables/NavigationService.html":{}}}],["backend",{"_index":302,"title":{},"body":{"classes/BQConfigData.html":{},"injectables/GenericDataService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"components/Table.html":{},"components/TableFilters.html":{}}}],["background",{"_index":1288,"title":{},"body":{"components/Table.html":{}}}],["badgeeventtopic",{"_index":1084,"title":{},"body":{"interfaces/MenuData.html":{}}}],["bar",{"_index":64,"title":{},"body":{"components/AppLayout.html":{},"classes/BQConfigData.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{}}}],["bar'},{'name",{"_index":187,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["bar.html",{"_index":858,"title":{},"body":{"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopBar.html":{}}}],["bar.scss",{"_index":857,"title":{},"body":{"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopBar.html":{}}}],["bar.ts",{"_index":856,"title":{},"body":{"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{}}}],["bar/footer",{"_index":855,"title":{},"body":{"components/FooterBar.html":{}}}],["bar/menu",{"_index":1066,"title":{},"body":{"components/MenuBar.html":{}}}],["bar/top",{"_index":1405,"title":{},"body":{"components/TopBar.html":{},"components/TopMenuBar.html":{}}}],["base",{"_index":158,"title":{},"body":{"components/AppLayout.html":{},"classes/BQConfigData.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"classes/LogPublisher.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["basecomponent",{"_index":155,"title":{"components/BaseComponent.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["based",{"_index":334,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseListView.html":{}}}],["baseentity",{"_index":424,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{}}}],["basefield",{"_index":156,"title":{"components/BaseField.html":{}},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["baseformview",{"_index":160,"title":{"components/BaseFormView.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{}}}],["baselistview",{"_index":161,"title":{"components/BaseListView.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["basemenu",{"_index":577,"title":{"classes/BaseMenu.html":{}},"body":{"classes/BaseMenu.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["behaviorsubject",{"_index":1222,"title":{},"body":{"injectables/RouterService.html":{}}}],["behaviorsubject(null",{"_index":1019,"title":{},"body":{"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/RouterService.html":{}}}],["behaviorsubject|null>(null",{"_index":1464,"title":{},"body":{"injectables/ViewWrapperService.html":{}}}],["between",{"_index":333,"title":{},"body":{"classes/BQConfigData.html":{},"injectables/NavigationService.html":{},"injectables/RouterService.html":{},"components/Table.html":{},"components/TableFilters.html":{},"miscellaneous/variables.html":{}}}],["bind",{"_index":1278,"title":{},"body":{"components/Table.html":{}}}],["binddocumentclicklistener",{"_index":1341,"title":{},"body":{"components/TableFilters.html":{}}}],["binding",{"_index":478,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["bindoutsideclicklistener",{"_index":1412,"title":{},"body":{"components/TopBar.html":{}}}],["block",{"_index":472,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/FormBlock.html":{}}}],["block'},{'name",{"_index":189,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["block.html",{"_index":867,"title":{},"body":{"components/FormBlock.html":{}}}],["block.scss",{"_index":866,"title":{},"body":{"components/FormBlock.html":{}}}],["block.ts",{"_index":865,"title":{},"body":{"components/FormBlock.html":{}}}],["block/form",{"_index":864,"title":{},"body":{"components/FormBlock.html":{}}}],["boolean",{"_index":115,"title":{},"body":{"components/AppLayout.html":{},"classes/BQConfigData.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"directives/CompareDirective.html":{},"components/CustomFilter.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseView.html":{},"interfaces/IEditFormViewEvents.html":{},"injectables/InternalLogService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{},"injectables/LogService.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"injectables/NavigationService.html":{},"classes/PredefinedFilter.html":{},"classes/Predicate.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"interfaces/RowExpandedEventData.html":{},"classes/RunningConfigHelper.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/ValidationData.html":{},"interfaces/ViewData.html":{},"miscellaneous/variables.html":{}}}],["booleandisplayrender",{"_index":687,"title":{},"body":{"components/BqTextField.html":{}}}],["boolrender",{"_index":688,"title":{},"body":{"components/BqTextField.html":{}}}],["booltoyesno",{"_index":595,"title":{},"body":{"pipes/BoolToYesNoPipe.html":{},"components/BqTextField.html":{}}}],["booltoyesnopipe",{"_index":375,"title":{"pipes/BoolToYesNoPipe.html":{}},"body":{"modules/BQStartPrimeModule.html":{},"pipes/BoolToYesNoPipe.html":{}}}],["boolvalues",{"_index":775,"title":{},"body":{"components/CustomFilter.html":{}}}],["bootstraper",{"_index":10,"title":{},"body":{"injectables/AppInitService.html":{}}}],["border",{"_index":769,"title":{},"body":{"components/CustomFilter.html":{}}}],["borrowed",{"_index":1045,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["bottom",{"_index":127,"title":{},"body":{"components/AppLayout.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/FooterBar.html":{}}}],["box",{"_index":1325,"title":{},"body":{"components/TableFilter.html":{}}}],["bq",{"_index":72,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bqconfigdata",{"_index":137,"title":{"classes/BQConfigData.html":{}},"body":{"components/AppLayout.html":{},"interceptors/AuthorizeInterceptor.html":{},"classes/BQConfigData.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"injectables/GenericDataService.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"injectables/MetaDataService.html":{},"classes/RunningConfigHelper.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{}}}],["bqconfigservice",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bqdropdownfield",{"_index":162,"title":{"components/BqDropdownField.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["bqform",{"_index":164,"title":{"components/BqForm.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["bqpasswordfield",{"_index":166,"title":{"components/BqPasswordField.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["bqstart",{"_index":14,"title":{},"body":{"injectables/AppInitService.html":{},"classes/BQConfigData.html":{},"modules/BQStartPrimeModule.html":{}}}],["bqstartprimemodule",{"_index":368,"title":{"modules/BQStartPrimeModule.html":{}},"body":{"modules/BQStartPrimeModule.html":{},"modules.html":{}}}],["bqtable",{"_index":574,"title":{},"body":{"components/BaseListView.html":{}}}],["bqtemplate",{"_index":213,"title":{"directives/BQTemplate.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["bqtemplate]'},{'name",{"_index":214,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["bqtextarea",{"_index":168,"title":{"components/BqTextArea.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["bqtextfield",{"_index":171,"title":{"components/BqTextField.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["breadcrumb",{"_index":172,"title":{"components/Breadcrumb.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/ViewData.html":{},"components/ViewWrapper.html":{}}}],["breadcrumb'},{'name",{"_index":173,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["breadcrumb.html",{"_index":717,"title":{},"body":{"components/Breadcrumb.html":{}}}],["breadcrumb.scss",{"_index":716,"title":{},"body":{"components/Breadcrumb.html":{}}}],["bridge",{"_index":1292,"title":{},"body":{"components/Table.html":{},"components/TableFilters.html":{}}}],["browse",{"_index":1576,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1474,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":993,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LogPublishersService.html":{}}}],["buildlogstring",{"_index":990,"title":{},"body":{"classes/LogEntry.html":{}}}],["buildlogstringwithoutextra",{"_index":991,"title":{},"body":{"classes/LogEntry.html":{}}}],["buildpublishers",{"_index":1008,"title":{},"body":{"injectables/LogPublishersService.html":{}}}],["bus",{"_index":553,"title":{},"body":{"components/BaseListView.html":{}}}],["button",{"_index":573,"title":{},"body":{"components/BaseListView.html":{}}}],["buttonclass",{"_index":1433,"title":{},"body":{"interfaces/TopRightMenuData.html":{}}}],["buttons",{"_index":353,"title":{},"body":{"classes/BQConfigData.html":{}}}],["byte",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c",{"_index":743,"title":{},"body":{"directives/CompareDirective.html":{}}}],["calc(100vh",{"_index":1040,"title":{},"body":{"components/MDILayoutComponent.html":{}}}],["callback",{"_index":1237,"title":{},"body":{"classes/Subscription.html":{},"miscellaneous/variables.html":{}}}],["called",{"_index":904,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IEditFormViewEvents.html":{},"miscellaneous/functions.html":{}}}],["canactivate",{"_index":249,"title":{},"body":{"injectables/AuthorizeGuard.html":{}}}],["canactivate(_next",{"_index":252,"title":{},"body":{"injectables/AuthorizeGuard.html":{}}}],["cancallafterinitcomplete",{"_index":1549,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cancallafterinitcomplete(arg",{"_index":1557,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cancallafterserverdatareceived",{"_index":1550,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cancallafterserverdatareceived(arg",{"_index":1565,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cancallbeforedelete",{"_index":1551,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cancallbeforedelete(arg",{"_index":1566,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cancallbeforesave",{"_index":1552,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cancallbeforesave(arg",{"_index":1567,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cancel",{"_index":823,"title":{},"body":{"injectables/DialogService.html":{}}}],["canclose",{"_index":512,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"interfaces/IBaseView.html":{}}}],["canopen",{"_index":513,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"interfaces/IBaseView.html":{}}}],["canopen(key",{"_index":530,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"interfaces/IBaseView.html":{}}}],["caption",{"_index":454,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"classes/FilterByClause.html":{},"classes/MetadataField.html":{},"classes/OrderByClause.html":{},"classes/PredefinedFilter.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{}}}],["casting",{"_index":1559,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cellstyle",{"_index":1319,"title":{},"body":{"components/TableColumn.html":{}}}],["celltemplate",{"_index":1320,"title":{},"body":{"components/TableColumn.html":{}}}],["changed",{"_index":1282,"title":{},"body":{"components/Table.html":{}}}],["changedetection",{"_index":1067,"title":{},"body":{"components/MenuBar.html":{}}}],["changedetectionstrategy.onpush",{"_index":1068,"title":{},"body":{"components/MenuBar.html":{}}}],["changes",{"_index":482,"title":{},"body":{"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Table.html":{}}}],["channel",{"_index":724,"title":{"classes/Channel.html":{}},"body":{"classes/Channel.html":{}}}],["channelname",{"_index":726,"title":{},"body":{"classes/Channel.html":{},"injectables/MessageService.html":{}}}],["char",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":1561,"title":{},"body":{"miscellaneous/functions.html":{}}}],["child",{"_index":576,"title":{},"body":{"components/BaseListView.html":{}}}],["childfields",{"_index":1125,"title":{},"body":{"classes/MetadataField.html":{}}}],["childmenus",{"_index":1085,"title":{},"body":{"interfaces/MenuData.html":{}}}],["chips",{"_index":175,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{},"miscellaneous/variables.html":{}}}],["chips_value_accessor",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chipsmenu",{"_index":174,"title":{},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":42,"title":{"classes/AppInjector.html":{},"classes/BQConfigData.html":{},"classes/BaseEntity.html":{},"classes/BaseMenu.html":{},"classes/Channel.html":{},"classes/DataServiceOptions.html":{},"classes/FilterByClause.html":{},"classes/LocaleId.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{},"classes/Message.html":{},"classes/MessageBusPayLoad.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"classes/OAuthConfig.html":{},"classes/ODataResponse.html":{},"classes/OrderByClause.html":{},"classes/PredefinedFilter.html":{},"classes/Predicate.html":{},"classes/PrimaryKey.html":{},"classes/RouteData.html":{},"classes/RunningConfigHelper.html":{},"classes/Subscription.html":{},"classes/TableParams.html":{},"classes/TypeSystem.html":{},"classes/ViewOptionalData.html":{},"classes/ViewRunningData.html":{}},"body":{"classes/BQConfigData.html":{},"components/BaseFormView.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"classes/LogPublisher.html":{},"injectables/LogService.html":{},"injectables/MainRegionAdapterService.html":{},"classes/RunningConfigHelper.html":{}}}],["classes",{"_index":44,"title":{},"body":{"classes/AppInjector.html":{},"classes/BQConfigData.html":{},"classes/BaseEntity.html":{},"classes/BaseMenu.html":{},"classes/Channel.html":{},"classes/DataServiceOptions.html":{},"classes/FilterByClause.html":{},"classes/LocaleId.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{},"classes/Message.html":{},"classes/MessageBusPayLoad.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"classes/OAuthConfig.html":{},"classes/ODataResponse.html":{},"classes/OrderByClause.html":{},"classes/PredefinedFilter.html":{},"classes/Predicate.html":{},"classes/PrimaryKey.html":{},"classes/RouteData.html":{},"classes/RunningConfigHelper.html":{},"classes/Subscription.html":{},"classes/TableParams.html":{},"classes/TypeSystem.html":{},"classes/ViewOptionalData.html":{},"classes/ViewRunningData.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["classname",{"_index":131,"title":{},"body":{"components/AppLayout.html":{}}}],["clear",{"_index":936,"title":{},"body":{"injectables/InternalLogService.html":{},"classes/LogConsole.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"injectables/LogService.html":{},"components/TableFilters.html":{}}}],["clearfilters",{"_index":1391,"title":{},"body":{"classes/TableParams.html":{}}}],["client",{"_index":1176,"title":{},"body":{"classes/OAuthConfig.html":{},"dependencies.html":{}}}],["client_id",{"_index":1171,"title":{},"body":{"classes/OAuthConfig.html":{}}}],["closed",{"_index":529,"title":{},"body":{"components/BaseFormView.html":{}}}],["cm.isvisible",{"_index":1079,"title":{},"body":{"components/MenuBar.html":{}}}],["cm.label",{"_index":1078,"title":{},"body":{"components/MenuBar.html":{}}}],["code",{"_index":1180,"title":{},"body":{"classes/OAuthConfig.html":{}}}],["col.caption",{"_index":1314,"title":{},"body":{"components/Table.html":{}}}],["col.field",{"_index":1316,"title":{},"body":{"components/Table.html":{}}}],["color",{"_index":770,"title":{},"body":{"components/CustomFilter.html":{}}}],["column",{"_index":473,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Table.html":{},"components/TableColumn.html":{}}}],["column'},{'name",{"_index":203,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["column.ts",{"_index":1317,"title":{},"body":{"components/TableColumn.html":{}}}],["columns",{"_index":1243,"title":{},"body":{"components/Table.html":{}}}],["comp",{"_index":639,"title":{},"body":{"components/BqForm.html":{},"components/FormBlock.html":{}}}],["comp.form",{"_index":640,"title":{},"body":{"components/BqForm.html":{},"components/FormBlock.html":{}}}],["compact",{"_index":1547,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["company",{"_index":306,"title":{},"body":{"classes/BQConfigData.html":{}}}],["companyname",{"_index":291,"title":{},"body":{"classes/BQConfigData.html":{},"classes/RunningConfigHelper.html":{}}}],["compare",{"_index":739,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/enumerations.html":{}}}],["compare]'},{'name",{"_index":216,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["comparedirective",{"_index":215,"title":{"directives/CompareDirective.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"directives/CompareDirective.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["compareparent",{"_index":660,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextField.html":{}}}],["compareto",{"_index":661,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextField.html":{}}}],["comparetomsg",{"_index":662,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextField.html":{}}}],["completesignin",{"_index":272,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["completesignin(url",{"_index":278,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["completesignout",{"_index":273,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["completesignout(url",{"_index":280,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["component",{"_index":52,"title":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}},"body":{"components/AppLayout.html":{},"components/BaseListView.html":{},"directives/ControlContainerDirective.html":{},"components/DynamicMDILoaderComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"interfaces/MenuData.html":{},"components/Table.html":{},"interfaces/ViewData.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":153,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["components",{"_index":54,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{},"overview.html":{}}}],["config",{"_index":22,"title":{},"body":{"injectables/AppInitService.html":{},"components/AppLayout.html":{},"interceptors/AuthorizeInterceptor.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"injectables/GenericDataService.html":{},"classes/LogPublisherConfig.html":{},"injectables/LogPublishersService.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"injectables/MetaDataService.html":{},"classes/RunningConfigHelper.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"miscellaneous/variables.html":{}}}],["config.ts",{"_index":284,"title":{},"body":{"classes/BQConfigData.html":{},"interfaces/CustomUserMenus.html":{},"interfaces/MenuData.html":{},"classes/OAuthConfig.html":{},"classes/RouteData.html":{},"classes/RunningConfigHelper.html":{},"interfaces/TopRightMenuData.html":{},"interfaces/ViewData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":287,"title":{},"body":{"classes/BQConfigData.html":{},"directives/ControlContainerDirective.html":{},"classes/OAuthConfig.html":{},"classes/RunningConfigHelper.html":{}}}],["configure",{"_index":1006,"title":{},"body":{"injectables/LogPublishersService.html":{}}}],["configured",{"_index":1015,"title":{},"body":{"injectables/LogService.html":{}}}],["confirm",{"_index":810,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirm(msg",{"_index":820,"title":{},"body":{"injectables/DialogService.html":{}}}],["confirmationservice",{"_index":816,"title":{},"body":{"injectables/DialogService.html":{}}}],["console",{"_index":981,"title":{},"body":{"classes/LogConsole.html":{}}}],["constitute",{"_index":1450,"title":{},"body":{"interfaces/ViewData.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"injectables/AppInitService.html":{},"components/AppLayout.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/CompareDirective.html":{},"components/CustomFilter.html":{},"injectables/DialogService.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/GenericDataService.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogLocalStorage.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"injectables/NavigationService.html":{},"classes/ODataResponse.html":{},"classes/PredefinedFilter.html":{},"classes/Predicate.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"classes/RunningConfigHelper.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"classes/TypeSystem.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{}}}],["constructor(authorize",{"_index":250,"title":{},"body":{"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{}}}],["constructor(authorizeservice",{"_index":1018,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{}}}],["constructor(config",{"_index":1233,"title":{},"body":{"classes/RunningConfigHelper.html":{}}}],["constructor(confirmationservice",{"_index":815,"title":{},"body":{"injectables/DialogService.html":{}}}],["constructor(http",{"_index":876,"title":{},"body":{"injectables/GenericDataService.html":{},"injectables/LocaleService.html":{},"injectables/LogPublishersService.html":{},"injectables/MetaDataService.html":{}}}],["constructor(injector",{"_index":25,"title":{},"body":{"injectables/AppInitService.html":{},"injectables/AuthorizeService.html":{}}}],["constructor(key",{"_index":1436,"title":{},"body":{"classes/TypeSystem.html":{}}}],["constructor(locale",{"_index":1271,"title":{},"body":{"components/Table.html":{}}}],["constructor(localeservice",{"_index":963,"title":{},"body":{"classes/LocaleId.html":{}}}],["constructor(messageserviceprovider",{"_index":1102,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(metadataservice",{"_index":1116,"title":{},"body":{"injectables/MetaDataResolver.html":{}}}],["constructor(msgsvc",{"_index":1352,"title":{},"body":{"components/TableFilters.html":{}}}],["constructor(name",{"_index":731,"title":{},"body":{"classes/Channel.html":{}}}],["constructor(param",{"_index":1196,"title":{},"body":{"classes/PredefinedFilter.html":{}}}],["constructor(primengconfig",{"_index":105,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{}}}],["constructor(publishersservice",{"_index":942,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["constructor(regionsvc",{"_index":1034,"title":{},"body":{"components/MDIComponent.html":{}}}],["constructor(response",{"_index":1187,"title":{},"body":{"classes/ODataResponse.html":{}}}],["constructor(route",{"_index":837,"title":{},"body":{"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"injectables/RouterService.html":{}}}],["constructor(router",{"_index":583,"title":{},"body":{"classes/BaseMenu.html":{},"components/Breadcrumb.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"injectables/NavigationService.html":{},"components/TopMenuBar.html":{}}}],["constructor(routersvc",{"_index":524,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqForm.html":{},"classes/TableParams.html":{}}}],["constructor(template",{"_index":396,"title":{},"body":{"directives/BQTemplate.html":{}}}],["constructor(viewcontainerref",{"_index":832,"title":{},"body":{"directives/DynamicHostDirective.html":{}}}],["constructor(vwservice",{"_index":1458,"title":{},"body":{"components/ViewWrapper.html":{}}}],["constructor(vwsvc",{"_index":460,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["container",{"_index":1332,"title":{},"body":{"components/TableFilters.html":{},"miscellaneous/variables.html":{}}}],["container.directive.ts",{"_index":746,"title":{},"body":{"directives/ControlContainerDirective.html":{}}}],["container.provider.ts",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["containerfactory",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contains",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["containsmultipleentities",{"_index":1186,"title":{},"body":{"classes/ODataResponse.html":{}}}],["content",{"_index":633,"title":{},"body":{"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["contentchildren(bqtemplate",{"_index":143,"title":{},"body":{"components/AppLayout.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/MDILayoutComponent.html":{}}}],["contentchildren(tablecolumn",{"_index":1308,"title":{},"body":{"components/Table.html":{}}}],["contentchildren(tablefilter",{"_index":1309,"title":{},"body":{"components/Table.html":{}}}],["continue",{"_index":921,"title":{},"body":{"interfaces/IEditFormViewEvents.html":{}}}],["control",{"_index":1276,"title":{},"body":{"components/Table.html":{},"miscellaneous/enumerations.html":{}}}],["controlcontainer",{"_index":637,"title":{},"body":{"components/BqForm.html":{},"components/FormBlock.html":{},"miscellaneous/variables.html":{}}}],["controlcontainerdirective",{"_index":217,"title":{"directives/ControlContainerDirective.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"directives/ControlContainerDirective.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["controlcontainerprovider",{"_index":763,"title":{},"body":{"directives/ControlContainerDirective.html":{},"miscellaneous/variables.html":{}}}],["controlfootertemplate",{"_index":78,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{}}}],["controlitemlabelrendertemplate",{"_index":603,"title":{},"body":{"components/BqDropdownField.html":{}}}],["controlitemrendertemplate",{"_index":604,"title":{},"body":{"components/BqDropdownField.html":{}}}],["controllers",{"_index":870,"title":{},"body":{"injectables/GenericDataService.html":{}}}],["controlrendertemplate",{"_index":439,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["controls",{"_index":528,"title":{},"body":{"components/BaseFormView.html":{},"directives/ControlContainerDirective.html":{}}}],["copyright",{"_index":859,"title":{},"body":{"components/FooterBar.html":{}}}],["core",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":1244,"title":{},"body":{"components/Table.html":{},"classes/TableParams.html":{}}}],["countsub",{"_index":1245,"title":{},"body":{"components/Table.html":{}}}],["create",{"_index":650,"title":{},"body":{"components/BqForm.html":{}}}],["created",{"_index":752,"title":{},"body":{"directives/ControlContainerDirective.html":{}}}],["createdby",{"_index":427,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createdon",{"_index":428,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createemptymodel",{"_index":514,"title":{},"body":{"components/BaseFormView.html":{}}}],["cross",{"_index":748,"title":{},"body":{"directives/ControlContainerDirective.html":{},"miscellaneous/variables.html":{}}}],["currency",{"_index":697,"title":{},"body":{"components/BqTextField.html":{}}}],["currencycode",{"_index":698,"title":{},"body":{"components/BqTextField.html":{}}}],["current",{"_index":304,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseFormView.html":{}}}],["currentid",{"_index":501,"title":{},"body":{"components/BaseFormView.html":{}}}],["currentlocale",{"_index":970,"title":{},"body":{"injectables/LocaleService.html":{}}}],["currentstack",{"_index":1052,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["currentview",{"_index":1461,"title":{},"body":{"injectables/ViewWrapperService.html":{}}}],["custom",{"_index":179,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"interfaces/CustomUserMenus.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"classes/LogPublisher.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["customfilter",{"_index":177,"title":{"components/CustomFilter.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["customfilters",{"_index":1333,"title":{},"body":{"components/TableFilters.html":{}}}],["customfootertemplate",{"_index":79,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{}}}],["customise",{"_index":1279,"title":{},"body":{"components/Table.html":{}}}],["customname",{"_index":845,"title":{},"body":{"classes/FilterByClause.html":{}}}],["customusermenus",{"_index":356,"title":{"interfaces/CustomUserMenus.html":{}},"body":{"classes/BQConfigData.html":{},"interfaces/CustomUserMenus.html":{}}}],["data",{"_index":361,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IEditFormViewEvents.html":{},"classes/MetadataField.html":{},"classes/RouteData.html":{},"classes/RunningConfigHelper.html":{},"components/Table.html":{},"classes/TableParams.html":{},"interfaces/ViewData.html":{}}}],["data.resolver.ts",{"_index":1113,"title":{},"body":{"injectables/MetaDataResolver.html":{}}}],["data.service.ts",{"_index":804,"title":{},"body":{"classes/DataServiceOptions.html":{},"injectables/GenericDataService.html":{},"injectables/MetaDataService.html":{},"miscellaneous/variables.html":{}}}],["data.ts",{"_index":827,"title":{},"body":{"interfaces/Dictionary.html":{},"interfaces/EnumItem.html":{},"classes/FilterByClause.html":{},"interfaces/IBaseEvents.html":{},"classes/MessageBusPayLoad.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"classes/OrderByClause.html":{},"classes/PredefinedFilter.html":{},"classes/Predicate.html":{},"classes/PrimaryKey.html":{},"classes/TableParams.html":{},"classes/TypeSystem.html":{},"interfaces/ValidationData.html":{},"classes/ViewOptionalData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["data/record",{"_index":881,"title":{},"body":{"injectables/GenericDataService.html":{}}}],["dataserviceoptions",{"_index":802,"title":{"classes/DataServiceOptions.html":{}},"body":{"classes/DataServiceOptions.html":{},"injectables/GenericDataService.html":{}}}],["dataservicetoken",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasvc",{"_index":503,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{}}}],["datatype",{"_index":846,"title":{},"body":{"classes/FilterByClause.html":{},"classes/MetadataField.html":{}}}],["date",{"_index":433,"title":{},"body":{"classes/BaseEntity.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"classes/LogEntry.html":{}}}],["date:localepipeformat",{"_index":714,"title":{},"body":{"components/BqTextField.html":{}}}],["dateformat",{"_index":699,"title":{},"body":{"components/BqTextField.html":{},"classes/MetadataField.html":{}}}],["datemodel",{"_index":440,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["daterender",{"_index":689,"title":{},"body":{"components/BqTextField.html":{}}}],["datetime",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deal",{"_index":554,"title":{},"body":{"components/BaseListView.html":{}}}],["debug",{"_index":937,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["debug(msg",{"_index":948,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["decimal",{"_index":710,"title":{},"body":{"components/BqTextField.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":374,"title":{},"body":{"modules/BQStartPrimeModule.html":{}}}],["decorators",{"_index":139,"title":{},"body":{"components/AppLayout.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/MDILayoutComponent.html":{},"components/Table.html":{},"components/TopBar.html":{}}}],["deep",{"_index":768,"title":{},"body":{"components/CustomFilter.html":{},"components/Table.html":{}}}],["default",{"_index":116,"title":{},"body":{"components/AppLayout.html":{},"classes/BQConfigData.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/ControlContainerDirective.html":{},"components/CustomFilter.html":{},"injectables/DialogService.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/InternalLogService.html":{},"injectables/LocaleService.html":{},"classes/LogEntry.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"injectables/MetaDataService.html":{},"injectables/NavigationService.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"classes/RunningConfigHelper.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopMenuBar.html":{},"injectables/ViewWrapperService.html":{},"miscellaneous/variables.html":{}}}],["defaultdaterender",{"_index":690,"title":{},"body":{"components/BqTextField.html":{}}}],["defaultfootertemplate",{"_index":80,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{}}}],["defaultitemrender",{"_index":605,"title":{},"body":{"components/BqDropdownField.html":{}}}],["defaultlocaleid",{"_index":976,"title":{},"body":{"injectables/LocaleService.html":{}}}],["defaultloginredirectpath",{"_index":229,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["defaultpagesize",{"_index":364,"title":{},"body":{"classes/BQConfigData.html":{},"classes/RunningConfigHelper.html":{}}}],["defaultpredicate",{"_index":1323,"title":{},"body":{"components/TableFilter.html":{}}}],["defaultrender",{"_index":606,"title":{},"body":{"components/BqDropdownField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["defaultsearchfield",{"_index":1324,"title":{},"body":{"components/TableFilter.html":{}}}],["define",{"_index":563,"title":{},"body":{"components/BaseListView.html":{},"interfaces/CustomUserMenus.html":{},"interfaces/MenuData.html":{},"interfaces/TopRightMenuData.html":{},"interfaces/ViewData.html":{}}}],["defines",{"_index":896,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{}}}],["delete",{"_index":515,"title":{},"body":{"components/BaseFormView.html":{},"components/BqForm.html":{},"injectables/GenericDataService.html":{},"interfaces/IEditFormViewEvents.html":{}}}],["delete(model",{"_index":880,"title":{},"body":{"injectables/GenericDataService.html":{}}}],["deleted",{"_index":918,"title":{},"body":{"interfaces/IEditFormViewEvents.html":{},"miscellaneous/enumerations.html":{}}}],["density",{"_index":1260,"title":{},"body":{"components/Table.html":{},"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":1466,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":641,"title":{},"body":{"components/BqForm.html":{},"components/FormBlock.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":9,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/AppLayout.html":{},"classes/BQConfigData.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseFormView.html":{},"directives/ControlContainerDirective.html":{},"interfaces/CustomUserMenus.html":{},"injectables/DialogService.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"interfaces/MenuData.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"injectables/NavigationService.html":{},"classes/OAuthConfig.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"classes/RunningConfigHelper.html":{},"components/Table.html":{},"components/TableColumn.html":{},"interfaces/TopRightMenuData.html":{},"interfaces/ViewData.html":{}}}],["deskto",{"_index":326,"title":{},"body":{"classes/BQConfigData.html":{}}}],["desktop/electron",{"_index":349,"title":{},"body":{"classes/BQConfigData.html":{}}}],["destroy",{"_index":1392,"title":{},"body":{"classes/TableParams.html":{}}}],["detail",{"_index":1452,"title":{},"body":{"interfaces/ViewData.html":{}}}],["details",{"_index":288,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"components/Table.html":{},"miscellaneous/enumerations.html":{}}}],["dialog",{"_index":809,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogheader",{"_index":81,"title":{},"body":{"components/AppLayout.html":{}}}],["dialogmsg",{"_index":82,"title":{},"body":{"components/AppLayout.html":{}}}],["dialogs",{"_index":811,"title":{},"body":{"injectables/DialogService.html":{}}}],["dialogservice",{"_index":83,"title":{"injectables/DialogService.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"injectables/DialogService.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["dialogvisible",{"_index":84,"title":{},"body":{"components/AppLayout.html":{}}}],["dictionary",{"_index":141,"title":{"interfaces/Dictionary.html":{}},"body":{"components/AppLayout.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"interfaces/Dictionary.html":{},"components/MDILayoutComponent.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"classes/RunningConfigHelper.html":{},"miscellaneous/variables.html":{}}}],["dir",{"_index":1191,"title":{},"body":{"classes/OrderByClause.html":{}}}],["directive",{"_index":391,"title":{"directives/BQTemplate.html":{},"directives/CompareDirective.html":{},"directives/ControlContainerDirective.html":{},"directives/DynamicHostDirective.html":{}},"body":{"miscellaneous/variables.html":{}}}],["directives",{"_index":212,"title":{},"body":{"components/AppLayout.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"directives/CompareDirective.html":{},"directives/ControlContainerDirective.html":{},"components/CustomFilter.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{},"overview.html":{}}}],["disabled",{"_index":455,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["discard",{"_index":516,"title":{},"body":{"components/BaseFormView.html":{},"components/BqForm.html":{}}}],["display",{"_index":125,"title":{},"body":{"components/AppLayout.html":{},"classes/BQConfigData.html":{},"components/BaseField.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/CustomFilter.html":{},"interfaces/CustomUserMenus.html":{},"components/FooterBar.html":{},"interfaces/MenuData.html":{},"classes/Predicate.html":{},"components/Table.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"interfaces/TopRightMenuData.html":{},"interfaces/ViewData.html":{},"miscellaneous/variables.html":{}}}],["displayed",{"_index":566,"title":{},"body":{"components/BaseListView.html":{}}}],["displaymodel",{"_index":607,"title":{},"body":{"components/BqDropdownField.html":{}}}],["displayname",{"_index":613,"title":{},"body":{"components/BqDropdownField.html":{},"components/TableFilter.html":{}}}],["displaypasswordrender",{"_index":656,"title":{},"body":{"components/BqPasswordField.html":{}}}],["displayvalue",{"_index":847,"title":{},"body":{"classes/FilterByClause.html":{}}}],["document",{"_index":336,"title":{},"body":{"classes/BQConfigData.html":{},"components/MDIComponent.html":{}}}],["documentclicklistener",{"_index":1334,"title":{},"body":{"components/TableFilters.html":{}}}],["done",{"_index":905,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{}}}],["double",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["driven",{"_index":750,"title":{},"body":{"directives/ControlContainerDirective.html":{}}}],["dropdown",{"_index":163,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["dyn",{"_index":182,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["dynamic",{"_index":46,"title":{},"body":{"classes/AppInjector.html":{},"dependencies.html":{}}}],["dynamichostdirective",{"_index":219,"title":{"directives/DynamicHostDirective.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["dynamicloadercomponent",{"_index":181,"title":{"components/DynamicLoaderComponent.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["dynamicmdiloadercomponent",{"_index":184,"title":{"components/DynamicMDILoaderComponent.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["dynhost",{"_index":220,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["e",{"_index":1036,"title":{},"body":{"components/MDIComponent.html":{}}}],["e.g",{"_index":572,"title":{},"body":{"components/BaseListView.html":{}}}],["edit",{"_index":475,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"miscellaneous/enumerations.html":{}}}],["editable",{"_index":614,"title":{},"body":{"components/BqDropdownField.html":{}}}],["editenumrender",{"_index":608,"title":{},"body":{"components/BqDropdownField.html":{}}}],["editmode",{"_index":441,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["editrender",{"_index":609,"title":{},"body":{"components/BqDropdownField.html":{}}}],["el",{"_index":1335,"title":{},"body":{"components/TableFilters.html":{}}}],["electron",{"_index":327,"title":{},"body":{"classes/BQConfigData.html":{}}}],["element",{"_index":133,"title":{},"body":{"components/AppLayout.html":{}}}],["elementref",{"_index":1353,"title":{},"body":{"components/TableFilters.html":{},"components/TopBar.html":{}}}],["email",{"_index":677,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"miscellaneous/enumerations.html":{}}}],["emailrender",{"_index":691,"title":{},"body":{"components/BqTextField.html":{}}}],["empty",{"_index":533,"title":{},"body":{"components/BaseFormView.html":{}}}],["enable",{"_index":747,"title":{},"body":{"directives/ControlContainerDirective.html":{},"miscellaneous/variables.html":{}}}],["enablebqadminlog",{"_index":984,"title":{},"body":{"classes/LogConsole.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{}}}],["encapsulate",{"_index":1213,"title":{},"body":{"injectables/RouterService.html":{}}}],["ends",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enterprise",{"_index":351,"title":{},"body":{"classes/BQConfigData.html":{}}}],["entities",{"_index":1185,"title":{},"body":{"classes/ODataResponse.html":{}}}],["entity",{"_index":538,"title":{},"body":{"components/BaseFormView.html":{},"injectables/MetaDataService.html":{},"classes/ODataResponse.html":{},"interfaces/ViewData.html":{}}}],["entry",{"_index":372,"title":{},"body":{"modules/BQStartPrimeModule.html":{},"injectables/InternalLogService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"injectables/LogService.html":{}}}],["entrydate",{"_index":988,"title":{},"body":{"classes/LogEntry.html":{}}}],["enum",{"_index":1545,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":1518,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumitem",{"_index":623,"title":{"interfaces/EnumItem.html":{}},"body":{"components/BqDropdownField.html":{},"interfaces/EnumItem.html":{},"classes/MetadataField.html":{}}}],["enums",{"_index":1126,"title":{},"body":{"classes/MetadataField.html":{}}}],["environment",{"_index":328,"title":{},"body":{"classes/BQConfigData.html":{}}}],["equalcolumnwidth",{"_index":1261,"title":{},"body":{"components/Table.html":{}}}],["errhandler",{"_index":403,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["errhandler(error",{"_index":410,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["error",{"_index":411,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"injectables/DialogService.html":{},"components/FooterBar.html":{},"injectables/InternalLogService.html":{},"injectables/LogService.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{},"miscellaneous/enumerations.html":{}}}],["error(msg",{"_index":951,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["errordialog",{"_index":814,"title":{},"body":{"injectables/DialogService.html":{}}}],["errordialog(msg",{"_index":824,"title":{},"body":{"injectables/DialogService.html":{}}}],["errormessage",{"_index":1438,"title":{},"body":{"interfaces/ValidationData.html":{}}}],["es",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["escapevalue",{"_index":1435,"title":{},"body":{"classes/TypeSystem.html":{}}}],["escapevalue(value",{"_index":1437,"title":{},"body":{"classes/TypeSystem.html":{}}}],["etc",{"_index":66,"title":{},"body":{"components/AppLayout.html":{}}}],["ev",{"_index":135,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{},"components/Table.html":{},"components/TopMenuBar.html":{}}}],["event",{"_index":900,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableFilters.html":{},"components/TopBar.html":{}}}],["eventemitter",{"_index":129,"title":{},"body":{"components/AppLayout.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/CustomFilter.html":{},"components/MDILayoutComponent.html":{},"components/Table.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{}}}],["eventname",{"_index":800,"title":{},"body":{"interfaces/CustomUserMenus.html":{},"interfaces/TopRightMenuData.html":{}}}],["events",{"_index":1563,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expand",{"_index":1385,"title":{},"body":{"classes/TableParams.html":{}}}],["expandclause",{"_index":805,"title":{},"body":{"classes/DataServiceOptions.html":{},"classes/ViewOptionalData.html":{}}}],["expanded",{"_index":1225,"title":{},"body":{"interfaces/RowExpandedEventData.html":{},"components/Table.html":{}}}],["expandedrowtemplate",{"_index":1262,"title":{},"body":{"components/Table.html":{}}}],["expandrow",{"_index":1251,"title":{},"body":{"components/Table.html":{}}}],["expandrow(rowdata",{"_index":1297,"title":{},"body":{"components/Table.html":{}}}],["exports",{"_index":387,"title":{},"body":{"modules/BQStartPrimeModule.html":{}}}],["extend",{"_index":999,"title":{},"body":{"classes/LogPublisher.html":{}}}],["extends",{"_index":492,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"classes/LogConsole.html":{},"classes/LogLocalStorage.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["extrainfo",{"_index":989,"title":{},"body":{"classes/LogEntry.html":{}}}],["f44336",{"_index":771,"title":{},"body":{"components/CustomFilter.html":{}}}],["fail",{"_index":1527,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["failed",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failureauthenticationresult",{"_index":841,"title":{"interfaces/FailureAuthenticationResult.html":{}},"body":{"interfaces/FailureAuthenticationResult.html":{},"miscellaneous/typealiases.html":{}}}],["false",{"_index":118,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/FooterBar.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"injectables/NavigationService.html":{},"classes/RouteData.html":{},"components/Table.html":{},"components/TableFilter.html":{},"components/TopMenuBar.html":{},"miscellaneous/variables.html":{}}}],["family_name",{"_index":929,"title":{},"body":{"interfaces/IUser.html":{}}}],["fatal",{"_index":938,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["fatal(msg",{"_index":952,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["fetch",{"_index":869,"title":{},"body":{"injectables/GenericDataService.html":{}}}],["fetching",{"_index":1118,"title":{},"body":{"injectables/MetaDataService.html":{}}}],["field",{"_index":437,"title":{},"body":{"components/BaseField.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"classes/FilterByClause.html":{},"classes/PredefinedFilter.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{}}}],["field'},{'name",{"_index":159,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["field.html",{"_index":602,"title":{},"body":{"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextField.html":{}}}],["field.scss",{"_index":601,"title":{},"body":{"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextField.html":{}}}],["field.ts",{"_index":436,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextField.html":{}}}],["field/bq",{"_index":600,"title":{},"body":{"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextField.html":{}}}],["fieldcss",{"_index":442,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["fieldname",{"_index":848,"title":{},"body":{"classes/FilterByClause.html":{},"classes/OrderByClause.html":{}}}],["fields",{"_index":468,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"classes/ModelMetadata.html":{}}}],["fieldsize",{"_index":456,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["fieldupdated",{"_index":783,"title":{},"body":{"components/CustomFilter.html":{}}}],["fieldupdated(newval",{"_index":791,"title":{},"body":{"components/CustomFilter.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/AppLayout.html":{},"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"classes/BQConfigData.html":{},"modules/BQStartPrimeModule.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"classes/BaseEntity.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"pipes/BoolToYesNoPipe.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/CompareDirective.html":{},"directives/ControlContainerDirective.html":{},"components/CustomFilter.html":{},"interfaces/CustomUserMenus.html":{},"classes/DataServiceOptions.html":{},"injectables/DialogService.html":{},"interfaces/Dictionary.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"interfaces/EnumItem.html":{},"interfaces/FailureAuthenticationResult.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseEvents.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IBaseView.html":{},"interfaces/IEditFormViewEvents.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"classes/Message.html":{},"classes/MessageBusPayLoad.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"pipes/ModelValuePipe.html":{},"injectables/NavigationService.html":{},"classes/OAuthConfig.html":{},"classes/ODataResponse.html":{},"classes/OrderByClause.html":{},"pipes/PasswordPipe.html":{},"classes/PredefinedFilter.html":{},"classes/Predicate.html":{},"classes/PrimaryKey.html":{},"interfaces/RedirectAuthenticationResult.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"interfaces/RowExpandedEventData.html":{},"classes/RunningConfigHelper.html":{},"classes/Subscription.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/TopRightMenuData.html":{},"classes/TypeSystem.html":{},"interfaces/ValidationData.html":{},"interfaces/ViewData.html":{},"classes/ViewOptionalData.html":{},"classes/ViewRunningData.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{}}}],["filter",{"_index":568,"title":{},"body":{"components/BaseListView.html":{},"components/CustomFilter.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{}}}],["filter'},{'name",{"_index":180,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["filter.html",{"_index":774,"title":{},"body":{"components/CustomFilter.html":{}}}],["filter.ts",{"_index":766,"title":{},"body":{"components/CustomFilter.html":{},"components/TableFilter.html":{}}}],["filterbyclause",{"_index":790,"title":{"classes/FilterByClause.html":{}},"body":{"components/CustomFilter.html":{},"classes/FilterByClause.html":{},"classes/PredefinedFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{}}}],["filterbycollection",{"_index":1386,"title":{},"body":{"classes/TableParams.html":{}}}],["filterclause",{"_index":806,"title":{},"body":{"classes/DataServiceOptions.html":{},"classes/ViewOptionalData.html":{}}}],["filtercluase",{"_index":787,"title":{},"body":{"components/CustomFilter.html":{}}}],["filtername",{"_index":1195,"title":{},"body":{"classes/PredefinedFilter.html":{}}}],["filters",{"_index":565,"title":{},"body":{"components/BaseListView.html":{},"components/CustomFilter.html":{},"components/Table.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{}}}],["filters'},{'name",{"_index":206,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["filters.html",{"_index":1330,"title":{},"body":{"components/TableFilters.html":{}}}],["filters.scss",{"_index":1329,"title":{},"body":{"components/TableFilters.html":{}}}],["filters.ts",{"_index":1328,"title":{},"body":{"components/TableFilters.html":{}}}],["fired",{"_index":483,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Table.html":{}}}],["fixed",{"_index":148,"title":{},"body":{"components/AppLayout.html":{},"components/FooterBar.html":{},"components/Table.html":{}}}],["flex",{"_index":1312,"title":{},"body":{"components/Table.html":{},"components/TableFilters.html":{}}}],["flexible",{"_index":1275,"title":{},"body":{"components/Table.html":{}}}],["footer",{"_index":65,"title":{},"body":{"components/AppLayout.html":{},"classes/BQConfigData.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["footerbar",{"_index":186,"title":{"components/FooterBar.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["foreignkeyname",{"_index":1127,"title":{},"body":{"classes/MetadataField.html":{}}}],["form",{"_index":157,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"directives/ControlContainerDirective.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IEditFormViewEvents.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/ViewData.html":{},"components/ViewWrapper.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["form'},{'name",{"_index":165,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["form.html",{"_index":643,"title":{},"body":{"components/BqForm.html":{}}}],["form.scss",{"_index":642,"title":{},"body":{"components/BqForm.html":{}}}],["form.ts",{"_index":635,"title":{},"body":{"components/BqForm.html":{}}}],["form/bq",{"_index":634,"title":{},"body":{"components/BqForm.html":{}}}],["form/details",{"_index":1528,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["formblock",{"_index":188,"title":{"components/FormBlock.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["formgroup",{"_index":757,"title":{},"body":{"directives/ControlContainerDirective.html":{}}}],["formname",{"_index":788,"title":{},"body":{"components/CustomFilter.html":{}}}],["forms",{"_index":751,"title":{},"body":{"directives/ControlContainerDirective.html":{}}}],["formtype",{"_index":504,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"miscellaneous/enumerations.html":{}}}],["formviewid",{"_index":505,"title":{},"body":{"components/BaseFormView.html":{},"components/Table.html":{}}}],["formviewsbytype",{"_index":1228,"title":{},"body":{"classes/RunningConfigHelper.html":{}}}],["forroot",{"_index":388,"title":{},"body":{"modules/BQStartPrimeModule.html":{}}}],["forroot(config",{"_index":389,"title":{},"body":{"modules/BQStartPrimeModule.html":{}}}],["forwardref",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":321,"title":{},"body":{"classes/BQConfigData.html":{}}}],["fromobject",{"_index":1143,"title":{},"body":{"classes/MetadataField.html":{},"classes/ModelMetadata.html":{}}}],["fromobject(obj",{"_index":1148,"title":{},"body":{"classes/MetadataField.html":{},"classes/ModelMetadata.html":{}}}],["function",{"_index":822,"title":{},"body":{"injectables/DialogService.html":{},"classes/Subscription.html":{}}}],["functionality",{"_index":897,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{}}}],["functions",{"_index":910,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"miscellaneous/functions.html":{}}}],["general",{"_index":955,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["generic",{"_index":561,"title":{},"body":{"components/BaseListView.html":{},"injectables/GenericDataService.html":{},"interfaces/MenuData.html":{}}}],["genericdataservice",{"_index":541,"title":{"injectables/GenericDataService.html":{}},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"injectables/GenericDataService.html":{}}}],["genericdatatype",{"_index":1128,"title":{},"body":{"classes/MetadataField.html":{}}}],["get(model",{"_index":882,"title":{},"body":{"injectables/GenericDataService.html":{}}}],["getaccesstoken",{"_index":274,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["getall",{"_index":874,"title":{},"body":{"injectables/GenericDataService.html":{}}}],["getall(tableparams",{"_index":884,"title":{},"body":{"injectables/GenericDataService.html":{}}}],["getcaption",{"_index":1199,"title":{},"body":{"classes/PredefinedFilter.html":{}}}],["getcellvalue",{"_index":1252,"title":{},"body":{"components/Table.html":{}}}],["getcellvalue(rowdata",{"_index":1299,"title":{},"body":{"components/Table.html":{}}}],["getchanges",{"_index":1393,"title":{},"body":{"classes/TableParams.html":{}}}],["getconfig",{"_index":38,"title":{},"body":{"injectables/AppInitService.html":{}}}],["getcontainsmultipleentities",{"_index":1189,"title":{},"body":{"classes/ODataResponse.html":{}}}],["getcoretranslations",{"_index":965,"title":{},"body":{"injectables/LocaleService.html":{}}}],["getcoretranslations(lang",{"_index":972,"title":{},"body":{"injectables/LocaleService.html":{}}}],["getcurrency",{"_index":712,"title":{},"body":{"components/BqTextField.html":{}}}],["getcurrentlocale",{"_index":979,"title":{},"body":{"injectables/LocaleService.html":{}}}],["getdefault",{"_index":851,"title":{},"body":{"classes/FilterByClause.html":{}}}],["getdefault(caption",{"_index":853,"title":{},"body":{"classes/FilterByClause.html":{}}}],["getdefaultfiltername",{"_index":1342,"title":{},"body":{"components/TableFilters.html":{}}}],["getfield",{"_index":1198,"title":{},"body":{"classes/PredefinedFilter.html":{}}}],["getfiltercluase",{"_index":1194,"title":{},"body":{"classes/PredefinedFilter.html":{}}}],["getfiltername",{"_index":1201,"title":{},"body":{"classes/PredefinedFilter.html":{}}}],["getformattedvalue",{"_index":1253,"title":{},"body":{"components/Table.html":{}}}],["getformattedvalue(data",{"_index":1315,"title":{},"body":{"components/Table.html":{}}}],["getformattedvalue(rowdata",{"_index":1300,"title":{},"body":{"components/Table.html":{}}}],["getinjector",{"_index":48,"title":{},"body":{"classes/AppInjector.html":{}}}],["getisvalid",{"_index":655,"title":{},"body":{"components/BqForm.html":{}}}],["getkeyname",{"_index":1254,"title":{},"body":{"components/Table.html":{}}}],["getkeyvalue",{"_index":517,"title":{},"body":{"components/BaseFormView.html":{},"components/Table.html":{}}}],["getkeyvalue(rowdata",{"_index":1301,"title":{},"body":{"components/Table.html":{}}}],["getloggers",{"_index":1009,"title":{},"body":{"injectables/LogPublishersService.html":{}}}],["getlookupdata",{"_index":875,"title":{},"body":{"injectables/GenericDataService.html":{}}}],["getlookupdata(metadata",{"_index":886,"title":{},"body":{"injectables/GenericDataService.html":{}}}],["getmodel",{"_index":488,"title":{},"body":{"components/BaseField.html":{}}}],["getodataurl",{"_index":852,"title":{},"body":{"classes/FilterByClause.html":{}}}],["getparams",{"_index":579,"title":{},"body":{"classes/BaseMenu.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["getparams(menudef",{"_index":585,"title":{},"body":{"classes/BaseMenu.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["getpath",{"_index":580,"title":{},"body":{"classes/BaseMenu.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["getpath(menudef",{"_index":587,"title":{},"body":{"classes/BaseMenu.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["getpathbyviewid",{"_index":1232,"title":{},"body":{"classes/RunningConfigHelper.html":{}}}],["getpathbyviewid(viewid",{"_index":1236,"title":{},"body":{"classes/RunningConfigHelper.html":{}}}],["getpredicate",{"_index":1202,"title":{},"body":{"classes/PredefinedFilter.html":{}}}],["getpredicateindex",{"_index":1144,"title":{},"body":{"classes/MetadataField.html":{}}}],["getpredicateindex(predicatekey",{"_index":1150,"title":{},"body":{"classes/MetadataField.html":{}}}],["getprimarykeyasrouteparam",{"_index":1156,"title":{},"body":{"classes/ModelMetadata.html":{}}}],["getprimarykeyasrouteparam(model",{"_index":1160,"title":{},"body":{"classes/ModelMetadata.html":{}}}],["getprimarykeyasurl",{"_index":1157,"title":{},"body":{"classes/ModelMetadata.html":{}}}],["getprimarykeyasurl(values",{"_index":1161,"title":{},"body":{"classes/ModelMetadata.html":{}}}],["getpublishers",{"_index":1012,"title":{},"body":{"injectables/LogPublishersService.html":{}}}],["getrunningconfig",{"_index":39,"title":{},"body":{"injectables/AppInitService.html":{}}}],["gets",{"_index":1296,"title":{},"body":{"components/Table.html":{}}}],["getshortcuts",{"_index":144,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{}}}],["getting",{"_index":1571,"title":{"index.html":{}},"body":{}}],["gettovalue",{"_index":1203,"title":{},"body":{"classes/PredefinedFilter.html":{}}}],["gettranslation",{"_index":966,"title":{},"body":{"injectables/LocaleService.html":{}}}],["gettranslation(lang",{"_index":974,"title":{},"body":{"injectables/LocaleService.html":{}}}],["gettype",{"_index":395,"title":{},"body":{"directives/BQTemplate.html":{}}}],["gettypemetadata",{"_index":1120,"title":{},"body":{"injectables/MetaDataService.html":{}}}],["gettypemetadata(typename",{"_index":1121,"title":{},"body":{"injectables/MetaDataService.html":{}}}],["getuser",{"_index":275,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["getvalue",{"_index":1200,"title":{},"body":{"classes/PredefinedFilter.html":{}}}],["given",{"_index":885,"title":{},"body":{"injectables/GenericDataService.html":{},"injectables/RouterService.html":{}}}],["given_name",{"_index":930,"title":{},"body":{"interfaces/IUser.html":{}}}],["go",{"_index":539,"title":{},"body":{"components/BaseFormView.html":{}}}],["goback",{"_index":721,"title":{},"body":{"components/Breadcrumb.html":{}}}],["gotoaddnew",{"_index":1255,"title":{},"body":{"components/Table.html":{}}}],["gotoaddview",{"_index":1343,"title":{},"body":{"components/TableFilters.html":{}}}],["gotodetails",{"_index":518,"title":{},"body":{"components/BaseFormView.html":{},"components/Table.html":{}}}],["gotodetails(row",{"_index":1302,"title":{},"body":{"components/Table.html":{}}}],["gotoedit",{"_index":1256,"title":{},"body":{"components/Table.html":{}}}],["gotoedit(row",{"_index":1303,"title":{},"body":{"components/Table.html":{}}}],["gotopage",{"_index":1394,"title":{},"body":{"classes/TableParams.html":{}}}],["gotopage(param",{"_index":1401,"title":{},"body":{"classes/TableParams.html":{}}}],["grid",{"_index":1284,"title":{},"body":{"components/Table.html":{}}}],["groupby",{"_index":615,"title":{},"body":{"components/BqDropdownField.html":{}}}],["grow",{"_index":1380,"title":{},"body":{"components/TableFilters.html":{}}}],["guard",{"_index":1558,"title":{},"body":{"miscellaneous/functions.html":{}}}],["guid",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handle",{"_index":552,"title":{},"body":{"components/BaseListView.html":{},"classes/OAuthConfig.html":{}}}],["handleclose",{"_index":1032,"title":{},"body":{"components/MDIComponent.html":{}}}],["handleclose(e",{"_index":1035,"title":{},"body":{"components/MDIComponent.html":{}}}],["handlemenuclick",{"_index":581,"title":{},"body":{"classes/BaseMenu.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["handlemenuclick(menu",{"_index":588,"title":{},"body":{"classes/BaseMenu.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["handlemessage",{"_index":549,"title":{},"body":{"components/BaseListView.html":{}}}],["handlemessage(data",{"_index":551,"title":{},"body":{"components/BaseListView.html":{}}}],["handletabchange",{"_index":1033,"title":{},"body":{"components/MDIComponent.html":{}}}],["handletopmenuclick",{"_index":92,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{},"components/TopMenuBar.html":{}}}],["handletopmenuclick(ev",{"_index":134,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{},"components/TopMenuBar.html":{}}}],["hasemailvalidator",{"_index":1145,"title":{},"body":{"classes/MetadataField.html":{}}}],["hasforeignkey",{"_index":1129,"title":{},"body":{"classes/MetadataField.html":{}}}],["hassecondparam",{"_index":1204,"title":{},"body":{"classes/Predicate.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":309,"title":{},"body":{"classes/BQConfigData.html":{}}}],["headerstyle",{"_index":1321,"title":{},"body":{"components/TableColumn.html":{}}}],["heading",{"_index":818,"title":{},"body":{"injectables/DialogService.html":{}}}],["height",{"_index":1039,"title":{},"body":{"components/MDILayoutComponent.html":{}}}],["hello",{"_index":1026,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["helpers",{"_index":1227,"title":{},"body":{"classes/RunningConfigHelper.html":{}}}],["here",{"_index":313,"title":{},"body":{"classes/BQConfigData.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"components/Table.html":{},"components/TableFilter.html":{}}}],["hidden",{"_index":1373,"title":{},"body":{"components/TableFilters.html":{}}}],["hide",{"_index":1277,"title":{},"body":{"components/Table.html":{}}}],["hidebreadcrumb",{"_index":1446,"title":{},"body":{"interfaces/ViewData.html":{}}}],["hidemenu",{"_index":93,"title":{},"body":{"components/AppLayout.html":{}}}],["hideoptionscolumn",{"_index":1263,"title":{},"body":{"components/Table.html":{}}}],["hierarchy",{"_index":759,"title":{},"body":{"directives/ControlContainerDirective.html":{}}}],["highlight",{"_index":1479,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":286,"title":{},"body":{"classes/BQConfigData.html":{},"classes/RunningConfigHelper.html":{}}}],["holds",{"_index":557,"title":{},"body":{"components/BaseListView.html":{}}}],["hooks",{"_index":112,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{}}}],["horizontally",{"_index":120,"title":{},"body":{"components/AppLayout.html":{}}}],["host",{"_index":624,"title":{},"body":{"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/CustomFilter.html":{},"components/Table.html":{}}}],["host.directive.ts",{"_index":830,"title":{},"body":{"directives/DynamicHostDirective.html":{}}}],["htmldivelement",{"_index":1363,"title":{},"body":{"components/TableFilters.html":{}}}],["http",{"_index":879,"title":{},"body":{"injectables/GenericDataService.html":{},"injectables/LocaleService.html":{},"injectables/LogPublishersService.html":{},"injectables/MetaDataService.html":{}}}],["httpclient",{"_index":877,"title":{},"body":{"injectables/GenericDataService.html":{},"injectables/LocaleService.html":{},"injectables/LogPublishersService.html":{},"injectables/MetaDataService.html":{}}}],["httphandler",{"_index":267,"title":{},"body":{"interceptors/AuthorizeInterceptor.html":{}}}],["httprequest",{"_index":265,"title":{},"body":{"interceptors/AuthorizeInterceptor.html":{}}}],["https://stackoverflow.com/questions/39242219",{"_index":762,"title":{},"body":{"directives/ControlContainerDirective.html":{}}}],["i.e",{"_index":1445,"title":{},"body":{"interfaces/ViewData.html":{}}}],["i18",{"_index":404,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["i18(key",{"_index":412,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["iauthenticationresult",{"_index":1585,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ibaseevents",{"_index":892,"title":{"interfaces/IBaseEvents.html":{}},"body":{"interfaces/IBaseEvents.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{}}}],["ibaseformviewevents",{"_index":895,"title":{"interfaces/IBaseFormViewEvents.html":{}},"body":{"interfaces/IBaseFormViewEvents.html":{},"miscellaneous/functions.html":{}}}],["ibaselistviewevents",{"_index":914,"title":{"interfaces/IBaseListViewEvents.html":{}},"body":{"interfaces/IBaseListViewEvents.html":{},"miscellaneous/functions.html":{}}}],["ibaseview",{"_index":495,"title":{"interfaces/IBaseView.html":{}},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"interfaces/IBaseView.html":{}}}],["icon",{"_index":358,"title":{},"body":{"classes/BQConfigData.html":{},"interfaces/CustomUserMenus.html":{},"injectables/MainRegionAdapterService.html":{},"interfaces/MenuData.html":{},"interfaces/TopRightMenuData.html":{},"classes/ViewRunningData.html":{}}}],["id",{"_index":429,"title":{},"body":{"classes/BaseEntity.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"classes/Channel.html":{},"interfaces/EnumItem.html":{},"classes/OAuthConfig.html":{},"classes/Subscription.html":{},"interfaces/ViewData.html":{}}}],["idea",{"_index":1046,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["identity/account/manage",{"_index":1432,"title":{},"body":{"components/TopMenuBar.html":{},"miscellaneous/variables.html":{}}}],["identity/account/register",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identity/sts",{"_index":1181,"title":{},"body":{"classes/OAuthConfig.html":{}}}],["identitymanagepath",{"_index":230,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["identityregisterpath",{"_index":231,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["ieditformviewevents",{"_index":915,"title":{"interfaces/IEditFormViewEvents.html":{}},"body":{"interfaces/IEditFormViewEvents.html":{},"miscellaneous/functions.html":{}}}],["implement",{"_index":491,"title":{},"body":{"components/BaseFormView.html":{}}}],["implementation",{"_index":1560,"title":{},"body":{"miscellaneous/functions.html":{}}}],["implemented",{"_index":902,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{}}}],["implements",{"_index":67,"title":{},"body":{"components/AppLayout.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqForm.html":{},"components/Breadcrumb.html":{},"directives/CompareDirective.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/ViewWrapper.html":{}}}],["implicitly",{"_index":754,"title":{},"body":{"directives/ControlContainerDirective.html":{}}}],["import",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["important",{"_index":627,"title":{},"body":{"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["inavigationstate",{"_index":924,"title":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{}},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{}}}],["included",{"_index":755,"title":{},"body":{"directives/ControlContainerDirective.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/AppLayout.html":{},"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"classes/BQConfigData.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"classes/BaseEntity.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/CompareDirective.html":{},"components/CustomFilter.html":{},"interfaces/CustomUserMenus.html":{},"classes/DataServiceOptions.html":{},"injectables/DialogService.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"interfaces/EnumItem.html":{},"interfaces/FailureAuthenticationResult.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseEvents.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IBaseView.html":{},"interfaces/IEditFormViewEvents.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"classes/Message.html":{},"classes/MessageBusPayLoad.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"injectables/NavigationService.html":{},"classes/OAuthConfig.html":{},"classes/ODataResponse.html":{},"classes/OrderByClause.html":{},"classes/PredefinedFilter.html":{},"classes/Predicate.html":{},"classes/PrimaryKey.html":{},"interfaces/RedirectAuthenticationResult.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"interfaces/RowExpandedEventData.html":{},"classes/RunningConfigHelper.html":{},"classes/Subscription.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/TopRightMenuData.html":{},"classes/TypeSystem.html":{},"interfaces/ValidationData.html":{},"interfaces/ViewData.html":{},"classes/ViewOptionalData.html":{},"classes/ViewRunningData.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":828,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/AppLayout.html":{},"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"classes/BQConfigData.html":{},"modules/BQStartPrimeModule.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"classes/BaseEntity.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"pipes/BoolToYesNoPipe.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/CompareDirective.html":{},"directives/ControlContainerDirective.html":{},"components/CustomFilter.html":{},"interfaces/CustomUserMenus.html":{},"classes/DataServiceOptions.html":{},"injectables/DialogService.html":{},"interfaces/Dictionary.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"interfaces/EnumItem.html":{},"interfaces/FailureAuthenticationResult.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseEvents.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IBaseView.html":{},"interfaces/IEditFormViewEvents.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"classes/Message.html":{},"classes/MessageBusPayLoad.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"pipes/ModelValuePipe.html":{},"injectables/NavigationService.html":{},"classes/OAuthConfig.html":{},"classes/ODataResponse.html":{},"classes/OrderByClause.html":{},"pipes/PasswordPipe.html":{},"classes/PredefinedFilter.html":{},"classes/Predicate.html":{},"classes/PrimaryKey.html":{},"interfaces/RedirectAuthenticationResult.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"interfaces/RowExpandedEventData.html":{},"classes/RunningConfigHelper.html":{},"classes/Subscription.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/TopRightMenuData.html":{},"classes/TypeSystem.html":{},"interfaces/ValidationData.html":{},"interfaces/ViewData.html":{},"classes/ViewOptionalData.html":{},"classes/ViewRunningData.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{},"miscellaneous/enumerations.html":{}}}],["info(msg",{"_index":953,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["inherit",{"_index":1376,"title":{},"body":{"components/TableFilters.html":{}}}],["inherited",{"_index":1562,"title":{},"body":{"miscellaneous/functions.html":{}}}],["init",{"_index":20,"title":{},"body":{"injectables/AppInitService.html":{}}}],["init.service.ts",{"_index":8,"title":{},"body":{"injectables/AppInitService.html":{},"miscellaneous/functions.html":{}}}],["initialiation",{"_index":909,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{}}}],["initializeapp",{"_index":1553,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initializeapp(appinitservice",{"_index":1568,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initializerender",{"_index":452,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["initializing",{"_index":906,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{}}}],["initlocale",{"_index":967,"title":{},"body":{"injectables/LocaleService.html":{}}}],["initlocale(localeid",{"_index":975,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AppInitService.html":{},"injectables/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"injectables/DialogService.html":{},"injectables/GenericDataService.html":{},"injectables/InternalLogService.html":{},"injectables/LocaleService.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"injectables/MainRegionAdapterService.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"injectables/NavigationService.html":{},"injectables/RouterService.html":{},"injectables/ViewWrapperService.html":{}},"body":{}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AppInitService.html":{},"injectables/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"injectables/DialogService.html":{},"injectables/GenericDataService.html":{},"injectables/InternalLogService.html":{},"injectables/LocaleService.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"injectables/MainRegionAdapterService.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"injectables/NavigationService.html":{},"injectables/RouterService.html":{},"injectables/ViewWrapperService.html":{},"overview.html":{}}}],["injection",{"_index":749,"title":{},"body":{"directives/ControlContainerDirective.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken(\"bqconfig",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('gsvcdataoptions",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectionttoken",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":26,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/AppLayout.html":{},"injectables/AuthorizeService.html":{},"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{}}}],["injector.service.ts",{"_index":45,"title":{},"body":{"classes/AppInjector.html":{}}}],["innerdivvalign",{"_index":443,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["input",{"_index":464,"title":{},"body":{"components/BaseField.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/CustomFilter.html":{}}}],["inputs",{"_index":99,"title":{},"body":{"components/AppLayout.html":{},"directives/BQTemplate.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"directives/CompareDirective.html":{},"components/CustomFilter.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{}}}],["inserted",{"_index":1543,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inside",{"_index":342,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseField.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/MDIComponent.html":{},"injectables/RouterService.html":{}}}],["instance",{"_index":532,"title":{},"body":{"components/BaseFormView.html":{},"injectables/GenericDataService.html":{},"classes/RouteData.html":{}}}],["instead",{"_index":359,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["int32",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["int64",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["integerrender",{"_index":692,"title":{},"body":{"components/BqTextField.html":{}}}],["intercept",{"_index":263,"title":{},"body":{"interceptors/AuthorizeInterceptor.html":{}}}],["intercept(req",{"_index":264,"title":{},"body":{"interceptors/AuthorizeInterceptor.html":{}}}],["interceptor",{"_index":259,"title":{"interceptors/AuthorizeInterceptor.html":{}},"body":{}}],["interceptors",{"_index":261,"title":{},"body":{"interceptors/AuthorizeInterceptor.html":{}}}],["interface",{"_index":222,"title":{"interfaces/ApplicationPathsType.html":{},"interfaces/CustomUserMenus.html":{},"interfaces/Dictionary.html":{},"interfaces/EnumItem.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IBaseEvents.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IBaseView.html":{},"interfaces/IEditFormViewEvents.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"interfaces/MenuData.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/RowExpandedEventData.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interfaces/TopRightMenuData.html":{},"interfaces/ValidationData.html":{},"interfaces/ViewData.html":{}},"body":{"classes/BQConfigData.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"injectables/NavigationService.html":{},"injectables/RouterService.html":{},"miscellaneous/functions.html":{}}}],["interfaces",{"_index":224,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"interfaces/CustomUserMenus.html":{},"interfaces/Dictionary.html":{},"interfaces/EnumItem.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/IBaseEvents.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IBaseView.html":{},"interfaces/IEditFormViewEvents.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"interfaces/MenuData.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/RowExpandedEventData.html":{},"interfaces/SuccessAuthenticationResult.html":{},"interfaces/TopRightMenuData.html":{},"interfaces/ValidationData.html":{},"interfaces/ViewData.html":{},"overview.html":{}}}],["internal",{"_index":907,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"classes/RouteData.html":{}}}],["internallogservice",{"_index":931,"title":{"injectables/InternalLogService.html":{}},"body":{"injectables/InternalLogService.html":{},"miscellaneous/variables.html":{}}}],["internaltable",{"_index":1246,"title":{},"body":{"components/Table.html":{}}}],["invalid",{"_index":675,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/CustomFilter.html":{}}}],["isactive",{"_index":1003,"title":{},"body":{"classes/LogPublisherConfig.html":{}}}],["isadd",{"_index":891,"title":{},"body":{"injectables/GenericDataService.html":{}}}],["isauthenticated",{"_index":85,"title":{},"body":{"components/AppLayout.html":{},"injectables/AuthorizeService.html":{},"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/LoginMenuComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{}}}],["isbool",{"_index":1130,"title":{},"body":{"classes/MetadataField.html":{}}}],["iscontainerclicked",{"_index":1336,"title":{},"body":{"components/TableFilters.html":{}}}],["isdate",{"_index":1131,"title":{},"body":{"classes/MetadataField.html":{}}}],["isemail",{"_index":1439,"title":{},"body":{"interfaces/ValidationData.html":{}}}],["isenum",{"_index":1132,"title":{},"body":{"classes/MetadataField.html":{}}}],["isexpanded",{"_index":1086,"title":{},"body":{"interfaces/MenuData.html":{}}}],["isguid",{"_index":1133,"title":{},"body":{"classes/MetadataField.html":{}}}],["isinrole",{"_index":405,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["isinrole(role",{"_index":414,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["isinteger",{"_index":1134,"title":{},"body":{"classes/MetadataField.html":{}}}],["isloading",{"_index":398,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["ismodal",{"_index":1214,"title":{},"body":{"injectables/RouterService.html":{}}}],["ismodel",{"_index":1211,"title":{},"body":{"classes/RouteData.html":{}}}],["isnullable",{"_index":1135,"title":{},"body":{"classes/MetadataField.html":{}}}],["isnumber",{"_index":1136,"title":{},"body":{"classes/MetadataField.html":{}}}],["isoutsidetopbarmenuclicked",{"_index":1413,"title":{},"body":{"components/TopBar.html":{}}}],["isoutsidetopbarmenuclicked(event",{"_index":1418,"title":{},"body":{"components/TopBar.html":{}}}],["isprimarykey",{"_index":1137,"title":{},"body":{"classes/MetadataField.html":{}}}],["isrequired",{"_index":457,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"interfaces/ValidationData.html":{}}}],["isselected",{"_index":1193,"title":{},"body":{"classes/PredefinedFilter.html":{}}}],["isstring",{"_index":1138,"title":{},"body":{"classes/MetadataField.html":{}}}],["issubmenuactive",{"_index":1070,"title":{},"body":{"components/MenuBar.html":{}}}],["issubmenuactive(menu",{"_index":1074,"title":{},"body":{"components/MenuBar.html":{}}}],["isvalid",{"_index":652,"title":{},"body":{"components/BqForm.html":{},"classes/FilterByClause.html":{}}}],["isvalidfilterdata",{"_index":1146,"title":{},"body":{"classes/MetadataField.html":{}}}],["isvalidfilterdata(data",{"_index":1152,"title":{},"body":{"classes/MetadataField.html":{}}}],["isvisible",{"_index":1087,"title":{},"body":{"interfaces/MenuData.html":{}}}],["it's",{"_index":575,"title":{},"body":{"components/BaseListView.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"miscellaneous/variables.html":{}}}],["item",{"_index":799,"title":{},"body":{"interfaces/CustomUserMenus.html":{},"interfaces/MenuData.html":{},"components/TableFilters.html":{},"interfaces/TopRightMenuData.html":{}}}],["item.display",{"_index":798,"title":{},"body":{"components/CustomFilter.html":{}}}],["item.viewdef.title",{"_index":1037,"title":{},"body":{"components/MDIComponent.html":{}}}],["item.viewdef.title}}&nbsp",{"_index":1031,"title":{},"body":{"components/MDIComponent.html":{}}}],["itemenumsource",{"_index":610,"title":{},"body":{"components/BqDropdownField.html":{}}}],["items",{"_index":1425,"title":{},"body":{"components/TopMenuBar.html":{}}}],["itemsource",{"_index":616,"title":{},"body":{"components/BqDropdownField.html":{},"components/TableFilter.html":{}}}],["iuser",{"_index":422,"title":{"interfaces/IUser.html":{}},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"interfaces/IUser.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["js",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":413,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"interfaces/Dictionary.html":{},"components/FooterBar.html":{},"interfaces/IBaseView.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"classes/MessageBusPayLoad.html":{},"classes/Predicate.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"components/TopMenuBar.html":{},"classes/TypeSystem.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":111,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{},"dependencies.html":{}}}],["keyboardshortcutsselectservice",{"_index":543,"title":{},"body":{"components/BaseFormView.html":{}}}],["keyboardsubscription",{"_index":506,"title":{},"body":{"components/BaseFormView.html":{}}}],["keyboardsvc",{"_index":507,"title":{},"body":{"components/BaseFormView.html":{}}}],["keyname",{"_index":1206,"title":{},"body":{"classes/PrimaryKey.html":{}}}],["keys",{"_index":1155,"title":{},"body":{"classes/ModelMetadata.html":{}}}],["keytype",{"_index":1207,"title":{},"body":{"classes/PrimaryKey.html":{}}}],["known",{"_index":570,"title":{},"body":{"components/BaseListView.html":{}}}],["label",{"_index":477,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"interfaces/CustomUserMenus.html":{},"interfaces/MenuData.html":{}}}],["label::after",{"_index":632,"title":{},"body":{"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["labelcss",{"_index":444,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["labelsize",{"_index":458,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/FormBlock.html":{}}}],["lang",{"_index":973,"title":{},"body":{"injectables/LocaleService.html":{}}}],["large",{"_index":1548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["layout",{"_index":60,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{},"injectables/RouterService.html":{},"components/Table.html":{},"components/TableColumn.html":{}}}],["layout'},{'name",{"_index":154,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["layout.html",{"_index":77,"title":{},"body":{"components/AppLayout.html":{}}}],["layout.scss",{"_index":75,"title":{},"body":{"components/AppLayout.html":{}}}],["layout.ts",{"_index":58,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{}}}],["layout/app",{"_index":57,"title":{},"body":{"components/AppLayout.html":{}}}],["lazyloaddata",{"_index":1257,"title":{},"body":{"components/Table.html":{}}}],["lazyloaddata(event",{"_index":1304,"title":{},"body":{"components/Table.html":{}}}],["left",{"_index":123,"title":{},"body":{"components/AppLayout.html":{},"components/TableFilters.html":{}}}],["length",{"_index":670,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["level",{"_index":933,"title":{},"body":{"injectables/InternalLogService.html":{},"classes/LogEntry.html":{},"injectables/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["lines",{"_index":1285,"title":{},"body":{"components/Table.html":{}}}],["link",{"_index":589,"title":{},"body":{"classes/BaseMenu.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["links",{"_index":345,"title":{},"body":{"classes/BQConfigData.html":{}}}],["list",{"_index":109,"title":{},"body":{"components/AppLayout.html":{},"classes/BQConfigData.html":{},"components/BaseListView.html":{},"interfaces/IBaseListViewEvents.html":{},"components/MDILayoutComponent.html":{},"components/TableFilter.html":{},"interfaces/ViewData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["list/form",{"_index":898,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{}}}],["listviewsbytype",{"_index":1229,"title":{},"body":{"classes/RunningConfigHelper.html":{}}}],["literal",{"_index":360,"title":{},"body":{"classes/BQConfigData.html":{},"components/MenuBar.html":{},"classes/PredefinedFilter.html":{},"classes/RunningConfigHelper.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{}}}],["load",{"_index":1114,"title":{},"body":{"injectables/MetaDataResolver.html":{},"components/Table.html":{}}}],["loadcomponent",{"_index":836,"title":{},"body":{"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{}}}],["loaded",{"_index":559,"title":{},"body":{"components/BaseListView.html":{}}}],["loader",{"_index":834,"title":{},"body":{"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"dependencies.html":{}}}],["loader'},{'name",{"_index":183,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["loading",{"_index":1264,"title":{},"body":{"components/Table.html":{}}}],["loadtabledata",{"_index":1269,"title":{},"body":{"components/Table.html":{}}}],["local",{"_index":996,"title":{},"body":{"classes/LogLocalStorage.html":{}}}],["locale",{"_index":1272,"title":{},"body":{"components/Table.html":{}}}],["locale/translation",{"_index":964,"title":{},"body":{"injectables/LocaleService.html":{}}}],["locale_id",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localeformat",{"_index":693,"title":{},"body":{"components/BqTextField.html":{},"components/CustomFilter.html":{}}}],["localeid",{"_index":960,"title":{"classes/LocaleId.html":{}},"body":{"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"miscellaneous/variables.html":{}}}],["localepipeformat",{"_index":694,"title":{},"body":{"components/BqTextField.html":{}}}],["localeprovider",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localeservice",{"_index":379,"title":{"injectables/LocaleService.html":{}},"body":{"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":317,"title":{},"body":{"classes/BQConfigData.html":{},"classes/LogConsole.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"injectables/NavigationService.html":{}}}],["lodash",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":939,"title":{},"body":{"injectables/InternalLogService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["log(entry",{"_index":985,"title":{},"body":{"classes/LogConsole.html":{},"classes/LogLocalStorage.html":{}}}],["log(msg",{"_index":954,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["log(record",{"_index":1001,"title":{},"body":{"classes/LogPublisher.html":{}}}],["logconsole",{"_index":980,"title":{"classes/LogConsole.html":{}},"body":{"classes/LogConsole.html":{}}}],["logentry",{"_index":986,"title":{"classes/LogEntry.html":{}},"body":{"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{}}}],["logged",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loggedout",{"_index":232,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["loggedoutpathcomponents",{"_index":233,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":399,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"injectables/InternalLogService.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["loggerlocation",{"_index":1004,"title":{},"body":{"classes/LogPublisherConfig.html":{}}}],["loggername",{"_index":1005,"title":{},"body":{"classes/LogPublisherConfig.html":{}}}],["login",{"_index":193,"title":{},"body":{"components/AppLayout.html":{},"interfaces/ApplicationPathsType.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"classes/OAuthConfig.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":191,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["login.component.css",{"_index":1016,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1017,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginactions",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincallback",{"_index":234,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["logincallbackpathcomponents",{"_index":235,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["logincomponent",{"_index":190,"title":{"components/LoginComponent.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["loginfailed",{"_index":236,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["loginfailedpathcomponents",{"_index":237,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["loginmenucomponent",{"_index":192,"title":{"components/LoginMenuComponent.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["loginpath",{"_index":1407,"title":{},"body":{"components/TopBar.html":{},"components/TopMenuBar.html":{}}}],["loginpathcomponents",{"_index":238,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["loglevel",{"_index":945,"title":{},"body":{"injectables/InternalLogService.html":{},"classes/LogEntry.html":{},"injectables/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.all",{"_index":959,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["loglevel.debug",{"_index":992,"title":{},"body":{"classes/LogEntry.html":{}}}],["loglocalstorage",{"_index":994,"title":{"classes/LogLocalStorage.html":{}},"body":{"classes/LogLocalStorage.html":{}}}],["logo",{"_index":308,"title":{},"body":{"classes/BQConfigData.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{}}}],["logourl",{"_index":292,"title":{},"body":{"classes/BQConfigData.html":{},"classes/RunningConfigHelper.html":{}}}],["logout",{"_index":239,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"classes/OAuthConfig.html":{},"components/TopBar.html":{},"miscellaneous/variables.html":{}}}],["logout'},{'name",{"_index":195,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["logout.component.css",{"_index":1027,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.component.html",{"_index":1028,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logoutactions",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logoutcallback",{"_index":240,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["logoutcallbackpathcomponents",{"_index":241,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["logoutcomponent",{"_index":194,"title":{"components/LogoutComponent.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["logoutpath",{"_index":1408,"title":{},"body":{"components/TopBar.html":{},"components/TopMenuBar.html":{}}}],["logoutpathcomponents",{"_index":242,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["logpublisher",{"_index":983,"title":{"classes/LogPublisher.html":{}},"body":{"classes/LogConsole.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"injectables/LogPublishersService.html":{}}}],["logpublisherconfig",{"_index":1002,"title":{"classes/LogPublisherConfig.html":{}},"body":{"classes/LogPublisherConfig.html":{}}}],["logpublishersservice",{"_index":31,"title":{"injectables/LogPublishersService.html":{}},"body":{"injectables/AppInitService.html":{},"modules/BQStartPrimeModule.html":{},"injectables/InternalLogService.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{}}}],["logs",{"_index":947,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["logservice",{"_index":380,"title":{"injectables/LogService.html":{}},"body":{"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"injectables/InternalLogService.html":{},"injectables/LogService.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["logsvc",{"_index":30,"title":{},"body":{"injectables/AppInitService.html":{}}}],["logwithdate",{"_index":934,"title":{},"body":{"injectables/InternalLogService.html":{},"classes/LogEntry.html":{},"injectables/LogService.html":{}}}],["looks",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lookup/dropdown",{"_index":887,"title":{},"body":{"injectables/GenericDataService.html":{}}}],["lookupdatamodel",{"_index":508,"title":{},"body":{"components/BaseFormView.html":{}}}],["luxon",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["main",{"_index":59,"title":{},"body":{"components/AppLayout.html":{},"classes/BQConfigData.html":{},"modules/BQStartPrimeModule.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{}}}],["maincss",{"_index":445,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["mainly",{"_index":347,"title":{},"body":{"classes/BQConfigData.html":{}}}],["mainregionadapterservice",{"_index":381,"title":{"injectables/MainRegionAdapterService.html":{}},"body":{"modules/BQStartPrimeModule.html":{},"classes/BaseMenu.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/MDIComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"injectables/NavigationService.html":{},"injectables/RouterService.html":{},"components/TopMenuBar.html":{}}}],["maintaining",{"_index":1043,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["map",{"_index":1188,"title":{},"body":{"classes/ODataResponse.html":{}}}],["mapmenudatatoprimemenu",{"_index":1428,"title":{},"body":{"components/TopMenuBar.html":{}}}],["mapmenudatatoprimemenu(menu",{"_index":1429,"title":{},"body":{"components/TopMenuBar.html":{}}}],["margin",{"_index":625,"title":{},"body":{"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/TableFilters.html":{},"components/TopBar.html":{}}}],["matching",{"_index":41,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/AppLayout.html":{},"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"classes/BQConfigData.html":{},"modules/BQStartPrimeModule.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"classes/BaseEntity.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"pipes/BoolToYesNoPipe.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/CompareDirective.html":{},"directives/ControlContainerDirective.html":{},"components/CustomFilter.html":{},"interfaces/CustomUserMenus.html":{},"classes/DataServiceOptions.html":{},"injectables/DialogService.html":{},"interfaces/Dictionary.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"interfaces/EnumItem.html":{},"interfaces/FailureAuthenticationResult.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseEvents.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IBaseView.html":{},"interfaces/IEditFormViewEvents.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"classes/Message.html":{},"classes/MessageBusPayLoad.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"pipes/ModelValuePipe.html":{},"injectables/NavigationService.html":{},"classes/OAuthConfig.html":{},"classes/ODataResponse.html":{},"classes/OrderByClause.html":{},"pipes/PasswordPipe.html":{},"classes/PredefinedFilter.html":{},"classes/Predicate.html":{},"classes/PrimaryKey.html":{},"interfaces/RedirectAuthenticationResult.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"interfaces/RowExpandedEventData.html":{},"classes/RunningConfigHelper.html":{},"classes/Subscription.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/TopRightMenuData.html":{},"classes/TypeSystem.html":{},"interfaces/ValidationData.html":{},"interfaces/ViewData.html":{},"classes/ViewOptionalData.html":{},"classes/ViewRunningData.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":700,"title":{},"body":{"components/BqTextField.html":{},"components/TableFilters.html":{}}}],["maxium",{"_index":672,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["maxlength",{"_index":663,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"classes/MetadataField.html":{},"interfaces/ValidationData.html":{},"miscellaneous/enumerations.html":{}}}],["maxlengthinner",{"_index":657,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextField.html":{}}}],["maxrange",{"_index":1440,"title":{},"body":{"interfaces/ValidationData.html":{}}}],["mdi",{"_index":185,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"injectables/NavigationService.html":{},"injectables/RouterService.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["mdi'},{'name",{"_index":197,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["mdicomponent",{"_index":196,"title":{"components/MDIComponent.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["mdilayoutcomponent",{"_index":198,"title":{"components/MDILayoutComponent.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["media",{"_index":628,"title":{},"body":{"components/BqDropdownField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/TableFilters.html":{}}}],["member",{"_index":466,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["menu",{"_index":63,"title":{},"body":{"components/AppLayout.html":{},"classes/BQConfigData.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"interfaces/CustomUserMenus.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/TopRightMenuData.html":{},"components/ViewWrapper.html":{}}}],["menu'},{'name",{"_index":176,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["menu.component.css",{"_index":1023,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["menu.component.html",{"_index":1024,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["menu.component.ts",{"_index":1022,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["menu.isvisible\">{{menu.label",{"_index":1077,"title":{},"body":{"components/MenuBar.html":{}}}],["menu.label",{"_index":1081,"title":{},"body":{"components/MenuBar.html":{}}}],["menu.ts",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu/bq",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu/login",{"_index":1021,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["menuactive",{"_index":86,"title":{},"body":{"components/AppLayout.html":{}}}],["menubar",{"_index":199,"title":{"components/MenuBar.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["menubuttonclick",{"_index":1416,"title":{},"body":{"components/TopBar.html":{}}}],["menuclicked",{"_index":1071,"title":{},"body":{"components/MenuBar.html":{}}}],["menuclicked(menudef",{"_index":1075,"title":{},"body":{"components/MenuBar.html":{}}}],["menudata",{"_index":310,"title":{"interfaces/MenuData.html":{}},"body":{"classes/BQConfigData.html":{},"classes/BaseMenu.html":{},"components/Breadcrumb.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"classes/RunningConfigHelper.html":{},"components/TopMenuBar.html":{}}}],["menudef",{"_index":586,"title":{},"body":{"classes/BaseMenu.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["menuitem",{"_index":1430,"title":{},"body":{"components/TopMenuBar.html":{}}}],["menus",{"_index":293,"title":{},"body":{"classes/BQConfigData.html":{},"classes/BaseMenu.html":{},"components/MenuBar.html":{},"classes/RunningConfigHelper.html":{},"components/TopMenuBar.html":{}}}],["menustack",{"_index":718,"title":{},"body":{"components/Breadcrumb.html":{}}}],["menutarget",{"_index":1426,"title":{},"body":{"components/TopMenuBar.html":{}}}],["menutitle",{"_index":1058,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["message",{"_index":417,"title":{"classes/Message.html":{}},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"interfaces/FailureAuthenticationResult.html":{},"components/FooterBar.html":{},"injectables/InternalLogService.html":{},"classes/LogEntry.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MenuBar.html":{},"classes/Message.html":{},"injectables/MessageService.html":{},"components/TopMenuBar.html":{},"miscellaneous/variables.html":{}}}],["messagebuspayload",{"_index":1092,"title":{"classes/MessageBusPayLoad.html":{}},"body":{"classes/MessageBusPayLoad.html":{}}}],["messages",{"_index":1095,"title":{},"body":{"injectables/MessageService.html":{}}}],["messageservice",{"_index":382,"title":{"injectables/MessageService.html":{}},"body":{"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"injectables/MessageService.html":{},"components/TableFilters.html":{},"components/TopMenuBar.html":{}}}],["messageserviceprovider",{"_index":1104,"title":{},"body":{"injectables/MessageService.html":{}}}],["messagesvc",{"_index":400,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["messagetype",{"_index":1107,"title":{},"body":{"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{}}}],["meta",{"_index":470,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["metadata",{"_index":70,"title":{},"body":{"components/AppLayout.html":{},"directives/BQTemplate.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"pipes/BoolToYesNoPipe.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"directives/CompareDirective.html":{},"directives/ControlContainerDirective.html":{},"components/CustomFilter.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/GenericDataService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"pipes/ModelValuePipe.html":{},"classes/ODataResponse.html":{},"pipes/PasswordPipe.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/ViewData.html":{},"components/ViewWrapper.html":{}}}],["metadatafield",{"_index":469,"title":{"classes/MetadataField.html":{}},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"classes/FilterByClause.html":{},"classes/MetadataField.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{}}}],["metadataresolver",{"_index":1111,"title":{"injectables/MetaDataResolver.html":{}},"body":{"injectables/MetaDataResolver.html":{}}}],["metadataservice",{"_index":383,"title":{"injectables/MetaDataService.html":{}},"body":{"modules/BQStartPrimeModule.html":{},"injectables/MainRegionAdapterService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{}}}],["method",{"_index":903,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IEditFormViewEvents.html":{}}}],["methods",{"_index":19,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/AppLayout.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"modules/BQStartPrimeModule.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"pipes/BoolToYesNoPipe.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/CompareDirective.html":{},"components/CustomFilter.html":{},"injectables/DialogService.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseEvents.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IBaseView.html":{},"interfaces/IEditFormViewEvents.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"pipes/ModelValuePipe.html":{},"injectables/NavigationService.html":{},"pipes/PasswordPipe.html":{},"classes/PredefinedFilter.html":{},"injectables/RouterService.html":{},"classes/RunningConfigHelper.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"classes/TypeSystem.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{}}}],["min",{"_index":630,"title":{},"body":{"components/BqDropdownField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["minimum",{"_index":669,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["minlength",{"_index":664,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"interfaces/ValidationData.html":{},"miscellaneous/enumerations.html":{}}}],["minlengthinner",{"_index":658,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextField.html":{}}}],["minrange",{"_index":1441,"title":{},"body":{"interfaces/ValidationData.html":{}}}],["miscellaneous",{"_index":1517,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mn.label",{"_index":723,"title":{},"body":{"components/Breadcrumb.html":{}}}],["mode",{"_index":476,"title":{},"body":{"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"interfaces/ViewData.html":{}}}],["model",{"_index":447,"title":{},"body":{"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"injectables/GenericDataService.html":{},"classes/ModelMetadata.html":{},"components/Table.html":{}}}],["model.ts",{"_index":426,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/enumerations.html":{}}}],["modelchange",{"_index":459,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["modelmetadata",{"_index":544,"title":{"classes/ModelMetadata.html":{}},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"injectables/GenericDataService.html":{},"classes/ModelMetadata.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"components/Table.html":{},"components/TableFilters.html":{}}}],["models",{"_index":545,"title":{},"body":{"components/BaseListView.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{}}}],["modelvalue",{"_index":1165,"title":{},"body":{"pipes/ModelValuePipe.html":{}}}],["modelvaluepipe",{"_index":376,"title":{"pipes/ModelValuePipe.html":{}},"body":{"modules/BQStartPrimeModule.html":{},"pipes/ModelValuePipe.html":{}}}],["modified",{"_index":1544,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["modifiedby",{"_index":430,"title":{},"body":{"classes/BaseEntity.html":{}}}],["modifiedon",{"_index":431,"title":{},"body":{"classes/BaseEntity.html":{}}}],["module",{"_index":114,"title":{"modules/BQStartPrimeModule.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/MDILayoutComponent.html":{},"overview.html":{}}}],["modules",{"_index":369,"title":{"modules.html":{}},"body":{"modules/BQStartPrimeModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":390,"title":{},"body":{"modules/BQStartPrimeModule.html":{}}}],["moment",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":480,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["mouse",{"_index":1283,"title":{},"body":{"components/Table.html":{}}}],["mouseevent",{"_index":1361,"title":{},"body":{"components/TableFilters.html":{}}}],["msg",{"_index":819,"title":{},"body":{"injectables/DialogService.html":{},"injectables/InternalLogService.html":{},"injectables/LogService.html":{},"injectables/MessageService.html":{}}}],["msgsubscription",{"_index":509,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{}}}],["msgsvc",{"_index":1357,"title":{},"body":{"components/TableFilters.html":{}}}],["multi",{"_index":335,"title":{},"body":{"classes/BQConfigData.html":{},"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["myfield.errors?.maxlength?.requiredlength",{"_index":674,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["myfield.errors?.minlength?.requiredlength",{"_index":671,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["name",{"_index":34,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/AppLayout.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"classes/BQConfigData.html":{},"modules/BQStartPrimeModule.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"pipes/BoolToYesNoPipe.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/CompareDirective.html":{},"components/CustomFilter.html":{},"injectables/DialogService.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"interfaces/EnumItem.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseView.html":{},"interfaces/IUser.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"pipes/ModelValuePipe.html":{},"injectables/NavigationService.html":{},"classes/ODataResponse.html":{},"pipes/PasswordPipe.html":{},"classes/PredefinedFilter.html":{},"injectables/RouterService.html":{},"classes/RunningConfigHelper.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"classes/TypeSystem.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{},"miscellaneous/functions.html":{}}}],["named/predefined",{"_index":564,"title":{},"body":{"components/BaseListView.html":{}}}],["navigate",{"_index":1219,"title":{},"body":{"injectables/RouterService.html":{}}}],["navigatetoview",{"_index":1216,"title":{},"body":{"injectables/RouterService.html":{}}}],["navigatetoview(viewid",{"_index":1218,"title":{},"body":{"injectables/RouterService.html":{}}}],["navigating",{"_index":1167,"title":{},"body":{"injectables/NavigationService.html":{}}}],["navigation",{"_index":346,"title":{},"body":{"classes/BQConfigData.html":{},"interfaces/ViewData.html":{}}}],["navigationservice",{"_index":384,"title":{"injectables/NavigationService.html":{}},"body":{"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"injectables/NavigationService.html":{},"components/TopMenuBar.html":{}}}],["nearest",{"_index":756,"title":{},"body":{"directives/ControlContainerDirective.html":{}}}],["need",{"_index":318,"title":{},"body":{"classes/BQConfigData.html":{}}}],["needs",{"_index":1294,"title":{},"body":{"components/Table.html":{}}}],["new",{"_index":486,"title":{},"body":{"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"injectables/DialogService.html":{},"classes/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/RouterService.html":{},"classes/TableParams.html":{},"injectables/ViewWrapperService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["newval",{"_index":485,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/CustomFilter.html":{}}}],["next",{"_index":266,"title":{},"body":{"interceptors/AuthorizeInterceptor.html":{},"classes/BQConfigData.html":{}}}],["ng",{"_index":767,"title":{},"body":{"components/CustomFilter.html":{},"components/Table.html":{},"dependencies.html":{}}}],["ng_validators",{"_index":737,"title":{},"body":{"directives/CompareDirective.html":{}}}],["ng_value_accessor",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":94,"title":{},"body":{"components/AppLayout.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/MDILayoutComponent.html":{}}}],["ngafterviewinit",{"_index":519,"title":{},"body":{"components/BaseFormView.html":{},"components/TableFilters.html":{}}}],["ngform",{"_index":653,"title":{},"body":{"components/BqForm.html":{}}}],["ngmodel",{"_index":753,"title":{},"body":{"directives/ControlContainerDirective.html":{}}}],["ngmodel],[ngmodelgroup",{"_index":764,"title":{},"body":{"directives/ControlContainerDirective.html":{}}}],["ngmodel],[ngmodelgroup]'},{'name",{"_index":218,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["ngmodelgroup",{"_index":758,"title":{},"body":{"directives/ControlContainerDirective.html":{}}}],["ngonchanges",{"_index":1258,"title":{},"body":{"components/Table.html":{}}}],["ngonchanges(changes",{"_index":1306,"title":{},"body":{"components/Table.html":{}}}],["ngondestroy",{"_index":520,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"injectables/GenericDataService.html":{},"components/Table.html":{},"components/TableFilters.html":{},"components/TopBar.html":{}}}],["ngoninit",{"_index":95,"title":{},"body":{"components/AppLayout.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/ViewWrapper.html":{}}}],["ngtable",{"_index":1310,"title":{},"body":{"components/Table.html":{}}}],["ngx",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["ngzone",{"_index":1356,"title":{},"body":{"components/TableFilters.html":{}}}],["none",{"_index":1374,"title":{},"body":{"components/TableFilters.html":{}}}],["normal",{"_index":1448,"title":{},"body":{"interfaces/ViewData.html":{},"miscellaneous/enumerations.html":{}}}],["notations",{"_index":873,"title":{},"body":{"injectables/GenericDataService.html":{}}}],["null",{"_index":423,"title":{},"body":{"components/BaseComponent.html":{},"classes/BaseEntity.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"directives/CompareDirective.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"classes/ModelMetadata.html":{},"classes/ODataResponse.html":{},"components/TableColumn.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":365,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"interfaces/EnumItem.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/MainRegionAdapterService.html":{},"classes/MetadataField.html":{},"components/Table.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"interfaces/ValidationData.html":{}}}],["numbermode",{"_index":695,"title":{},"body":{"components/BqTextField.html":{}}}],["numberpredicates",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numberpredicateswithoutbetween",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numberrender",{"_index":696,"title":{},"body":{"components/BqTextField.html":{}}}],["nz",{"_index":1555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nz(val",{"_index":1569,"title":{},"body":{"miscellaneous/functions.html":{}}}],["oauth",{"_index":312,"title":{},"body":{"classes/BQConfigData.html":{},"classes/OAuthConfig.html":{}}}],["oauthconfig",{"_index":294,"title":{"classes/OAuthConfig.html":{}},"body":{"classes/BQConfigData.html":{},"classes/OAuthConfig.html":{}}}],["obj",{"_index":1149,"title":{},"body":{"classes/MetadataField.html":{},"classes/ModelMetadata.html":{}}}],["object",{"_index":1090,"title":{},"body":{"interfaces/MenuData.html":{},"components/Table.html":{},"components/TableFilters.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign(new",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":257,"title":{},"body":{"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"components/BqDropdownField.html":{},"components/Breadcrumb.html":{},"injectables/GenericDataService.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"injectables/LogPublishersService.html":{},"components/LoginMenuComponent.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"classes/TableParams.html":{}}}],["odata",{"_index":872,"title":{},"body":{"injectables/GenericDataService.html":{}}}],["odataresponse",{"_index":1182,"title":{"classes/ODataResponse.html":{}},"body":{"classes/ODataResponse.html":{},"classes/TableParams.html":{}}}],["oidc",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["onadd",{"_index":1344,"title":{},"body":{"components/TableFilters.html":{}}}],["onadd(event",{"_index":1358,"title":{},"body":{"components/TableFilters.html":{}}}],["onafterinitcomplete",{"_index":893,"title":{},"body":{"interfaces/IBaseEvents.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{}}}],["onafterserverdatareceived",{"_index":894,"title":{},"body":{"interfaces/IBaseEvents.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{}}}],["onbeforedelete",{"_index":916,"title":{},"body":{"interfaces/IEditFormViewEvents.html":{}}}],["onbeforesave",{"_index":917,"title":{},"body":{"interfaces/IEditFormViewEvents.html":{}}}],["onchange",{"_index":453,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["onchange(newval",{"_index":484,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["onchanges",{"_index":1240,"title":{},"body":{"components/Table.html":{}}}],["oncontainerclick",{"_index":1345,"title":{},"body":{"components/TableFilters.html":{}}}],["ondestroy",{"_index":493,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/Table.html":{},"components/TableFilters.html":{}}}],["oninit",{"_index":68,"title":{},"body":{"components/AppLayout.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/ViewWrapper.html":{}}}],["onlyeuqals",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onmaskclick",{"_index":96,"title":{},"body":{"components/AppLayout.html":{}}}],["onmenubuttonclick",{"_index":97,"title":{},"body":{"components/AppLayout.html":{},"components/TopBar.html":{}}}],["onmenubuttonclick(event",{"_index":1419,"title":{},"body":{"components/TopBar.html":{}}}],["onoverlaymenuenter",{"_index":1414,"title":{},"body":{"components/TopBar.html":{}}}],["onoverlaymenuenter(event",{"_index":1420,"title":{},"body":{"components/TopBar.html":{}}}],["onrefreshdata",{"_index":550,"title":{},"body":{"components/BaseListView.html":{}}}],["onremove",{"_index":1346,"title":{},"body":{"components/TableFilters.html":{}}}],["onremove(event",{"_index":1359,"title":{},"body":{"components/TableFilters.html":{}}}],["onrowexpandtoggled",{"_index":1270,"title":{},"body":{"components/Table.html":{}}}],["onsubmit",{"_index":651,"title":{},"body":{"components/BqForm.html":{}}}],["ontoprightmenuclicked",{"_index":104,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{},"components/TopMenuBar.html":{}}}],["open",{"_index":340,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseFormView.html":{},"injectables/RouterService.html":{}}}],["operation",{"_index":920,"title":{},"body":{"interfaces/IEditFormViewEvents.html":{}}}],["operationtype",{"_index":1093,"title":{},"body":{"classes/MessageBusPayLoad.html":{},"miscellaneous/enumerations.html":{}}}],["option",{"_index":330,"title":{},"body":{"classes/BQConfigData.html":{},"components/MDILayoutComponent.html":{},"dependencies.html":{}}}],["optional",{"_index":36,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/AppLayout.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"classes/BQConfigData.html":{},"modules/BQStartPrimeModule.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"pipes/BoolToYesNoPipe.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/CompareDirective.html":{},"components/CustomFilter.html":{},"interfaces/CustomUserMenus.html":{},"classes/DataServiceOptions.html":{},"injectables/DialogService.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseView.html":{},"interfaces/IUser.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"pipes/ModelValuePipe.html":{},"injectables/NavigationService.html":{},"classes/ODataResponse.html":{},"pipes/PasswordPipe.html":{},"classes/PredefinedFilter.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"classes/RunningConfigHelper.html":{},"components/Table.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/TopRightMenuData.html":{},"classes/TypeSystem.html":{},"interfaces/ValidationData.html":{},"interfaces/ViewData.html":{},"classes/ViewOptionalData.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["optionaldata",{"_index":525,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{}}}],["optionaldisplaytemplate",{"_index":448,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["optionaledittemplate",{"_index":449,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["optionalparams",{"_index":949,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["optionaltemplates",{"_index":87,"title":{},"body":{"components/AppLayout.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/MDILayoutComponent.html":{}}}],["optioncolumntemplate",{"_index":1265,"title":{},"body":{"components/Table.html":{}}}],["options",{"_index":878,"title":{},"body":{"injectables/GenericDataService.html":{},"classes/OAuthConfig.html":{},"injectables/RouterService.html":{},"components/Table.html":{}}}],["orderbyclause",{"_index":1190,"title":{"classes/OrderByClause.html":{}},"body":{"classes/OrderByClause.html":{}}}],["orderbycollection",{"_index":1387,"title":{},"body":{"classes/TableParams.html":{}}}],["otherinstance",{"_index":971,"title":{},"body":{"injectables/LocaleService.html":{}}}],["otherpagesizes",{"_index":366,"title":{},"body":{"classes/BQConfigData.html":{}}}],["otherpagesizes:[25,50,100",{"_index":1235,"title":{},"body":{"classes/RunningConfigHelper.html":{}}}],["otherproperty",{"_index":1442,"title":{},"body":{"interfaces/ValidationData.html":{}}}],["otherpropertydisplayname",{"_index":1443,"title":{},"body":{"interfaces/ValidationData.html":{}}}],["out",{"_index":322,"title":{},"body":{"classes/BQConfigData.html":{},"miscellaneous/variables.html":{}}}],["outputs",{"_index":103,"title":{},"body":{"components/AppLayout.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/CustomFilter.html":{},"components/MDILayoutComponent.html":{},"components/Table.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{}}}],["outside",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["outsideclicklistener",{"_index":1409,"title":{},"body":{"components/TopBar.html":{}}}],["overlay",{"_index":1364,"title":{},"body":{"components/TableFilters.html":{}}}],["override",{"_index":901,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{}}}],["overview",{"_index":1577,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1465,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":1371,"title":{},"body":{"components/TableFilters.html":{}}}],["page",{"_index":362,"title":{},"body":{"classes/BQConfigData.html":{}}}],["pagesize",{"_index":1247,"title":{},"body":{"components/Table.html":{}}}],["pagesizeoptions",{"_index":1248,"title":{},"body":{"components/Table.html":{}}}],["pagetitle",{"_index":28,"title":{},"body":{"injectables/AppInitService.html":{},"components/MenuBar.html":{}}}],["param",{"_index":1197,"title":{},"body":{"classes/PredefinedFilter.html":{},"components/Table.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/AppLayout.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"modules/BQStartPrimeModule.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"pipes/BoolToYesNoPipe.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/CompareDirective.html":{},"components/CustomFilter.html":{},"injectables/DialogService.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseView.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"pipes/ModelValuePipe.html":{},"injectables/NavigationService.html":{},"classes/ODataResponse.html":{},"pipes/PasswordPipe.html":{},"classes/PredefinedFilter.html":{},"injectables/RouterService.html":{},"classes/RunningConfigHelper.html":{},"components/Table.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"classes/TypeSystem.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":946,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{},"components/Table.html":{},"components/TableFilters.html":{}}}],["parent",{"_index":450,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"directives/CompareDirective.html":{},"classes/MetadataField.html":{}}}],["parentform",{"_index":646,"title":{},"body":{"components/BqForm.html":{}}}],["parserouteparamtokeys",{"_index":1158,"title":{},"body":{"classes/ModelMetadata.html":{}}}],["parserouteparamtokeys(url",{"_index":1162,"title":{},"body":{"classes/ModelMetadata.html":{}}}],["password",{"_index":167,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"pipes/PasswordPipe.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["passwordpipe",{"_index":377,"title":{"pipes/PasswordPipe.html":{}},"body":{"modules/BQStartPrimeModule.html":{},"pipes/PasswordPipe.html":{}}}],["passwordrender",{"_index":659,"title":{},"body":{"components/BqPasswordField.html":{}}}],["patch",{"_index":113,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{}}}],["path",{"_index":1088,"title":{},"body":{"interfaces/MenuData.html":{}}}],["pattern",{"_index":676,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextField.html":{},"interfaces/ValidationData.html":{}}}],["payload",{"_index":1091,"title":{},"body":{"classes/Message.html":{}}}],["pf.filtername",{"_index":1383,"title":{},"body":{"components/TableFilters.html":{}}}],["pfmenuclicked",{"_index":1347,"title":{},"body":{"components/TableFilters.html":{}}}],["pfmenuclicked(filter",{"_index":1360,"title":{},"body":{"components/TableFilters.html":{}}}],["phone",{"_index":1540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pipe",{"_index":592,"title":{"pipes/BoolToYesNoPipe.html":{},"pipes/ModelValuePipe.html":{},"pipes/PasswordPipe.html":{}},"body":{}}],["pipes",{"_index":593,"title":{},"body":{"pipes/BoolToYesNoPipe.html":{},"pipes/ModelValuePipe.html":{},"pipes/PasswordPipe.html":{},"overview.html":{}}}],["please",{"_index":1574,"title":{},"body":{"index.html":{}}}],["point",{"_index":373,"title":{},"body":{"modules/BQStartPrimeModule.html":{}}}],["populates",{"_index":913,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{}}}],["position",{"_index":147,"title":{},"body":{"components/AppLayout.html":{},"components/FooterBar.html":{},"components/TableFilters.html":{}}}],["post",{"_index":729,"title":{},"body":{"classes/Channel.html":{},"classes/OAuthConfig.html":{}}}],["post(message",{"_index":733,"title":{},"body":{"classes/Channel.html":{}}}],["post_logout_redirect_uri",{"_index":1172,"title":{},"body":{"classes/OAuthConfig.html":{}}}],["posttochannel",{"_index":1098,"title":{},"body":{"injectables/MessageService.html":{}}}],["posttochannel(channelname",{"_index":1105,"title":{},"body":{"injectables/MessageService.html":{}}}],["predefined",{"_index":567,"title":{},"body":{"components/BaseListView.html":{},"components/TableFilter.html":{}}}],["predefinedfilter",{"_index":562,"title":{"classes/PredefinedFilter.html":{}},"body":{"components/BaseListView.html":{},"classes/PredefinedFilter.html":{},"components/Table.html":{},"components/TableFilters.html":{}}}],["predefinedfilters",{"_index":546,"title":{},"body":{"components/BaseListView.html":{},"components/Table.html":{},"components/TableFilters.html":{}}}],["predicate",{"_index":793,"title":{"classes/Predicate.html":{}},"body":{"components/CustomFilter.html":{},"classes/FilterByClause.html":{},"classes/PredefinedFilter.html":{},"classes/Predicate.html":{},"components/TableFilter.html":{},"classes/TypeSystem.html":{},"miscellaneous/variables.html":{}}}],["predicate_between",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["predicate_contains",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["predicate_ends",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["predicate_equals",{"_index":797,"title":{},"body":{"components/CustomFilter.html":{},"miscellaneous/variables.html":{}}}],["predicate_greater",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["predicate_greaterequals",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["predicate_greterequals",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["predicate_is_not_set",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["predicate_is_set",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["predicate_isnotnull",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["predicate_isnull",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["predicate_less",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["predicate_lessequals",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["predicate_not_contains",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["predicate_starts",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["predicatekey",{"_index":1151,"title":{},"body":{"classes/MetadataField.html":{}}}],["predicates",{"_index":1434,"title":{},"body":{"classes/TypeSystem.html":{}}}],["predicateupdated",{"_index":784,"title":{},"body":{"components/CustomFilter.html":{}}}],["predicateupdated(newval",{"_index":792,"title":{},"body":{"components/CustomFilter.html":{}}}],["prepareloadserverdata",{"_index":521,"title":{},"body":{"components/BaseFormView.html":{}}}],["primary",{"_index":537,"title":{},"body":{"components/BaseFormView.html":{}}}],["primarykey",{"_index":1159,"title":{"classes/PrimaryKey.html":{}},"body":{"classes/ModelMetadata.html":{},"classes/PrimaryKey.html":{}}}],["primarykeyvalues",{"_index":1215,"title":{},"body":{"injectables/RouterService.html":{}}}],["prime",{"_index":1573,"title":{},"body":{"index.html":{}}}],["prime.module.ts",{"_index":371,"title":{},"body":{"modules/BQStartPrimeModule.html":{},"miscellaneous/functions.html":{}}}],["prime/src/lib/api",{"_index":225,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"interfaces/FailureAuthenticationResult.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["prime/src/lib/bq",{"_index":370,"title":{},"body":{"modules/BQStartPrimeModule.html":{},"miscellaneous/functions.html":{}}}],["prime/src/lib/config/bq",{"_index":283,"title":{},"body":{"classes/BQConfigData.html":{},"interfaces/CustomUserMenus.html":{},"interfaces/MenuData.html":{},"classes/OAuthConfig.html":{},"classes/RouteData.html":{},"classes/RunningConfigHelper.html":{},"interfaces/TopRightMenuData.html":{},"interfaces/ViewData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["prime/src/lib/models/base",{"_index":425,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/enumerations.html":{}}}],["prime/src/lib/models/meta",{"_index":826,"title":{},"body":{"interfaces/Dictionary.html":{},"interfaces/EnumItem.html":{},"interfaces/IBaseEvents.html":{},"classes/MessageBusPayLoad.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"classes/Predicate.html":{},"classes/PrimaryKey.html":{},"classes/TypeSystem.html":{},"interfaces/ValidationData.html":{},"classes/ViewOptionalData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["prime/src/lib/models/odata",{"_index":1183,"title":{},"body":{"classes/ODataResponse.html":{}}}],["prime/src/lib/models/table",{"_index":844,"title":{},"body":{"classes/FilterByClause.html":{},"classes/OrderByClause.html":{},"classes/PredefinedFilter.html":{},"classes/TableParams.html":{}}}],["prime/src/lib/services/app",{"_index":7,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"miscellaneous/functions.html":{}}}],["prime/src/lib/services/dialog.service.ts",{"_index":808,"title":{},"body":{"injectables/DialogService.html":{}}}],["prime/src/lib/services/generic",{"_index":803,"title":{},"body":{"classes/DataServiceOptions.html":{},"injectables/GenericDataService.html":{},"miscellaneous/variables.html":{}}}],["prime/src/lib/services/locale.service.ts",{"_index":961,"title":{},"body":{"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"miscellaneous/variables.html":{}}}],["prime/src/lib/services/log/log.service.ts",{"_index":932,"title":{},"body":{"injectables/InternalLogService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["prime/src/lib/services/mainregionadapter.service.ts",{"_index":1042,"title":{},"body":{"injectables/MainRegionAdapterService.html":{},"classes/ViewRunningData.html":{}}}],["prime/src/lib/services/message.service.ts",{"_index":725,"title":{},"body":{"classes/Channel.html":{},"classes/Message.html":{},"injectables/MessageService.html":{},"classes/Subscription.html":{},"miscellaneous/enumerations.html":{}}}],["prime/src/lib/services/meta",{"_index":1112,"title":{},"body":{"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{}}}],["prime/src/lib/services/navigation.service.ts",{"_index":1166,"title":{},"body":{"injectables/NavigationService.html":{}}}],["prime/src/lib/services/router.service.ts",{"_index":1212,"title":{},"body":{"injectables/RouterService.html":{}}}],["prime/src/lib/ui/base.component.ts",{"_index":397,"title":{},"body":{"components/BaseComponent.html":{}}}],["prime/src/lib/ui/controls/bq",{"_index":599,"title":{},"body":{"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/CustomFilter.html":{},"interfaces/RowExpandedEventData.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["prime/src/lib/ui/controls/form",{"_index":863,"title":{},"body":{"components/FormBlock.html":{}}}],["prime/src/lib/ui/controls/validators/compare.directive.ts",{"_index":735,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/functions.html":{}}}],["prime/src/lib/ui/controls/view",{"_index":1453,"title":{},"body":{"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{}}}],["prime/src/lib/ui/core/base",{"_index":435,"title":{},"body":{"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IBaseView.html":{},"interfaces/IEditFormViewEvents.html":{},"miscellaneous/functions.html":{}}}],["prime/src/lib/ui/core/bq",{"_index":392,"title":{},"body":{"directives/BQTemplate.html":{}}}],["prime/src/lib/ui/core/control",{"_index":745,"title":{},"body":{"directives/ControlContainerDirective.html":{},"miscellaneous/variables.html":{}}}],["prime/src/lib/ui/core/display.pipes.ts",{"_index":594,"title":{},"body":{"pipes/BoolToYesNoPipe.html":{},"pipes/PasswordPipe.html":{}}}],["prime/src/lib/ui/core/dynamic",{"_index":829,"title":{},"body":{"directives/DynamicHostDirective.html":{}}}],["prime/src/lib/ui/core/dynamic.component.ts",{"_index":833,"title":{},"body":{"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{}}}],["prime/src/lib/ui/core/model",{"_index":1163,"title":{},"body":{"pipes/ModelValuePipe.html":{}}}],["prime/src/lib/ui/layout/app",{"_index":56,"title":{},"body":{"components/AppLayout.html":{}}}],["prime/src/lib/ui/layout/base.menu.ts",{"_index":578,"title":{},"body":{"classes/BaseMenu.html":{}}}],["prime/src/lib/ui/layout/breadcrumb/breadcrumb.ts",{"_index":715,"title":{},"body":{"components/Breadcrumb.html":{}}}],["prime/src/lib/ui/layout/footer",{"_index":854,"title":{},"body":{"components/FooterBar.html":{}}}],["prime/src/lib/ui/layout/mdi/mdi",{"_index":1038,"title":{},"body":{"components/MDILayoutComponent.html":{}}}],["prime/src/lib/ui/layout/mdi/mdi.component.ts",{"_index":1029,"title":{},"body":{"components/MDIComponent.html":{}}}],["prime/src/lib/ui/layout/menu",{"_index":1065,"title":{},"body":{"components/MenuBar.html":{}}}],["prime/src/lib/ui/layout/top",{"_index":1404,"title":{},"body":{"components/TopBar.html":{},"components/TopMenuBar.html":{}}}],["primeflex",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":1505,"title":{},"body":{"dependencies.html":{}}}],["primems",{"_index":1103,"title":{},"body":{"injectables/MessageService.html":{}}}],["primeng",{"_index":1097,"title":{},"body":{"injectables/MessageService.html":{},"dependencies.html":{}}}],["primengconfig",{"_index":106,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{}}}],["prism",{"_index":1047,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["profile",{"_index":243,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"components/TopBar.html":{},"miscellaneous/variables.html":{}}}],["profilepathcomponents",{"_index":244,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["profileurl",{"_index":1427,"title":{},"body":{"components/TopMenuBar.html":{}}}],["projects/.../api",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../app",{"_index":1554,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../authorize.service.ts",{"_index":1520,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../base",{"_index":1525,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["projects/.../bq",{"_index":1521,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../compare.directive.ts",{"_index":1556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../control",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../generic",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../locale.service.ts",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../log.service.ts",{"_index":1522,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../message.service.ts",{"_index":1523,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../meta",{"_index":1524,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/bq",{"_index":5,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/AppLayout.html":{},"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"classes/BQConfigData.html":{},"modules/BQStartPrimeModule.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"classes/BaseEntity.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"pipes/BoolToYesNoPipe.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/CompareDirective.html":{},"directives/ControlContainerDirective.html":{},"components/CustomFilter.html":{},"interfaces/CustomUserMenus.html":{},"classes/DataServiceOptions.html":{},"injectables/DialogService.html":{},"interfaces/Dictionary.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"interfaces/EnumItem.html":{},"interfaces/FailureAuthenticationResult.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseEvents.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IBaseView.html":{},"interfaces/IEditFormViewEvents.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"classes/Message.html":{},"classes/MessageBusPayLoad.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"pipes/ModelValuePipe.html":{},"injectables/NavigationService.html":{},"classes/OAuthConfig.html":{},"classes/ODataResponse.html":{},"classes/OrderByClause.html":{},"pipes/PasswordPipe.html":{},"classes/PredefinedFilter.html":{},"classes/Predicate.html":{},"classes/PrimaryKey.html":{},"interfaces/RedirectAuthenticationResult.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"interfaces/RowExpandedEventData.html":{},"classes/RunningConfigHelper.html":{},"classes/Subscription.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/TopRightMenuData.html":{},"classes/TypeSystem.html":{},"interfaces/ValidationData.html":{},"interfaces/ViewData.html":{},"classes/ViewOptionalData.html":{},"classes/ViewRunningData.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":258,"title":{},"body":{"injectables/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"injectables/MetaDataResolver.html":{}}}],["properties",{"_index":17,"title":{"properties.html":{}},"body":{"injectables/AppInitService.html":{},"components/AppLayout.html":{},"interfaces/ApplicationPathsType.html":{},"classes/BQConfigData.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"classes/BaseEntity.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"components/CustomFilter.html":{},"interfaces/CustomUserMenus.html":{},"classes/DataServiceOptions.html":{},"injectables/DialogService.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"interfaces/EnumItem.html":{},"interfaces/FailureAuthenticationResult.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"injectables/InternalLogService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"classes/Message.html":{},"classes/MessageBusPayLoad.html":{},"injectables/MetaDataService.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"classes/OAuthConfig.html":{},"classes/ODataResponse.html":{},"classes/OrderByClause.html":{},"classes/PredefinedFilter.html":{},"classes/Predicate.html":{},"classes/PrimaryKey.html":{},"interfaces/RedirectAuthenticationResult.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"interfaces/RowExpandedEventData.html":{},"classes/RunningConfigHelper.html":{},"classes/Subscription.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/Table.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/TopRightMenuData.html":{},"classes/TypeSystem.html":{},"interfaces/ValidationData.html":{},"interfaces/ViewData.html":{},"classes/ViewOptionalData.html":{},"classes/ViewRunningData.html":{},"injectables/ViewWrapperService.html":{},"properties.html":{}}}],["property",{"_index":479,"title":{},"body":{"components/BaseField.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"components/TableFilter.html":{}}}],["protected",{"_index":502,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"injectables/InternalLogService.html":{},"injectables/LogService.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["provide",{"_index":636,"title":{},"body":{"components/BqForm.html":{},"directives/CompareDirective.html":{},"components/FormBlock.html":{},"classes/LogPublisher.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":378,"title":{},"body":{"modules/BQStartPrimeModule.html":{},"components/BqForm.html":{},"directives/CompareDirective.html":{},"directives/ControlContainerDirective.html":{},"components/FormBlock.html":{}}}],["pub",{"_index":1011,"title":{},"body":{"injectables/LogPublishersService.html":{}}}],["public",{"_index":270,"title":{},"body":{"injectables/AuthorizeService.html":{},"directives/BQTemplate.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"directives/DynamicHostDirective.html":{},"classes/FilterByClause.html":{},"injectables/GenericDataService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"classes/ModelMetadata.html":{},"classes/ODataResponse.html":{},"classes/OrderByClause.html":{},"classes/PredefinedFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"injectables/ViewWrapperService.html":{}}}],["publish",{"_index":950,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["published",{"_index":1014,"title":{},"body":{"injectables/LogService.html":{}}}],["publisher",{"_index":998,"title":{},"body":{"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{}}}],["publishers",{"_index":982,"title":{},"body":{"classes/LogConsole.html":{},"classes/LogPublisher.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{}}}],["publishers.json",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publishers_file",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publishersservice",{"_index":943,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["query",{"_index":1293,"title":{},"body":{"components/Table.html":{},"components/TableFilters.html":{}}}],["querylist",{"_index":142,"title":{},"body":{"components/AppLayout.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/MDILayoutComponent.html":{},"components/Table.html":{},"components/TableFilters.html":{}}}],["queryparameternames",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryparams",{"_index":590,"title":{},"body":{"classes/BaseMenu.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"injectables/RouterService.html":{},"components/TopMenuBar.html":{}}}],["range",{"_index":1538,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["readonly",{"_index":446,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"classes/ODataResponse.html":{}}}],["real",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["receives",{"_index":912,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{}}}],["record",{"_index":535,"title":{},"body":{"components/BaseFormView.html":{},"classes/LogPublisher.html":{}}}],["records",{"_index":888,"title":{},"body":{"injectables/GenericDataService.html":{}}}],["recordstate",{"_index":432,"title":{},"body":{"classes/BaseEntity.html":{},"miscellaneous/enumerations.html":{}}}],["recursemapmenu",{"_index":582,"title":{},"body":{"classes/BaseMenu.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["recursemapmenu(menus",{"_index":591,"title":{},"body":{"classes/BaseMenu.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["redirect",{"_index":1177,"title":{},"body":{"classes/OAuthConfig.html":{},"miscellaneous/enumerations.html":{}}}],["redirect_uri",{"_index":1173,"title":{},"body":{"classes/OAuthConfig.html":{}}}],["redirectauthenticationresult",{"_index":1208,"title":{"interfaces/RedirectAuthenticationResult.html":{}},"body":{"interfaces/RedirectAuthenticationResult.html":{},"miscellaneous/typealiases.html":{}}}],["refresh",{"_index":522,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"interfaces/IBaseView.html":{}}}],["regexmessage",{"_index":665,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextField.html":{}}}],["regexpattern",{"_index":666,"title":{},"body":{"components/BqPasswordField.html":{},"components/BqTextField.html":{}}}],["region",{"_index":1048,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["regionsvc",{"_index":584,"title":{},"body":{"classes/BaseMenu.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/MDIComponent.html":{},"components/MenuBar.html":{},"injectables/NavigationService.html":{},"injectables/RouterService.html":{},"components/TopMenuBar.html":{}}}],["register",{"_index":245,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"components/LoginMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["registerpathcomponents",{"_index":246,"title":{},"body":{"interfaces/ApplicationPathsType.html":{},"miscellaneous/variables.html":{}}}],["regularexpression",{"_index":1539,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["related",{"_index":556,"title":{},"body":{"components/BaseListView.html":{},"injectables/MetaDataResolver.html":{}}}],["relatedformviewid",{"_index":1139,"title":{},"body":{"classes/MetadataField.html":{}}}],["relatedlistviewid",{"_index":1140,"title":{},"body":{"classes/MetadataField.html":{}}}],["relative",{"_index":1365,"title":{},"body":{"components/TableFilters.html":{}}}],["reload",{"_index":1295,"title":{},"body":{"components/Table.html":{}}}],["remove",{"_index":789,"title":{},"body":{"components/CustomFilter.html":{}}}],["removeclass",{"_index":98,"title":{},"body":{"components/AppLayout.html":{}}}],["removeclass(element",{"_index":136,"title":{},"body":{"components/AppLayout.html":{}}}],["removeconditon",{"_index":1348,"title":{},"body":{"components/TableFilters.html":{}}}],["removeconditon(index",{"_index":1362,"title":{},"body":{"components/TableFilters.html":{}}}],["removecurrentview",{"_index":1055,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["removecurrentview(skipcanclose",{"_index":1062,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["removefilter",{"_index":1395,"title":{},"body":{"classes/TableParams.html":{}}}],["removefilter(filter",{"_index":1402,"title":{},"body":{"classes/TableParams.html":{}}}],["removefromview",{"_index":1056,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["removefromview(index",{"_index":1064,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["removesubscription",{"_index":730,"title":{},"body":{"classes/Channel.html":{}}}],["removesubscription(id",{"_index":734,"title":{},"body":{"classes/Channel.html":{}}}],["renderer",{"_index":1337,"title":{},"body":{"components/TableFilters.html":{}}}],["renderer2",{"_index":1354,"title":{},"body":{"components/TableFilters.html":{}}}],["renders",{"_index":467,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["replacechar",{"_index":1192,"title":{},"body":{"pipes/PasswordPipe.html":{}}}],["replaysubject",{"_index":487,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["represents",{"_index":987,"title":{},"body":{"classes/LogEntry.html":{},"components/TableColumn.html":{}}}],["req",{"_index":268,"title":{},"body":{"interceptors/AuthorizeInterceptor.html":{}}}],["require",{"_index":569,"title":{},"body":{"components/BaseListView.html":{},"components/Table.html":{},"components/TableFilters.html":{}}}],["required",{"_index":474,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"directives/ControlContainerDirective.html":{},"miscellaneous/enumerations.html":{}}}],["resizablecolumns",{"_index":1266,"title":{},"body":{"components/Table.html":{}}}],["resolve",{"_index":1115,"title":{},"body":{"injectables/MetaDataResolver.html":{}}}],["resolve(route",{"_index":1117,"title":{},"body":{"injectables/MetaDataResolver.html":{}}}],["resource_key",{"_index":1205,"title":{},"body":{"classes/Predicate.html":{},"miscellaneous/variables.html":{}}}],["response",{"_index":1179,"title":{},"body":{"classes/OAuthConfig.html":{},"classes/ODataResponse.html":{}}}],["response.ts",{"_index":1184,"title":{},"body":{"classes/ODataResponse.html":{}}}],["response_type",{"_index":1174,"title":{},"body":{"classes/OAuthConfig.html":{}}}],["responsible",{"_index":61,"title":{},"body":{"components/AppLayout.html":{},"components/MDIComponent.html":{},"injectables/MainRegionAdapterService.html":{},"injectables/MessageService.html":{},"injectables/MetaDataService.html":{}}}],["resposible",{"_index":1447,"title":{},"body":{"interfaces/ViewData.html":{}}}],["results",{"_index":40,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/AppLayout.html":{},"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"classes/BQConfigData.html":{},"modules/BQStartPrimeModule.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"classes/BaseEntity.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"pipes/BoolToYesNoPipe.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/CompareDirective.html":{},"directives/ControlContainerDirective.html":{},"components/CustomFilter.html":{},"interfaces/CustomUserMenus.html":{},"classes/DataServiceOptions.html":{},"injectables/DialogService.html":{},"interfaces/Dictionary.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"interfaces/EnumItem.html":{},"interfaces/FailureAuthenticationResult.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseEvents.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IBaseView.html":{},"interfaces/IEditFormViewEvents.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"classes/Message.html":{},"classes/MessageBusPayLoad.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"pipes/ModelValuePipe.html":{},"injectables/NavigationService.html":{},"classes/OAuthConfig.html":{},"classes/ODataResponse.html":{},"classes/OrderByClause.html":{},"pipes/PasswordPipe.html":{},"classes/PredefinedFilter.html":{},"classes/Predicate.html":{},"classes/PrimaryKey.html":{},"interfaces/RedirectAuthenticationResult.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"interfaces/RowExpandedEventData.html":{},"classes/RunningConfigHelper.html":{},"classes/Subscription.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/TopRightMenuData.html":{},"classes/TypeSystem.html":{},"interfaces/ValidationData.html":{},"interfaces/ViewData.html":{},"classes/ViewOptionalData.html":{},"classes/ViewRunningData.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["returned",{"_index":919,"title":{},"body":{"interfaces/IEditFormViewEvents.html":{}}}],["returns",{"_index":37,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/AppLayout.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"modules/BQStartPrimeModule.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"pipes/BoolToYesNoPipe.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/CompareDirective.html":{},"components/CustomFilter.html":{},"injectables/DialogService.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseEvents.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IBaseView.html":{},"interfaces/IEditFormViewEvents.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"pipes/ModelValuePipe.html":{},"injectables/NavigationService.html":{},"pipes/PasswordPipe.html":{},"classes/PredefinedFilter.html":{},"injectables/RouterService.html":{},"classes/RunningConfigHelper.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"classes/TypeSystem.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{},"miscellaneous/functions.html":{}}}],["returnurl",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["returnurltype",{"_index":926,"title":{},"body":{"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"miscellaneous/variables.html":{}}}],["revert",{"_index":1378,"title":{},"body":{"components/TableFilters.html":{}}}],["right",{"_index":354,"title":{},"body":{"classes/BQConfigData.html":{},"interfaces/CustomUserMenus.html":{},"components/TableFilters.html":{},"components/TopBar.html":{}}}],["role",{"_index":415,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"interfaces/IUser.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["root",{"_index":300,"title":{},"body":{"classes/BQConfigData.html":{}}}],["rooturl",{"_index":1119,"title":{},"body":{"injectables/MetaDataService.html":{}}}],["route",{"_index":838,"title":{},"body":{"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"injectables/MetaDataResolver.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{}}}],["routedata",{"_index":719,"title":{"classes/RouteData.html":{}},"body":{"components/Breadcrumb.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"classes/ViewRunningData.html":{}}}],["router",{"_index":27,"title":{},"body":{"injectables/AppInitService.html":{},"injectables/AuthorizeGuard.html":{},"classes/BQConfigData.html":{},"classes/BaseMenu.html":{},"components/Breadcrumb.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"injectables/NavigationService.html":{},"injectables/RouterService.html":{},"components/TopMenuBar.html":{}}}],["routerlink",{"_index":1089,"title":{},"body":{"interfaces/MenuData.html":{}}}],["routerservice",{"_index":385,"title":{"injectables/RouterService.html":{}},"body":{"modules/BQStartPrimeModule.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqForm.html":{},"injectables/RouterService.html":{},"components/Table.html":{},"classes/TableParams.html":{}}}],["routerstatesnapshot",{"_index":255,"title":{},"body":{"injectables/AuthorizeGuard.html":{},"injectables/MetaDataResolver.html":{}}}],["routersvc",{"_index":527,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqForm.html":{},"components/Table.html":{},"classes/TableParams.html":{}}}],["row",{"_index":684,"title":{},"body":{"components/BqTextArea.html":{},"interfaces/RowExpandedEventData.html":{},"components/Table.html":{}}}],["rowdata",{"_index":1298,"title":{},"body":{"components/Table.html":{}}}],["rowexpandedeventdata",{"_index":1223,"title":{"interfaces/RowExpandedEventData.html":{}},"body":{"interfaces/RowExpandedEventData.html":{}}}],["rows",{"_index":1290,"title":{},"body":{"components/Table.html":{}}}],["running",{"_index":315,"title":{},"body":{"classes/BQConfigData.html":{}}}],["runningconfig",{"_index":23,"title":{},"body":{"injectables/AppInitService.html":{}}}],["runningconfighelper",{"_index":1226,"title":{"classes/RunningConfigHelper.html":{}},"body":{"classes/RunningConfigHelper.html":{}}}],["runtime",{"_index":1210,"title":{},"body":{"classes/RouteData.html":{},"classes/RunningConfigHelper.html":{},"components/Table.html":{},"miscellaneous/functions.html":{}}}],["runtimeid",{"_index":401,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["rxjs",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":316,"title":{},"body":{"classes/BQConfigData.html":{}}}],["save",{"_index":523,"title":{},"body":{"components/BaseFormView.html":{},"components/BqForm.html":{},"injectables/GenericDataService.html":{},"interfaces/IEditFormViewEvents.html":{}}}],["save(model",{"_index":890,"title":{},"body":{"injectables/GenericDataService.html":{}}}],["saved",{"_index":923,"title":{},"body":{"interfaces/IEditFormViewEvents.html":{}}}],["saves",{"_index":995,"title":{},"body":{"classes/LogLocalStorage.html":{}}}],["sbyte",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scm.label",{"_index":1080,"title":{},"body":{"components/MenuBar.html":{}}}],["scope",{"_index":1175,"title":{},"body":{"classes/OAuthConfig.html":{}}}],["screen",{"_index":629,"title":{},"body":{"components/BqDropdownField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/TableFilters.html":{}}}],["see",{"_index":761,"title":{},"body":{"directives/ControlContainerDirective.html":{}}}],["select",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["select/ng",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["selectclause",{"_index":807,"title":{},"body":{"classes/DataServiceOptions.html":{},"classes/ViewOptionalData.html":{}}}],["selectedfilter",{"_index":776,"title":{},"body":{"components/CustomFilter.html":{}}}],["selectedpredicate",{"_index":777,"title":{},"body":{"components/CustomFilter.html":{}}}],["selector",{"_index":71,"title":{},"body":{"components/AppLayout.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"directives/CompareDirective.html":{},"directives/ControlContainerDirective.html":{},"components/CustomFilter.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["selfilter",{"_index":794,"title":{},"body":{"components/CustomFilter.html":{}}}],["seperatedigits",{"_index":701,"title":{},"body":{"components/BqTextField.html":{}}}],["server",{"_index":323,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseListView.html":{},"classes/OAuthConfig.html":{},"components/Table.html":{},"interfaces/ViewData.html":{}}}],["serveradded",{"_index":1536,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["serverdataloaded",{"_index":1396,"title":{},"body":{"classes/TableParams.html":{}}}],["serverdataloaded(data",{"_index":1403,"title":{},"body":{"classes/TableParams.html":{}}}],["serverdeleted",{"_index":1537,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["serverupdated",{"_index":1535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["service",{"_index":11,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/BaseListView.html":{},"injectables/DialogService.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"injectables/LocaleService.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"injectables/MessageService.html":{},"injectables/NavigationService.html":{},"injectables/RouterService.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":319,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"miscellaneous/variables.html":{}}}],["setcurrency(value",{"_index":713,"title":{},"body":{"components/BqTextField.html":{}}}],["setdefaultlocale",{"_index":968,"title":{},"body":{"injectables/LocaleService.html":{}}}],["setdefaultlocale(localeid",{"_index":977,"title":{},"body":{"injectables/LocaleService.html":{}}}],["setinjector",{"_index":49,"title":{},"body":{"classes/AppInjector.html":{}}}],["setinjector(injector",{"_index":50,"title":{},"body":{"classes/AppInjector.html":{}}}],["setlocale",{"_index":969,"title":{},"body":{"injectables/LocaleService.html":{}}}],["setlocale(localeid",{"_index":978,"title":{},"body":{"injectables/LocaleService.html":{}}}],["setmodel(value",{"_index":489,"title":{},"body":{"components/BaseField.html":{}}}],["setshortcuts(value",{"_index":145,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{}}}],["setting",{"_index":12,"title":{},"body":{"injectables/AppInitService.html":{}}}],["setup",{"_index":1326,"title":{},"body":{"components/TableFilter.html":{}}}],["setupview",{"_index":1462,"title":{},"body":{"injectables/ViewWrapperService.html":{}}}],["setupview(view",{"_index":1463,"title":{},"body":{"injectables/ViewWrapperService.html":{}}}],["shortcut",{"_index":110,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{}}}],["shortcutinput",{"_index":108,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{}}}],["shortcuts",{"_index":100,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{},"dependencies.html":{}}}],["shortcutsinternal",{"_index":88,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{}}}],["shouldlog",{"_index":940,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["shouldlog(level",{"_index":956,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["show",{"_index":463,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Table.html":{},"interfaces/ViewData.html":{}}}],["showaddbutton",{"_index":547,"title":{},"body":{"components/BaseListView.html":{},"components/Table.html":{},"components/TableFilters.html":{}}}],["showasenum",{"_index":617,"title":{},"body":{"components/BqDropdownField.html":{}}}],["showdelete",{"_index":647,"title":{},"body":{"components/BqForm.html":{}}}],["showdropdownvalue",{"_index":778,"title":{},"body":{"components/CustomFilter.html":{}}}],["showedit",{"_index":648,"title":{},"body":{"components/BqForm.html":{}}}],["showequals",{"_index":779,"title":{},"body":{"components/CustomFilter.html":{}}}],["showerror",{"_index":406,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["showerror(message",{"_index":416,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["showgrid",{"_index":1267,"title":{},"body":{"components/Table.html":{}}}],["showinfo",{"_index":407,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["showinfo(message",{"_index":418,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["showing",{"_index":62,"title":{},"body":{"components/AppLayout.html":{},"components/BaseField.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"injectables/DialogService.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MessageService.html":{},"components/Table.html":{}}}],["showleftmenu",{"_index":89,"title":{},"body":{"components/AppLayout.html":{}}}],["showmenu",{"_index":1338,"title":{},"body":{"components/TableFilters.html":{}}}],["showmenuontop",{"_index":101,"title":{},"body":{"components/AppLayout.html":{}}}],["showmessage",{"_index":1099,"title":{},"body":{"injectables/MessageService.html":{}}}],["showmessage(msg",{"_index":1106,"title":{},"body":{"injectables/MessageService.html":{}}}],["shown",{"_index":119,"title":{},"body":{"components/AppLayout.html":{}}}],["shownew",{"_index":649,"title":{},"body":{"components/BqForm.html":{}}}],["showself",{"_index":720,"title":{},"body":{"components/Breadcrumb.html":{}}}],["showstripedgrid",{"_index":1268,"title":{},"body":{"components/Table.html":{}}}],["showsuccess",{"_index":408,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["showsuccess(message",{"_index":419,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["showtime",{"_index":702,"title":{},"body":{"components/BqTextField.html":{},"components/TableFilter.html":{}}}],["showtovalue",{"_index":780,"title":{},"body":{"components/CustomFilter.html":{}}}],["showvalue",{"_index":781,"title":{},"body":{"components/CustomFilter.html":{}}}],["showwarning",{"_index":409,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["showwarning(message",{"_index":420,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["side",{"_index":558,"title":{},"body":{"components/BaseListView.html":{}}}],["sidebar",{"_index":124,"title":{},"body":{"components/AppLayout.html":{}}}],["signin",{"_index":276,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["signin(state",{"_index":281,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["signout",{"_index":277,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["signout(state",{"_index":282,"title":{},"body":{"injectables/AuthorizeService.html":{}}}],["similar",{"_index":465,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["simplechanges",{"_index":1307,"title":{},"body":{"components/Table.html":{}}}],["single",{"_index":883,"title":{},"body":{"injectables/GenericDataService.html":{},"miscellaneous/variables.html":{}}}],["size",{"_index":363,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["skip",{"_index":1388,"title":{},"body":{"classes/TableParams.html":{}}}],["skipcanclose",{"_index":1063,"title":{},"body":{"injectables/MainRegionAdapterService.html":{},"injectables/NavigationService.html":{}}}],["skipself",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["somewhere",{"_index":325,"title":{},"body":{"classes/BQConfigData.html":{}}}],["sortname",{"_index":1322,"title":{},"body":{"components/TableColumn.html":{}}}],["source",{"_index":1327,"title":{},"body":{"components/TableFilter.html":{}}}],["sources",{"_index":889,"title":{},"body":{"injectables/GenericDataService.html":{}}}],["spa",{"_index":314,"title":{},"body":{"classes/BQConfigData.html":{}}}],["specify",{"_index":311,"title":{},"body":{"classes/BQConfigData.html":{}}}],["start",{"_index":6,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/AppLayout.html":{},"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"classes/BQConfigData.html":{},"modules/BQStartPrimeModule.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"classes/BaseEntity.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"pipes/BoolToYesNoPipe.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/CompareDirective.html":{},"directives/ControlContainerDirective.html":{},"components/CustomFilter.html":{},"interfaces/CustomUserMenus.html":{},"classes/DataServiceOptions.html":{},"injectables/DialogService.html":{},"interfaces/Dictionary.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"interfaces/EnumItem.html":{},"interfaces/FailureAuthenticationResult.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseEvents.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IBaseView.html":{},"interfaces/IEditFormViewEvents.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"classes/Message.html":{},"classes/MessageBusPayLoad.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"pipes/ModelValuePipe.html":{},"injectables/NavigationService.html":{},"classes/OAuthConfig.html":{},"classes/ODataResponse.html":{},"classes/OrderByClause.html":{},"pipes/PasswordPipe.html":{},"classes/PredefinedFilter.html":{},"classes/Predicate.html":{},"classes/PrimaryKey.html":{},"interfaces/RedirectAuthenticationResult.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"interfaces/RowExpandedEventData.html":{},"classes/RunningConfigHelper.html":{},"classes/Subscription.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/TopRightMenuData.html":{},"classes/TypeSystem.html":{},"interfaces/ValidationData.html":{},"interfaces/ViewData.html":{},"classes/ViewOptionalData.html":{},"classes/ViewRunningData.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["start.copyright",{"_index":861,"title":{},"body":{"components/FooterBar.html":{}}}],["start.filters.between",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start.filters.contains",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start.filters.customtitle",{"_index":1384,"title":{},"body":{"components/TableFilters.html":{}}}],["start.filters.endswith",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start.filters.eq",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start.filters.ge",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start.filters.gt",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start.filters.isnotset",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start.filters.isset",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start.filters.notcontains",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start.filters.startswith",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start.filters.title",{"_index":1382,"title":{},"body":{"components/TableFilters.html":{}}}],["start.poweredby",{"_index":862,"title":{},"body":{"components/FooterBar.html":{}}}],["started",{"_index":1572,"title":{"index.html":{}},"body":{}}],["starts",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["startup",{"_index":285,"title":{},"body":{"classes/BQConfigData.html":{}}}],["state",{"_index":254,"title":{},"body":{"injectables/AuthorizeGuard.html":{},"injectables/AuthorizeService.html":{},"injectables/MetaDataResolver.html":{},"interfaces/SuccessAuthenticationResult.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":47,"title":{},"body":{"classes/AppInjector.html":{},"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"classes/FilterByClause.html":{},"injectables/InternalLogService.html":{},"components/MDILayoutComponent.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"components/Table.html":{}}}],["status",{"_index":842,"title":{},"body":{"interfaces/FailureAuthenticationResult.html":{},"interfaces/RedirectAuthenticationResult.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{}}}],["stick",{"_index":146,"title":{},"body":{"components/AppLayout.html":{},"components/FooterBar.html":{}}}],["stickyfooter",{"_index":102,"title":{},"body":{"components/AppLayout.html":{},"components/FooterBar.html":{}}}],["still",{"_index":481,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["stop",{"_index":922,"title":{},"body":{"interfaces/IEditFormViewEvents.html":{}}}],["storage",{"_index":997,"title":{},"body":{"classes/LogLocalStorage.html":{}}}],["string",{"_index":132,"title":{},"body":{"components/AppLayout.html":{},"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeService.html":{},"classes/BQConfigData.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"classes/BaseEntity.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/CompareDirective.html":{},"components/CustomFilter.html":{},"interfaces/CustomUserMenus.html":{},"classes/DataServiceOptions.html":{},"injectables/DialogService.html":{},"interfaces/Dictionary.html":{},"interfaces/EnumItem.html":{},"interfaces/FailureAuthenticationResult.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{},"injectables/LogService.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"classes/MessageBusPayLoad.html":{},"injectables/MessageService.html":{},"injectables/MetaDataService.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"classes/OAuthConfig.html":{},"classes/OrderByClause.html":{},"pipes/PasswordPipe.html":{},"classes/Predicate.html":{},"classes/PrimaryKey.html":{},"injectables/RouterService.html":{},"classes/RunningConfigHelper.html":{},"classes/Subscription.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/TopRightMenuData.html":{},"classes/TypeSystem.html":{},"interfaces/ValidationData.html":{},"interfaces/ViewData.html":{},"classes/ViewOptionalData.html":{},"classes/ViewRunningData.html":{},"miscellaneous/variables.html":{}}}],["stringrender",{"_index":682,"title":{},"body":{"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["stripped",{"_index":1287,"title":{},"body":{"components/Table.html":{}}}],["sts",{"_index":324,"title":{},"body":{"classes/BQConfigData.html":{}}}],["styleclass",{"_index":1249,"title":{},"body":{"components/Table.html":{}}}],["styles",{"_index":55,"title":{},"body":{"components/AppLayout.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/ViewWrapper.html":{}}}],["styleurls",{"_index":74,"title":{},"body":{"components/AppLayout.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/ViewWrapper.html":{}}}],["subject",{"_index":825,"title":{},"body":{"injectables/DialogService.html":{},"classes/TableParams.html":{}}}],["subscribetochannel",{"_index":1100,"title":{},"body":{"injectables/MessageService.html":{}}}],["subscribetochannel(channelname",{"_index":1108,"title":{},"body":{"injectables/MessageService.html":{}}}],["subscription",{"_index":542,"title":{"classes/Subscription.html":{}},"body":{"components/BaseFormView.html":{},"classes/Channel.html":{},"injectables/MessageService.html":{},"classes/Subscription.html":{},"components/Table.html":{},"components/TableFilters.html":{},"components/TopBar.html":{}}}],["subscriptionid",{"_index":1110,"title":{},"body":{"injectables/MessageService.html":{}}}],["subscriptions",{"_index":727,"title":{},"body":{"classes/Channel.html":{}}}],["success",{"_index":1526,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successauthenticationresult",{"_index":1238,"title":{"interfaces/SuccessAuthenticationResult.html":{}},"body":{"interfaces/SuccessAuthenticationResult.html":{},"miscellaneous/typealiases.html":{}}}],["supply",{"_index":1280,"title":{},"body":{"components/Table.html":{}}}],["switch",{"_index":332,"title":{},"body":{"classes/BQConfigData.html":{}}}],["syncwithtable",{"_index":1259,"title":{},"body":{"components/Table.html":{}}}],["t",{"_index":434,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Channel.html":{},"interfaces/Dictionary.html":{},"injectables/GenericDataService.html":{},"classes/Message.html":{},"injectables/MessageService.html":{},"classes/ModelMetadata.html":{},"classes/ODataResponse.html":{},"classes/TableParams.html":{}}}],["tab",{"_index":1030,"title":{},"body":{"components/MDIComponent.html":{},"injectables/RouterService.html":{}}}],["tabbed",{"_index":337,"title":{},"body":{"classes/BQConfigData.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"interfaces/MenuData.html":{},"injectables/NavigationService.html":{}}}],["tabbedmdiroutes",{"_index":18,"title":{},"body":{"injectables/AppInitService.html":{}}}],["tabbeduserinterface",{"_index":295,"title":{},"body":{"classes/BQConfigData.html":{},"classes/RunningConfigHelper.html":{}}}],["table",{"_index":178,"title":{"components/Table.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{},"miscellaneous/enumerations.html":{}}}],["table'},{'name",{"_index":200,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["table.html",{"_index":1242,"title":{},"body":{"components/Table.html":{}}}],["table.scss",{"_index":1241,"title":{},"body":{"components/Table.html":{}}}],["table.ts",{"_index":1224,"title":{},"body":{"interfaces/RowExpandedEventData.html":{},"components/Table.html":{},"miscellaneous/enumerations.html":{}}}],["table/bq",{"_index":765,"title":{},"body":{"components/CustomFilter.html":{},"interfaces/RowExpandedEventData.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"miscellaneous/enumerations.html":{}}}],["table>bq",{"_index":202,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["tablecolumn",{"_index":201,"title":{"components/TableColumn.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["tabledensity",{"_index":1273,"title":{},"body":{"components/Table.html":{},"miscellaneous/enumerations.html":{}}}],["tabledensity.normal",{"_index":1274,"title":{},"body":{"components/Table.html":{}}}],["tablefilter",{"_index":204,"title":{"components/TableFilter.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["tablefilters",{"_index":205,"title":{"components/TableFilters.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["tablelazyloadevent",{"_index":1305,"title":{},"body":{"components/Table.html":{}}}],["tablenavigate",{"_index":1217,"title":{},"body":{"injectables/RouterService.html":{}}}],["tablenavigate(queryparams",{"_index":1221,"title":{},"body":{"injectables/RouterService.html":{}}}],["tableparams",{"_index":548,"title":{"classes/TableParams.html":{}},"body":{"components/BaseListView.html":{},"injectables/GenericDataService.html":{},"components/Table.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{}}}],["tableparamssub",{"_index":1250,"title":{},"body":{"components/Table.html":{},"components/TableFilters.html":{}}}],["tabs",{"_index":341,"title":{},"body":{"classes/BQConfigData.html":{}}}],["target",{"_index":801,"title":{},"body":{"interfaces/CustomUserMenus.html":{},"components/TableFilters.html":{}}}],["template",{"_index":394,"title":{},"body":{"directives/BQTemplate.html":{},"directives/ControlContainerDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/Table.html":{},"components/TopMenuBar.html":{}}}],["template.directive.ts",{"_index":393,"title":{},"body":{"directives/BQTemplate.html":{}}}],["templateref",{"_index":138,"title":{},"body":{"components/AppLayout.html":{},"directives/BQTemplate.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/MDILayoutComponent.html":{},"components/Table.html":{},"components/TableColumn.html":{}}}],["templates",{"_index":90,"title":{},"body":{"components/AppLayout.html":{},"classes/BQConfigData.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/MDILayoutComponent.html":{}}}],["templateurl",{"_index":76,"title":{},"body":{"components/AppLayout.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/ViewWrapper.html":{}}}],["text",{"_index":169,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["tha",{"_index":1286,"title":{},"body":{"components/Table.html":{}}}],["timezone",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":29,"title":{},"body":{"injectables/AppInitService.html":{},"components/AppLayout.html":{},"components/Breadcrumb.html":{},"components/MenuBar.html":{},"injectables/MessageService.html":{},"interfaces/TopRightMenuData.html":{},"interfaces/ViewData.html":{}}}],["title/label",{"_index":1449,"title":{},"body":{"interfaces/ViewData.html":{}}}],["tmodel",{"_index":534,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{}}}],["todisplayvalue",{"_index":849,"title":{},"body":{"classes/FilterByClause.html":{}}}],["togglemenu",{"_index":1349,"title":{},"body":{"components/TableFilters.html":{},"components/TopBar.html":{}}}],["togglemenu(event",{"_index":1422,"title":{},"body":{"components/TopBar.html":{}}}],["togglesubmenu",{"_index":1072,"title":{},"body":{"components/MenuBar.html":{}}}],["togglesubmenu(event",{"_index":1076,"title":{},"body":{"components/MenuBar.html":{}}}],["top",{"_index":121,"title":{},"body":{"components/AppLayout.html":{},"classes/BQConfigData.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"interfaces/CustomUserMenus.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["top:35px",{"_index":1370,"title":{},"body":{"components/TableFilters.html":{}}}],["topbar",{"_index":207,"title":{"components/TopBar.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["topbarmenu",{"_index":1410,"title":{},"body":{"components/TopBar.html":{}}}],["topmenubar",{"_index":208,"title":{"components/TopMenuBar.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["toprightmenudata",{"_index":352,"title":{"interfaces/TopRightMenuData.html":{}},"body":{"classes/BQConfigData.html":{},"components/TopMenuBar.html":{},"interfaces/TopRightMenuData.html":{}}}],["toprightmenus",{"_index":296,"title":{},"body":{"classes/BQConfigData.html":{},"components/TopMenuBar.html":{}}}],["tostring",{"_index":850,"title":{},"body":{"classes/FilterByClause.html":{},"classes/LocaleId.html":{}}}],["tovalue",{"_index":782,"title":{},"body":{"components/CustomFilter.html":{},"classes/FilterByClause.html":{},"classes/PredefinedFilter.html":{}}}],["transform",{"_index":596,"title":{},"body":{"pipes/BoolToYesNoPipe.html":{},"pipes/ModelValuePipe.html":{},"pipes/PasswordPipe.html":{}}}],["transform(value",{"_index":597,"title":{},"body":{"pipes/BoolToYesNoPipe.html":{},"pipes/ModelValuePipe.html":{},"pipes/PasswordPipe.html":{}}}],["translate",{"_index":402,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/FooterBar.html":{},"injectables/LocaleService.html":{},"components/MenuBar.html":{},"components/TableFilters.html":{},"components/TopMenuBar.html":{}}}],["translate/core",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["translate/http",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["translateservice",{"_index":421,"title":{},"body":{"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"components/FooterBar.html":{},"injectables/LocaleService.html":{},"components/MenuBar.html":{},"components/TableFilters.html":{},"components/TopMenuBar.html":{}}}],["true",{"_index":128,"title":{},"body":{"components/AppLayout.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"directives/CompareDirective.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"interfaces/IEditFormViewEvents.html":{},"injectables/InternalLogService.html":{},"classes/LogEntry.html":{},"injectables/LogService.html":{},"components/MDILayoutComponent.html":{},"components/Table.html":{},"components/TableFilters.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":35,"title":{},"body":{"injectables/AppInitService.html":{},"classes/AppInjector.html":{},"components/AppLayout.html":{},"interfaces/ApplicationPathsType.html":{},"injectables/AuthorizeGuard.html":{},"interceptors/AuthorizeInterceptor.html":{},"injectables/AuthorizeService.html":{},"classes/BQConfigData.html":{},"modules/BQStartPrimeModule.html":{},"directives/BQTemplate.html":{},"components/BaseComponent.html":{},"classes/BaseEntity.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"pipes/BoolToYesNoPipe.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"directives/CompareDirective.html":{},"components/CustomFilter.html":{},"interfaces/CustomUserMenus.html":{},"classes/DataServiceOptions.html":{},"injectables/DialogService.html":{},"directives/DynamicHostDirective.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"interfaces/EnumItem.html":{},"interfaces/FailureAuthenticationResult.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseView.html":{},"interfaces/INavigationState.html":{},"interfaces/INavigationState-1.html":{},"interfaces/IUser.html":{},"injectables/InternalLogService.html":{},"classes/LocaleId.html":{},"injectables/LocaleService.html":{},"classes/LogConsole.html":{},"classes/LogEntry.html":{},"classes/LogLocalStorage.html":{},"classes/LogPublisher.html":{},"classes/LogPublisherConfig.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"classes/Message.html":{},"classes/MessageBusPayLoad.html":{},"injectables/MessageService.html":{},"injectables/MetaDataResolver.html":{},"injectables/MetaDataService.html":{},"classes/MetadataField.html":{},"classes/ModelMetadata.html":{},"pipes/ModelValuePipe.html":{},"injectables/NavigationService.html":{},"classes/OAuthConfig.html":{},"classes/ODataResponse.html":{},"classes/OrderByClause.html":{},"pipes/PasswordPipe.html":{},"classes/PredefinedFilter.html":{},"classes/Predicate.html":{},"classes/PrimaryKey.html":{},"interfaces/RedirectAuthenticationResult.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"interfaces/RowExpandedEventData.html":{},"classes/RunningConfigHelper.html":{},"classes/Subscription.html":{},"interfaces/SuccessAuthenticationResult.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/TopRightMenuData.html":{},"classes/TypeSystem.html":{},"interfaces/ValidationData.html":{},"interfaces/ViewData.html":{},"classes/ViewOptionalData.html":{},"classes/ViewRunningData.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type_system",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1583,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typename",{"_index":1094,"title":{},"body":{"classes/MessageBusPayLoad.html":{},"injectables/MetaDataService.html":{},"classes/ModelMetadata.html":{},"interfaces/ViewData.html":{}}}],["types",{"_index":1529,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typesystem",{"_index":1141,"title":{"classes/TypeSystem.html":{}},"body":{"classes/MetadataField.html":{},"classes/TypeSystem.html":{}}}],["typesystem('boolean",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typesystem('byte",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typesystem('char",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typesystem('datetime",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typesystem('decimal",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typesystem('double",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typesystem('enum",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typesystem('guid",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typesystem('int32",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typesystem('int64",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typesystem('sbyte",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typesystem('single",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typesystem('string",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typesystem('uint32",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typesystem('uint64",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typically",{"_index":908,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"classes/OAuthConfig.html":{},"components/Table.html":{}}}],["ui",{"_index":1096,"title":{},"body":{"injectables/MessageService.html":{}}}],["uint32",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uint64",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unbinddocumentclicklistener",{"_index":1350,"title":{},"body":{"components/TableFilters.html":{}}}],["unbindoutsideclicklistener",{"_index":1415,"title":{},"body":{"components/TopBar.html":{}}}],["unchanged",{"_index":1542,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":303,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"directives/CompareDirective.html":{},"components/Table.html":{}}}],["under",{"_index":357,"title":{},"body":{"classes/BQConfigData.html":{},"interfaces/CustomUserMenus.html":{}}}],["undo",{"_index":536,"title":{},"body":{"components/BaseFormView.html":{}}}],["unique",{"_index":1451,"title":{},"body":{"interfaces/ViewData.html":{}}}],["unset",{"_index":1313,"title":{},"body":{"components/Table.html":{},"components/TableFilters.html":{}}}],["unsubscribetochannel",{"_index":1101,"title":{},"body":{"injectables/MessageService.html":{}}}],["unsubscribetochannel(channelname",{"_index":1109,"title":{},"body":{"injectables/MessageService.html":{}}}],["up",{"_index":13,"title":{},"body":{"injectables/AppInitService.html":{},"classes/BQConfigData.html":{}}}],["updated",{"_index":1534,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["updating",{"_index":555,"title":{},"body":{"components/BaseListView.html":{}}}],["ur",{"_index":1281,"title":{},"body":{"components/Table.html":{}}}],["url",{"_index":279,"title":{},"body":{"injectables/AuthorizeService.html":{},"classes/BQConfigData.html":{},"interfaces/CustomUserMenus.html":{},"classes/ModelMetadata.html":{},"classes/OAuthConfig.html":{},"injectables/RouterService.html":{}}}],["urls",{"_index":329,"title":{},"body":{"classes/BQConfigData.html":{}}}],["usd",{"_index":703,"title":{},"body":{"components/BqTextField.html":{}}}],["use",{"_index":343,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseListView.html":{},"components/Table.html":{},"components/TableFilter.html":{},"index.html":{}}}],["useclass",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":307,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"miscellaneous/variables.html":{}}}],["useexisting",{"_index":738,"title":{},"body":{"directives/CompareDirective.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":638,"title":{},"body":{"components/BqForm.html":{},"components/FormBlock.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":348,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseListView.html":{}}}],["user",{"_index":338,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseComponent.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"interfaces/CustomUserMenus.html":{},"components/FooterBar.html":{},"components/MenuBar.html":{},"components/TopMenuBar.html":{}}}],["usermenus",{"_index":297,"title":{},"body":{"classes/BQConfigData.html":{},"components/TopMenuBar.html":{}}}],["username",{"_index":1025,"title":{},"body":{"components/LoginMenuComponent.html":{}}}],["users",{"_index":355,"title":{},"body":{"classes/BQConfigData.html":{}}}],["using",{"_index":871,"title":{},"body":{"injectables/GenericDataService.html":{},"injectables/MessageService.html":{},"components/Table.html":{}}}],["uuid",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["val",{"_index":1570,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valid",{"_index":772,"title":{},"body":{"components/CustomFilter.html":{}}}],["validate",{"_index":740,"title":{},"body":{"directives/CompareDirective.html":{}}}],["validate(c",{"_index":741,"title":{},"body":{"directives/CompareDirective.html":{}}}],["validationdata",{"_index":1147,"title":{"interfaces/ValidationData.html":{}},"body":{"classes/MetadataField.html":{},"interfaces/ValidationData.html":{}}}],["validationerrors",{"_index":744,"title":{},"body":{"directives/CompareDirective.html":{}}}],["validations",{"_index":1142,"title":{},"body":{"classes/MetadataField.html":{}}}],["validationtype",{"_index":1444,"title":{},"body":{"interfaces/ValidationData.html":{},"miscellaneous/enumerations.html":{}}}],["validator",{"_index":736,"title":{},"body":{"directives/CompareDirective.html":{},"dependencies.html":{}}}],["value",{"_index":117,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"pipes/BoolToYesNoPipe.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"components/CustomFilter.html":{},"injectables/DialogService.html":{},"classes/FilterByClause.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/InternalLogService.html":{},"injectables/LocaleService.html":{},"classes/LogEntry.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/LogoutComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"injectables/MetaDataService.html":{},"pipes/ModelValuePipe.html":{},"injectables/NavigationService.html":{},"pipes/PasswordPipe.html":{},"classes/PredefinedFilter.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"classes/RunningConfigHelper.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopMenuBar.html":{},"classes/TypeSystem.html":{},"injectables/ViewWrapperService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.pipe.ts",{"_index":1164,"title":{},"body":{"pipes/ModelValuePipe.html":{}}}],["valuename",{"_index":618,"title":{},"body":{"components/BqDropdownField.html":{},"components/TableFilter.html":{}}}],["valueof",{"_index":962,"title":{},"body":{"classes/LocaleId.html":{}}}],["values",{"_index":571,"title":{},"body":{"components/BaseListView.html":{},"classes/ModelMetadata.html":{},"components/TableFilter.html":{}}}],["valuetoupdated",{"_index":785,"title":{},"body":{"components/CustomFilter.html":{}}}],["valuetoupdated(newval",{"_index":795,"title":{},"body":{"components/CustomFilter.html":{}}}],["valueupdated",{"_index":786,"title":{},"body":{"components/CustomFilter.html":{}}}],["valueupdated(newval",{"_index":796,"title":{},"body":{"components/CustomFilter.html":{}}}],["var",{"_index":152,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["variables",{"_index":1586,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":899,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"classes/RunningConfigHelper.html":{}}}],["veiw",{"_index":911,"title":{},"body":{"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{}}}],["version",{"_index":1581,"title":{},"body":{"properties.html":{}}}],["vertically",{"_index":122,"title":{},"body":{"components/AppLayout.html":{}}}],["via",{"_index":560,"title":{},"body":{"components/BaseListView.html":{}}}],["view",{"_index":210,"title":{},"body":{"components/AppLayout.html":{},"classes/BQConfigData.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"interfaces/MenuData.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"interfaces/ViewData.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{},"miscellaneous/enumerations.html":{}}}],["view.ts",{"_index":490,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IBaseView.html":{},"interfaces/IEditFormViewEvents.html":{},"miscellaneous/functions.html":{}}}],["viewchild('booleandisplayrender",{"_index":704,"title":{},"body":{"components/BqTextField.html":{}}}],["viewchild('boolrender",{"_index":705,"title":{},"body":{"components/BqTextField.html":{}}}],["viewchild('daterender",{"_index":706,"title":{},"body":{"components/BqTextField.html":{}}}],["viewchild('defaultdaterender",{"_index":707,"title":{},"body":{"components/BqTextField.html":{}}}],["viewchild('defaultfootertemplate",{"_index":140,"title":{},"body":{"components/AppLayout.html":{},"components/MDILayoutComponent.html":{}}}],["viewchild('defaultitemrender",{"_index":619,"title":{},"body":{"components/BqDropdownField.html":{}}}],["viewchild('defaultrender",{"_index":620,"title":{},"body":{"components/BqDropdownField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["viewchild('displaypasswordrender",{"_index":667,"title":{},"body":{"components/BqPasswordField.html":{}}}],["viewchild('editenumrender",{"_index":621,"title":{},"body":{"components/BqDropdownField.html":{}}}],["viewchild('editrender",{"_index":622,"title":{},"body":{"components/BqDropdownField.html":{}}}],["viewchild('emailrender",{"_index":708,"title":{},"body":{"components/BqTextField.html":{}}}],["viewchild('integerrender",{"_index":709,"title":{},"body":{"components/BqTextField.html":{}}}],["viewchild('internaltable",{"_index":1311,"title":{},"body":{"components/Table.html":{}}}],["viewchild('numberrender",{"_index":711,"title":{},"body":{"components/BqTextField.html":{}}}],["viewchild('passwordrender",{"_index":668,"title":{},"body":{"components/BqPasswordField.html":{}}}],["viewchild('stringrender",{"_index":686,"title":{},"body":{"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["viewchild('topbarmenu",{"_index":1423,"title":{},"body":{"components/TopBar.html":{}}}],["viewchild(bqform",{"_index":540,"title":{},"body":{"components/BaseFormView.html":{}}}],["viewchild(dynamichostdirective",{"_index":839,"title":{},"body":{"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{}}}],["viewchild(ngform",{"_index":654,"title":{},"body":{"components/BqForm.html":{}}}],["viewcontainerref",{"_index":831,"title":{},"body":{"directives/DynamicHostDirective.html":{}}}],["viewdata",{"_index":367,"title":{"interfaces/ViewData.html":{}},"body":{"classes/BQConfigData.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"classes/RunningConfigHelper.html":{},"interfaces/ViewData.html":{},"classes/ViewRunningData.html":{}}}],["viewdef",{"_index":510,"title":{},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/Breadcrumb.html":{},"classes/RouteData.html":{},"injectables/RouterService.html":{},"classes/ViewRunningData.html":{}}}],["viewdefaults",{"_index":298,"title":{},"body":{"classes/BQConfigData.html":{},"classes/RunningConfigHelper.html":{}}}],["viewid",{"_index":1061,"title":{},"body":{"injectables/MainRegionAdapterService.html":{},"interfaces/MenuData.html":{},"injectables/RouterService.html":{},"classes/RunningConfigHelper.html":{},"interfaces/ViewData.html":{}}}],["viewoptionaldata",{"_index":526,"title":{"classes/ViewOptionalData.html":{}},"body":{"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/ViewOptionalData.html":{}}}],["viewroutes",{"_index":1230,"title":{},"body":{"classes/RunningConfigHelper.html":{}}}],["viewrunningdata",{"_index":840,"title":{"classes/ViewRunningData.html":{}},"body":{"components/DynamicMDILoaderComponent.html":{},"injectables/MainRegionAdapterService.html":{},"classes/ViewRunningData.html":{}}}],["views",{"_index":299,"title":{},"body":{"classes/BQConfigData.html":{},"components/BaseListView.html":{},"components/MDILayoutComponent.html":{},"injectables/NavigationService.html":{},"injectables/RouterService.html":{},"classes/RunningConfigHelper.html":{}}}],["viewsbyid",{"_index":1231,"title":{},"body":{"classes/RunningConfigHelper.html":{}}}],["viewtype",{"_index":1060,"title":{},"body":{"injectables/MainRegionAdapterService.html":{},"injectables/RouterService.html":{},"interfaces/ViewData.html":{},"miscellaneous/enumerations.html":{}}}],["viewwrapper",{"_index":209,"title":{"components/ViewWrapper.html":{}},"body":{"components/AppLayout.html":{},"modules/BQStartPrimeModule.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["viewwrapperservice",{"_index":386,"title":{"injectables/ViewWrapperService.html":{}},"body":{"modules/BQStartPrimeModule.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{}}}],["visibility",{"_index":1372,"title":{},"body":{"components/TableFilters.html":{}}}],["visible",{"_index":1375,"title":{},"body":{"components/TableFilters.html":{}}}],["visit",{"_index":1575,"title":{},"body":{"index.html":{}}}],["visual",{"_index":1546,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["void",{"_index":51,"title":{},"body":{"classes/AppInjector.html":{},"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"classes/BaseMenu.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"classes/Channel.html":{},"components/CustomFilter.html":{},"injectables/DialogService.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"injectables/GenericDataService.html":{},"interfaces/IBaseEvents.html":{},"interfaces/IBaseFormViewEvents.html":{},"interfaces/IBaseListViewEvents.html":{},"interfaces/IBaseView.html":{},"injectables/InternalLogService.html":{},"injectables/LocaleService.html":{},"injectables/LogPublishersService.html":{},"injectables/LogService.html":{},"components/LoginMenuComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"injectables/MainRegionAdapterService.html":{},"components/MenuBar.html":{},"injectables/MessageService.html":{},"injectables/NavigationService.html":{},"injectables/RouterService.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"classes/TableParams.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{}}}],["vwservice",{"_index":511,"title":{},"body":{"components/BaseFormView.html":{},"components/BqForm.html":{},"components/ViewWrapper.html":{}}}],["vwsvc",{"_index":461,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{}}}],["want",{"_index":1000,"title":{},"body":{"classes/LogPublisher.html":{},"components/Table.html":{}}}],["warn",{"_index":941,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["warn(msg",{"_index":957,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["warning",{"_index":958,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{},"injectables/MessageService.html":{}}}],["whether",{"_index":531,"title":{},"body":{"components/BaseFormView.html":{},"components/Table.html":{}}}],["width",{"_index":150,"title":{},"body":{"components/AppLayout.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/FooterBar.html":{},"components/Table.html":{},"components/TableFilters.html":{}}}],["window",{"_index":1220,"title":{},"body":{"injectables/RouterService.html":{}}}],["within",{"_index":1044,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["wpf",{"_index":1050,"title":{},"body":{"injectables/MainRegionAdapterService.html":{}}}],["wrapper",{"_index":211,"title":{},"body":{"components/AppLayout.html":{},"components/BaseComponent.html":{},"components/BaseField.html":{},"components/BaseFormView.html":{},"components/BaseListView.html":{},"components/BqDropdownField.html":{},"components/BqForm.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"components/Breadcrumb.html":{},"components/CustomFilter.html":{},"components/DynamicLoaderComponent.html":{},"components/DynamicMDILoaderComponent.html":{},"components/FooterBar.html":{},"components/FormBlock.html":{},"components/LoginComponent.html":{},"components/LoginMenuComponent.html":{},"components/LogoutComponent.html":{},"components/MDIComponent.html":{},"components/MDILayoutComponent.html":{},"components/MenuBar.html":{},"injectables/NavigationService.html":{},"injectables/RouterService.html":{},"components/Table.html":{},"components/TableColumn.html":{},"components/TableFilter.html":{},"components/TableFilters.html":{},"components/TopBar.html":{},"components/TopMenuBar.html":{},"components/ViewWrapper.html":{}}}],["wrapper.html",{"_index":1457,"title":{},"body":{"components/ViewWrapper.html":{}}}],["wrapper.scss",{"_index":1456,"title":{},"body":{"components/ViewWrapper.html":{}}}],["wrapper.service.ts",{"_index":1459,"title":{},"body":{"injectables/ViewWrapperService.html":{}}}],["wrapper.ts",{"_index":1455,"title":{},"body":{"components/ViewWrapper.html":{}}}],["wrapper/view",{"_index":1454,"title":{},"body":{"components/ViewWrapper.html":{},"injectables/ViewWrapperService.html":{}}}],["write",{"_index":1013,"title":{},"body":{"injectables/LogService.html":{}}}],["writetolog",{"_index":935,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["writetolog(msg",{"_index":944,"title":{},"body":{"injectables/InternalLogService.html":{},"injectables/LogService.html":{}}}],["year",{"_index":860,"title":{},"body":{"components/FooterBar.html":{}}}],["yes",{"_index":462,"title":{},"body":{"components/BaseField.html":{},"components/BqDropdownField.html":{},"components/BqPasswordField.html":{},"components/BqTextArea.html":{},"components/BqTextField.html":{},"injectables/DialogService.html":{},"pipes/PasswordPipe.html":{},"injectables/RouterService.html":{},"components/Table.html":{}}}],["z",{"_index":1368,"title":{},"body":{"components/TableFilters.html":{}}}],["zone",{"_index":1355,"title":{},"body":{"components/TableFilters.html":{}}}],["zone.js",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AppInitService.html":{"url":"injectables/AppInitService.html","title":"injectable - AppInitService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppInitService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/app-init.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Bootstraper Service for setting up the bqStart application\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabbedMDIRoutes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config\n                                \n                                \n                                    runningConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, router: Router, pageTitle: Title, logSvc: LogPublishersService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pageTitle\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logSvc\n                                                  \n                                                        \n                                                                        LogPublishersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Init\n                        \n                    \n                \n            \n            \n                \nInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tabbedMDIRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        runningConfig\n                    \n                \n\n                \n                    \n                        getrunningConfig()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppInjector.html":{"url":"classes/AppInjector.html","title":"class - AppInjector","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppInjector\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/app-injector.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Dynamic Service Injector\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getInjector\n                            \n                            \n                                    Static\n                                setInjector\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getInjector\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInjector()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Injector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        setInjector\n                        \n                    \n                \n            \n            \n                \n                    \n                    setInjector(injector: Injector)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    injector\n                                    \n                                            Injector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppLayout.html":{"url":"components/AppLayout.html","title":"component - AppLayout","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppLayout\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/layout/app-layout/app-layout.ts\n\n\n\n    \n        Description\n    \n    \n        Main layout Component which is responsible for showing Menu bar footer etc\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-app-layout\n            \n\n\n\n            \n                styleUrls\n                ./app-layout.scss\n            \n\n\n\n            \n                templateUrl\n                ./app-layout.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                controlFooterTemplate\n                            \n                            \n                                customFooterTemplate\n                            \n                            \n                                    \n                                defaultFooterTemplate\n                            \n                            \n                                dialogHeader\n                            \n                            \n                                dialogMsg\n                            \n                            \n                                dialogService\n                            \n                            \n                                dialogVisible\n                            \n                            \n                                injector\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                menuActive\n                            \n                            \n                                optionalTemplates\n                            \n                            \n                                shortcutsInternal\n                            \n                            \n                                showLeftMenu\n                            \n                            \n                                    \n                                templates\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClass\n                            \n                            \n                                handleTopMenuClick\n                            \n                            \n                                hideMenu\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onMaskClick\n                            \n                            \n                                onMenuButtonClick\n                            \n                            \n                                removeClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                shortcuts\n                            \n                            \n                                showMenuOnTop\n                            \n                            \n                                stickyFooter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTopRightMenuClicked\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    shortcuts\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(primengConfig: PrimeNGConfig, authorizeService: AuthorizeService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        primengConfig\n                                                  \n                                                        \n                                                                    PrimeNGConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizeService\n                                                  \n                                                        \n                                                                        AuthorizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        shortcuts\n                    \n                \n                \n                    \n                        Type :     ShortcutInput[]\n\n                    \n                \n                \n                    \n                        This is the list of shortcut keyboard hooks to patch to the module\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showMenuOnTop\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        If the Menu bar will be shown horizontally on top or vertically of left sidebar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        stickyFooter\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Display the footer always on bottom if true.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTopRightMenuClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClass\n                        \n                    \n                \n            \n            \n                \naddClass(element: any, className: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleTopMenuClick\n                        \n                    \n                \n            \n            \n                \nhandleTopMenuClick(ev: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideMenu\n                        \n                    \n                \n            \n            \n                \nhideMenu()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMaskClick\n                        \n                    \n                \n            \n            \n                \nonMaskClick()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMenuButtonClick\n                        \n                    \n                \n            \n            \n                \nonMenuButtonClick()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeClass\n                        \n                    \n                \n            \n            \n                \nremoveClass(element: any, className: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BQConfigData\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        controlFooterTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customFooterTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        defaultFooterTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('defaultFooterTemplate', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogHeader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalTemplates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dictionary>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortcutsInternal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ShortcutInput[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLeftMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        templates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(BQTemplate)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'app'\n                    \n                \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        shortcuts\n                    \n                \n\n                \n                    \n                        getshortcuts()\n                    \n                \n\n                \n                    \n                        setshortcuts(value: ShortcutInput[])\n                    \n                \n                    \n                        \n                                This is the list of shortcut keyboard hooks to patch to the module\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        ShortcutInput[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n\n\n    \n                \n                    ./app-layout.scss\n                \n                .stick-footer{\n  position: fixed;\n  bottom: 0px;\n  width: 100%;\n}\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                             {{dialogMsg}}                  '\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppLayout'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationPathsType.html":{"url":"interfaces/ApplicationPathsType.html","title":"interface - ApplicationPathsType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApplicationPathsType\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/api-authorization/api-authorization.constants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ApiAuthorizationClientConfigurationUrl\n                                        \n                                \n                                \n                                        \n                                            DefaultLoginRedirectPath\n                                        \n                                \n                                \n                                        \n                                            IdentityManagePath\n                                        \n                                \n                                \n                                        \n                                            IdentityRegisterPath\n                                        \n                                \n                                \n                                        \n                                            LoggedOut\n                                        \n                                \n                                \n                                        \n                                            LoggedOutPathComponents\n                                        \n                                \n                                \n                                        \n                                            Login\n                                        \n                                \n                                \n                                        \n                                            LoginCallback\n                                        \n                                \n                                \n                                        \n                                            LoginCallbackPathComponents\n                                        \n                                \n                                \n                                        \n                                            LoginFailed\n                                        \n                                \n                                \n                                        \n                                            LoginFailedPathComponents\n                                        \n                                \n                                \n                                        \n                                            LoginPathComponents\n                                        \n                                \n                                \n                                        \n                                            LogOut\n                                        \n                                \n                                \n                                        \n                                            LogOutCallback\n                                        \n                                \n                                \n                                        \n                                            LogOutCallbackPathComponents\n                                        \n                                \n                                \n                                        \n                                            LogOutPathComponents\n                                        \n                                \n                                \n                                        \n                                            Profile\n                                        \n                                \n                                \n                                        \n                                            ProfilePathComponents\n                                        \n                                \n                                \n                                        \n                                            Register\n                                        \n                                \n                                \n                                        \n                                            RegisterPathComponents\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ApiAuthorizationClientConfigurationUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ApiAuthorizationClientConfigurationUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DefaultLoginRedirectPath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DefaultLoginRedirectPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IdentityManagePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        IdentityManagePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IdentityRegisterPath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        IdentityRegisterPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoggedOut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoggedOut:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoggedOutPathComponents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoggedOutPathComponents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoginCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoginCallback:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoginCallbackPathComponents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoginCallbackPathComponents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoginFailed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoginFailed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoginFailedPathComponents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoginFailedPathComponents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LoginPathComponents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LoginPathComponents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LogOut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LogOut:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LogOutCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LogOutCallback:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LogOutCallbackPathComponents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LogOutCallbackPathComponents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LogOutPathComponents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LogOutPathComponents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Profile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Profile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ProfilePathComponents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ProfilePathComponents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Register\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Register:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        RegisterPathComponents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        RegisterPathComponents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizeGuard.html":{"url":"injectables/AuthorizeGuard.html","title":"injectable - AuthorizeGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizeGuard\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/api-authorization/authorize.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authorize: AuthorizeService, router: Router)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorize\n                                                  \n                                                        \n                                                                        AuthorizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(_next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _next\n                                    \n                                            ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                            RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthorizeInterceptor.html":{"url":"interceptors/AuthorizeInterceptor.html","title":"interceptor - AuthorizeInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthorizeInterceptor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/api-authorization/authorize.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authorize: AuthorizeService, config: BQConfigData)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorize\n                                                  \n                                                        \n                                                                        AuthorizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        BQConfigData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizeService.html":{"url":"injectables/AuthorizeService.html","title":"injectable - AuthorizeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizeService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/api-authorization/authorize.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                completeSignIn\n                            \n                            \n                                    Public\n                                    Async\n                                completeSignOut\n                            \n                            \n                                    Public\n                                getAccessToken\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                    Async\n                                signIn\n                            \n                            \n                                    Public\n                                    Async\n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        completeSignIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    completeSignIn(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        completeSignOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    completeSignOut(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessToken()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuthenticated()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(state: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        signOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    signOut(state: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BQConfigData.html":{"url":"classes/BQConfigData.html","title":"class - BQConfigData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BQConfigData\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/config/bq-start-config.ts\n        \n\n\n            \n                Description\n            \n            \n                The startup class which will hold all the configuration details for\nthis Application\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                apiRootUrl\n                            \n                            \n                                applicationName\n                            \n                            \n                                companyName\n                            \n                            \n                                logoUrl\n                            \n                            \n                                menus\n                            \n                            \n                                    Optional\n                                oAuthConfig\n                            \n                            \n                                tabbedUserInterface\n                            \n                            \n                                    Optional\n                                topRightMenus\n                            \n                            \n                                    Optional\n                                userMenus\n                            \n                            \n                                    Optional\n                                viewDefaults\n                            \n                            \n                                views\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        apiRootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Root API URL for the backend. If undefined then current base url is assumed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applicationName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    The name of the application\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Company Name used in Footer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Logo URL of the App to display in Header\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuData[]\n\n                    \n                \n\n            \n                \n                    Menus to Display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        oAuthConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OAuthConfig\n\n                    \n                \n\n            \n                \n                    Specify OAuth Configuration Details Here. For SPA templates where BQStart backend is running on the same location\ndo not need to set anything up as details can be found out from the server. If your STS server is running somewhere else\nor the app is running in a Deskto Electron environment you can specify the Server Urls here.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabbedUserInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n            \n                \n                    this option allows you to switch between router based or Multi Document Tabbed user interface in the main\nview area. With tabbed interface any view will be open as tabs inside the main view and will not use angular router\nlinks for navigation. Mainly useful for desktop/electron apps or enterprise apps.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        topRightMenus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TopRightMenuData[]\n\n                    \n                \n\n            \n                \n                    Display optional buttons on top right header menu bar next to Users menu\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        userMenus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomUserMenus[]\n\n                    \n                \n\n            \n                \n                    Display optional user menus under Top Right User icon instead of default menus\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        viewDefaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n            \n                \n                    Default View Data like page size\ndefaultPageSize: number,\notherPageSizes: number[]  }}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        views\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewData[]\n\n                    \n                \n\n            \n                \n                    List of Views the application will have\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BQStartPrimeModule.html":{"url":"modules/BQStartPrimeModule.html","title":"module - BQStartPrimeModule","body":"\n                   \n\n\n\n\n    Modules\n    BQStartPrimeModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/bq-start-prime.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n             Main Entry point Module for bqStart\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppLayout\n                        \n                        \n                            BQTemplate\n                        \n                        \n                            BaseComponent\n                        \n                        \n                            BaseFormView\n                        \n                        \n                            BaseListView\n                        \n                        \n                            BoolToYesNoPipe\n                        \n                        \n                            BqDropdownField\n                        \n                        \n                            BqForm\n                        \n                        \n                            BqPasswordField\n                        \n                        \n                            BqTextArea\n                        \n                        \n                            BqTextField\n                        \n                        \n                            Breadcrumb\n                        \n                        \n                            ChipsMenu\n                        \n                        \n                            CompareDirective\n                        \n                        \n                            ControlContainerDirective\n                        \n                        \n                            CustomFilter\n                        \n                        \n                            DynamicHostDirective\n                        \n                        \n                            DynamicLoaderComponent\n                        \n                        \n                            DynamicMDILoaderComponent\n                        \n                        \n                            FooterBar\n                        \n                        \n                            FormBlock\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LoginMenuComponent\n                        \n                        \n                            LogoutComponent\n                        \n                        \n                            MDIComponent\n                        \n                        \n                            MDILayoutComponent\n                        \n                        \n                            MenuBar\n                        \n                        \n                            ModelValuePipe\n                        \n                        \n                            PasswordPipe\n                        \n                        \n                            Table\n                        \n                        \n                            TableColumn\n                        \n                        \n                            TableFilter\n                        \n                        \n                            TableFilters\n                        \n                        \n                            TopBar\n                        \n                        \n                            TopMenuBar\n                        \n                        \n                            ViewWrapper\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AppInitService\n                        \n                        \n                            AuthorizeService\n                        \n                        \n                            DialogService\n                        \n                        \n                            LocaleService\n                        \n                        \n                            LogPublishersService\n                        \n                        \n                            LogService\n                        \n                        \n                            MainRegionAdapterService\n                        \n                        \n                            MessageService\n                        \n                        \n                            MetaDataService\n                        \n                        \n                            NavigationService\n                        \n                        \n                            RouterService\n                        \n                        \n                            ViewWrapperService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppLayout\n                        \n                        \n                            BQTemplate\n                        \n                        \n                            BaseFormView\n                        \n                        \n                            BaseListView\n                        \n                        \n                            BoolToYesNoPipe\n                        \n                        \n                            BqDropdownField\n                        \n                        \n                            BqForm\n                        \n                        \n                            BqPasswordField\n                        \n                        \n                            BqTextArea\n                        \n                        \n                            BqTextField\n                        \n                        \n                            Breadcrumb\n                        \n                        \n                            CompareDirective\n                        \n                        \n                            DynamicHostDirective\n                        \n                        \n                            DynamicLoaderComponent\n                        \n                        \n                            DynamicMDILoaderComponent\n                        \n                        \n                            FooterBar\n                        \n                        \n                            FormBlock\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            LoginMenuComponent\n                        \n                        \n                            LogoutComponent\n                        \n                        \n                            MDIComponent\n                        \n                        \n                            MDILayoutComponent\n                        \n                        \n                            MDILayoutComponent\n                        \n                        \n                            ModelValuePipe\n                        \n                        \n                            PasswordPipe\n                        \n                        \n                            Table\n                        \n                        \n                            TableColumn\n                        \n                        \n                            TableFilter\n                        \n                        \n                            TopBar\n                        \n                        \n                            TopMenuBar\n                        \n                        \n                            ViewWrapper\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: BQConfigData)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                BQConfigData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/BQTemplate.html":{"url":"directives/BQTemplate.html","title":"directive - BQTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  BQTemplate\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/ui/core/bq-template.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [bqTemplate]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bqTemplate\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        bqTemplate\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getType\n                        \n                    \n                \n            \n            \n                \ngetType()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n\n\n        \n    \n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseComponent.html":{"url":"components/BaseComponent.html","title":"component - BaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BaseComponent\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/base.component.ts\n\n\n\n\n\n\n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appInitService\n                            \n                            \n                                authorizeService\n                            \n                            \n                                config\n                            \n                            \n                                dialogService\n                            \n                            \n                                injector\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoading\n                            \n                            \n                                localeService\n                            \n                            \n                                logger\n                            \n                            \n                                messageSvc\n                            \n                            \n                                navigationService\n                            \n                            \n                                runTimeId\n                            \n                            \n                                translate\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                errHandler\n                            \n                            \n                                i18\n                            \n                            \n                                isInRole\n                            \n                            \n                                showError\n                            \n                            \n                                showInfo\n                            \n                            \n                                showSuccess\n                            \n                            \n                                showWarning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        errHandler\n                        \n                    \n                \n            \n            \n                \nerrHandler(error: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        i18\n                        \n                    \n                \n            \n            \n                \ni18(key: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInRole\n                        \n                    \n                \n            \n            \n                \nisInRole(role: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInfo\n                        \n                    \n                \n            \n            \n                \nshowInfo(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showWarning\n                        \n                    \n                \n            \n            \n                \nshowWarning(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appInitService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppInitService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authorizeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorizeService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BQConfigData\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Injector\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocaleService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NavigationService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runTimeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser | null\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'BaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/base-model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CreatedBy\n                            \n                            \n                                CreatedOn\n                            \n                            \n                                Id\n                            \n                            \n                                ModifiedBy\n                            \n                            \n                                ModifiedOn\n                            \n                            \n                                RecordState\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CreatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreatedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ModifiedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ModifiedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RecordState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RecordState\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseField.html":{"url":"components/BaseField.html","title":"component - BaseField","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BaseField\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/core/base-field.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-form > base-field\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _model\n                            \n                            \n                                controlRenderTemplate\n                            \n                            \n                                dateModel\n                            \n                            \n                                editMode\n                            \n                            \n                                fieldCss\n                            \n                            \n                                innerDivVAlign\n                            \n                            \n                                labelCss\n                            \n                            \n                                mainCss\n                            \n                            \n                                    Readonly\n                                model$\n                            \n                            \n                                optionalDisplayTemplate\n                            \n                            \n                                optionalEditTemplate\n                            \n                            \n                                optionalTemplates\n                            \n                            \n                                parent\n                            \n                            \n                                    \n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                initializeRender\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                caption\n                            \n                            \n                                disabled\n                            \n                            \n                                field\n                            \n                            \n                                fieldSize\n                            \n                            \n                                id\n                            \n                            \n                                isRequired\n                            \n                            \n                                labelSize\n                            \n                            \n                                model\n                            \n                            \n                                name\n                            \n                            \n                                readonly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(vwSvc: ViewWrapperService, formBlock?: FormBlock)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vwSvc\n                                                  \n                                                        \n                                                                        ViewWrapperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBlock\n                                                  \n                                                        \n                                                                        FormBlock\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        caption\n                    \n                \n                \n                    \n                        Type :     string | null | undefined\n\n                    \n                \n                \n                    \n                        Caption to display. If Metadata field is set then caption will be used from that.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        show the input field but in readonly form. Similar to @member readonly but renders the input fields\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         MetadataField\n\n                    \n                \n                \n                    \n                        The meta data field to get the details from\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        the field block size in column\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        id of the field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        if the value is required in edit mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        the column block size for the display label for this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        the model binding property\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        name of the field to be used when inside a form\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        if true then in edit more it will still display value instead of showing the input field\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        when the model value changes this will be fired\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Abstract\n                        initializeRender\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeRender()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(newVal: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newVal\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        controlRenderTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldCss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        innerDivVAlign\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelCss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainCss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        model$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalDisplayTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef | null | undefined\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalEditTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef | null | undefined\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalTemplates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dictionary>\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseFormView | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        templates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(BQTemplate)\n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                    \n                        \n                                the model binding property\n\n\n                                \n                                \n                                \n                                    Returns :         any\n\n                                \n                        \n                    \n\n                \n                    \n                        setmodel(value: any)\n                    \n                \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'BaseField'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseFormView.html":{"url":"components/BaseFormView.html","title":"component - BaseFormView","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BaseFormView\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/core/base-form-view.ts\n\n\n\n    \n        Description\n    \n    \n        This is the base class to implement a form view\n\n    \n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n                AfterContentInit\n                    IBaseView\n    \n\n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowDelete\n                            \n                            \n                                allowDetails\n                            \n                            \n                                allowEdit\n                            \n                            \n                                allowNew\n                            \n                            \n                                autoLoadLookupData\n                            \n                            \n                                    \n                                bqForm\n                            \n                            \n                                currentId\n                            \n                            \n                                    Protected\n                                dataSvc\n                            \n                            \n                                formType\n                            \n                            \n                                formViewId\n                            \n                            \n                                    Protected\n                                keyboardSubscription\n                            \n                            \n                                keyboardSvc\n                            \n                            \n                                lookupDataModel\n                            \n                            \n                                metaData\n                            \n                            \n                                model\n                            \n                            \n                                    Protected\n                                msgSubscription\n                            \n                            \n                                viewDef\n                            \n                            \n                                vwService\n                            \n                            \n                                appInitService\n                            \n                            \n                                authorizeService\n                            \n                            \n                                config\n                            \n                            \n                                dialogService\n                            \n                            \n                                injector\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoading\n                            \n                            \n                                localeService\n                            \n                            \n                                logger\n                            \n                            \n                                messageSvc\n                            \n                            \n                                navigationService\n                            \n                            \n                                runTimeId\n                            \n                            \n                                translate\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canClose\n                            \n                            \n                                canOpen\n                            \n                            \n                                createEmptyModel\n                            \n                            \n                                delete\n                            \n                            \n                                discard\n                            \n                            \n                                getKeyValue\n                            \n                            \n                                gotoDetails\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                prepareLoadServerData\n                            \n                            \n                                refresh\n                            \n                            \n                                save\n                            \n                            \n                                errHandler\n                            \n                            \n                                i18\n                            \n                            \n                                isInRole\n                            \n                            \n                                showError\n                            \n                            \n                                showInfo\n                            \n                            \n                                showSuccess\n                            \n                            \n                                showWarning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(routerSvc: RouterService, optionalData: ViewOptionalData)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routerSvc\n                                                  \n                                                        \n                                                                        RouterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        optionalData\n                                                  \n                                                        \n                                                                        ViewOptionalData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canClose\n                        \n                    \n                \n            \n            \n                \ncanClose()\n                \n            \n\n\n\n\n            \n                \n                    Controls if a form can be closed in MDI view\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        {boolean}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canOpen\n                        \n                    \n                \n            \n            \n                \ncanOpen(key: any)\n                \n            \n\n\n\n\n            \n                \n                    Controls whether a new instance of this form can be open in MDI view\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        {boolean}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createEmptyModel\n                        \n                    \n                \n            \n            \n                \ncreateEmptyModel()\n                \n            \n\n\n\n\n            \n                \n                    Get a new Empty Model for NEW form mode\n\n\n                    \n                    \n                    \n                        Returns :     TModel\n\n                    \n                    \n                        {TModel}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n\n\n            \n                \n                    Delete the current Record\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discard\n                        \n                    \n                \n            \n            \n                \ndiscard()\n                \n            \n\n\n\n\n            \n                \n                    Undo or Discard the changes\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        {boolean}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getKeyValue\n                        \n                    \n                \n            \n            \n                \ngetKeyValue()\n                \n            \n\n\n\n\n            \n                \n                    Get the primary key of this entity\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gotoDetails\n                        \n                    \n                \n            \n            \n                \ngotoDetails()\n                \n            \n\n\n\n\n            \n                \n                    Go to the details view for this record\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepareLoadServerData\n                        \n                    \n                \n            \n            \n                \nprepareLoadServerData()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n\n\n            \n                \n                    Refresh the form data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n\n\n            \n                \n                    Save the current record\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errHandler\n                        \n                    \n                \n            \n            \n                \nerrHandler(error: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        i18\n                        \n                    \n                \n            \n            \n                \ni18(key: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInRole\n                        \n                    \n                \n            \n            \n                \nisInRole(role: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInfo\n                        \n                    \n                \n            \n            \n                \nshowInfo(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showWarning\n                        \n                    \n                \n            \n            \n                \nshowWarning(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allowDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allowDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allowEdit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allowNew\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        autoLoadLookupData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bqForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BqForm\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(BqForm)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GenericDataService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormType\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formViewId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        keyboardSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subscription\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keyboardSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :     KeyboardShortcutsSelectService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lookupDataModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelMetadata\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TModel\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        msgSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewData\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vwService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewWrapperService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        appInitService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppInitService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authorizeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorizeService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BQConfigData\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Injector\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocaleService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NavigationService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runTimeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser | null\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'BaseFormView'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseListView.html":{"url":"components/BaseListView.html","title":"component - BaseListView","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BaseListView\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/core/base-list-view.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                    IBaseView\n    \n\n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                dataSvc\n                            \n                            \n                                formType\n                            \n                            \n                                metaData\n                            \n                            \n                                models\n                            \n                            \n                                    Protected\n                                msgSubscription\n                            \n                            \n                                predefinedFilters\n                            \n                            \n                                showAddButton\n                            \n                            \n                                tableParams\n                            \n                            \n                                viewDef\n                            \n                            \n                                appInitService\n                            \n                            \n                                authorizeService\n                            \n                            \n                                config\n                            \n                            \n                                dialogService\n                            \n                            \n                                injector\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoading\n                            \n                            \n                                localeService\n                            \n                            \n                                logger\n                            \n                            \n                                messageSvc\n                            \n                            \n                                navigationService\n                            \n                            \n                                runTimeId\n                            \n                            \n                                translate\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canClose\n                            \n                            \n                                canOpen\n                            \n                            \n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onRefreshData\n                            \n                            \n                                refresh\n                            \n                            \n                                errHandler\n                            \n                            \n                                i18\n                            \n                            \n                                isInRole\n                            \n                            \n                                showError\n                            \n                            \n                                showInfo\n                            \n                            \n                                showSuccess\n                            \n                            \n                                showWarning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(routerSvc: RouterService, optionalData: ViewOptionalData)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routerSvc\n                                                  \n                                                        \n                                                                        RouterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        optionalData\n                                                  \n                                                        \n                                                                        ViewOptionalData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canClose\n                        \n                    \n                \n            \n            \n                \ncanClose()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canOpen\n                        \n                    \n                \n            \n            \n                \ncanOpen(key: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleMessage\n                        \n                    \n                \n            \n            \n                \nhandleMessage(data: any)\n                \n            \n\n\n\n\n            \n                \n                    Handle message from Message Bus to deal with other views updating related data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRefreshData\n                        \n                    \n                \n            \n            \n                \nonRefreshData()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errHandler\n                        \n                    \n                \n            \n            \n                \nerrHandler(error: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        i18\n                        \n                    \n                \n            \n            \n                \ni18(key: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInRole\n                        \n                    \n                \n            \n            \n                \nisInRole(role: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInfo\n                        \n                    \n                \n            \n            \n                \nshowInfo(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showWarning\n                        \n                    \n                \n            \n            \n                \nshowWarning(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dataSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GenericDataService | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormType\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelMetadata\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        models\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TModel[]\n\n                    \n                \n\n            \n                \n                    The property holds the server side model data that is loaded via\nthe generic service.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        msgSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predefinedFilters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PredefinedFilter[]\n\n                    \n                \n\n            \n                \n                    Use this to define named/predefined filters that\nwill be displayed on the filters menu.\nA predefined filter does not require input from user.\nUseful for filter data based on known values, e.g.\nshowing if a field is not null.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAddButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n            \n                \n                    Display the App New button inside the BQTable of it's child component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableParams\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewData\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        appInitService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppInitService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authorizeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorizeService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BQConfigData\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Injector\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocaleService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NavigationService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runTimeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser | null\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'BaseListView'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMenu.html":{"url":"classes/BaseMenu.html","title":"class - BaseMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMenu\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/ui/layout/base.menu.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseComponent\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParams\n                            \n                            \n                                getPath\n                            \n                            \n                                handleMenuClick\n                            \n                            \n                                    Protected\n                                recurseMapMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, regionSvc: MainRegionAdapterService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        regionSvc\n                                                  \n                                                        \n                                                                        MainRegionAdapterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getParams\n                        \n                    \n                \n            \n            \n                \ngetParams(menuDef: MenuData)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuDef\n                                    \n                                                MenuData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPath\n                        \n                    \n                \n            \n            \n                \ngetPath(menuDef: MenuData)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuDef\n                                    \n                                                MenuData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleMenuClick\n                        \n                    \n                \n            \n            \n                \nhandleMenuClick(menu: any, link: string, queryParams: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryParams\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        recurseMapMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    recurseMapMenu(menus: MenuData[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menus\n                                    \n                                                MenuData[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BoolToYesNoPipe.html":{"url":"pipes/BoolToYesNoPipe.html","title":"pipe - BoolToYesNoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BoolToYesNoPipe\n\n\n\n        \n            Info\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/ui/core/display.pipes.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        boolToYesNo\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, ...args: any[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BqDropdownField.html":{"url":"components/BqDropdownField.html","title":"component - BqDropdownField","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BqDropdownField\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/controls/bq-dropdown-field/bq-dropdown-field.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseField\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-dropdown-field\n            \n\n\n\n            \n                styleUrls\n                ./bq-dropdown-field.scss\n            \n\n\n\n            \n                templateUrl\n                ./bq-dropdown-field.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controlItemLabelRenderTemplate\n                            \n                            \n                                controlItemRenderTemplate\n                            \n                            \n                                    \n                                defaultItemRender\n                            \n                            \n                                    \n                                defaultRender\n                            \n                            \n                                displayModel$\n                            \n                            \n                                    \n                                editEnumRender\n                            \n                            \n                                    \n                                editRender\n                            \n                            \n                                itemEnumSource\n                            \n                            \n                                _model\n                            \n                            \n                                controlRenderTemplate\n                            \n                            \n                                dateModel\n                            \n                            \n                                editMode\n                            \n                            \n                                fieldCss\n                            \n                            \n                                innerDivVAlign\n                            \n                            \n                                labelCss\n                            \n                            \n                                mainCss\n                            \n                            \n                                    Readonly\n                                model$\n                            \n                            \n                                optionalDisplayTemplate\n                            \n                            \n                                optionalEditTemplate\n                            \n                            \n                                optionalTemplates\n                            \n                            \n                                parent\n                            \n                            \n                                    \n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initializeRender\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addIfNotInList\n                            \n                            \n                                allowMultiple\n                            \n                            \n                                displayName\n                            \n                            \n                                editable\n                            \n                            \n                                groupBy\n                            \n                            \n                                itemSource\n                            \n                            \n                                showAsEnum\n                            \n                            \n                                valueName\n                            \n                            \n                                caption\n                            \n                            \n                                disabled\n                            \n                            \n                                field\n                            \n                            \n                                fieldSize\n                            \n                            \n                                id\n                            \n                            \n                                isRequired\n                            \n                            \n                                labelSize\n                            \n                            \n                                model\n                            \n                            \n                                name\n                            \n                            \n                                readonly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(vwSvc: ViewWrapperService, formBlock?: FormBlock)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vwSvc\n                                                  \n                                                        \n                                                                        ViewWrapperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBlock\n                                                  \n                                                        \n                                                                        FormBlock\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addIfNotInList\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        allowMultiple\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        displayName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        groupBy\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemSource\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showAsEnum\n                    \n                \n                \n                    \n                        Type :     boolean | undefined\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        caption\n                    \n                \n                \n                    \n                        Type :     string | null | undefined\n\n                    \n                \n                \n                    \n                        Caption to display. If Metadata field is set then caption will be used from that.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        show the input field but in readonly form. Similar to @member readonly but renders the input fields\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         MetadataField\n\n                    \n                \n                \n                    \n                        The meta data field to get the details from\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        the field block size in column\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        id of the field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        if the value is required in edit mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        the column block size for the display label for this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        the model binding property\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        name of the field to be used when inside a form\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        if true then in edit more it will still display value instead of showing the input field\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        when the model value changes this will be fired\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initializeRender\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeRender()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(newVal: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newVal\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        controlItemLabelRenderTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        controlItemRenderTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        defaultItemRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('defaultItemRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        defaultRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('defaultRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayModel$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        editEnumRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('editEnumRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        editRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('editRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemEnumSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EnumItem[] | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        controlRenderTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldCss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        innerDivVAlign\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelCss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainCss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        model$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalDisplayTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef | null | undefined\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalEditTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef | null | undefined\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalTemplates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dictionary>\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseFormView | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        templates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(BQTemplate)\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n    \n                \n                    ./bq-dropdown-field.scss\n                \n                :host {\n  width: 100%;\n}\n.field {\n   margin-bottom: 5px !important;\n}\n\n@media screen and (min-width: 960px) {\n  label::after {\n    content: ':';\n  }\n}\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{caption}}          {{displayModel$ | async}}                                  '\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'BqDropdownField'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BqForm.html":{"url":"components/BqForm.html","title":"component - BqForm","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BqForm\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/controls/bq-form/bq-form.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: ControlContainer, useFactory: (comp: any) => comp.form, deps: [BqForm]\n}\n                \n            \n\n\n            \n                selector\n                bq-form\n            \n\n\n\n            \n                styleUrls\n                ./bq-form.scss\n            \n\n\n\n            \n                templateUrl\n                ./bq-form.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                additionalActions\n                            \n                            \n                                additionalActionsOnRight\n                            \n                            \n                                editMode\n                            \n                            \n                                    \n                                form\n                            \n                            \n                                parentForm\n                            \n                            \n                                showDelete\n                            \n                            \n                                showEdit\n                            \n                            \n                                showNew\n                            \n                            \n                                    \n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                discard\n                            \n                            \n                                edit\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(routerSvc: RouterService, vwService: ViewWrapperService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routerSvc\n                                                  \n                                                        \n                                                                        RouterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vwService\n                                                  \n                                                        \n                                                                        ViewWrapperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discard\n                        \n                    \n                \n            \n            \n                \ndiscard()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        additionalActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        additionalActionsOnRight\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgForm\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(NgForm, {static: false})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parentForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseFormView\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showEdit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNew\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        templates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(BQTemplate)\n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n\n            \n        \n\n\n\n\n\n\n    \n                \n                    ./bq-form.scss\n                \n                \n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            '\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'BqForm'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BqPasswordField.html":{"url":"components/BqPasswordField.html","title":"component - BqPasswordField","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BqPasswordField\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/controls/bq-password-field/bq-password-field.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseField\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-password-field\n            \n\n\n\n            \n                styleUrls\n                ./bq-password-field.scss\n            \n\n\n\n            \n                templateUrl\n                ./bq-password-field.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                displayPasswordRender\n                            \n                            \n                                maxLengthInner\n                            \n                            \n                                minLengthInner\n                            \n                            \n                                    \n                                passwordRender\n                            \n                            \n                                _model\n                            \n                            \n                                controlRenderTemplate\n                            \n                            \n                                dateModel\n                            \n                            \n                                editMode\n                            \n                            \n                                fieldCss\n                            \n                            \n                                innerDivVAlign\n                            \n                            \n                                labelCss\n                            \n                            \n                                mainCss\n                            \n                            \n                                    Readonly\n                                model$\n                            \n                            \n                                optionalDisplayTemplate\n                            \n                            \n                                optionalEditTemplate\n                            \n                            \n                                optionalTemplates\n                            \n                            \n                                parent\n                            \n                            \n                                    \n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initializeRender\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                compareParent\n                            \n                            \n                                compareTo\n                            \n                            \n                                compareToMsg\n                            \n                            \n                                maxLength\n                            \n                            \n                                minLength\n                            \n                            \n                                regexMessage\n                            \n                            \n                                regexPattern\n                            \n                            \n                                caption\n                            \n                            \n                                disabled\n                            \n                            \n                                field\n                            \n                            \n                                fieldSize\n                            \n                            \n                                id\n                            \n                            \n                                isRequired\n                            \n                            \n                                labelSize\n                            \n                            \n                                model\n                            \n                            \n                                name\n                            \n                            \n                                readonly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(vwSvc: ViewWrapperService, formBlock?: FormBlock)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vwSvc\n                                                  \n                                                        \n                                                                        ViewWrapperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBlock\n                                                  \n                                                        \n                                                                        FormBlock\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        compareParent\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        compareTo\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        compareToMsg\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        regexMessage\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        regexPattern\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        caption\n                    \n                \n                \n                    \n                        Type :     string | null | undefined\n\n                    \n                \n                \n                    \n                        Caption to display. If Metadata field is set then caption will be used from that.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        show the input field but in readonly form. Similar to @member readonly but renders the input fields\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         MetadataField\n\n                    \n                \n                \n                    \n                        The meta data field to get the details from\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        the field block size in column\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        id of the field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        if the value is required in edit mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        the column block size for the display label for this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        the model binding property\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        name of the field to be used when inside a form\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        if true then in edit more it will still display value instead of showing the input field\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        when the model value changes this will be fired\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initializeRender\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeRender()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(newVal: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newVal\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        displayPasswordRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('displayPasswordRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxLengthInner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minLengthInner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passwordRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('passwordRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        controlRenderTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldCss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        innerDivVAlign\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelCss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainCss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        model$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalDisplayTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef | null | undefined\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalEditTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef | null | undefined\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalTemplates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dictionary>\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseFormView | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        templates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(BQTemplate)\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n    \n                \n                    ./bq-password-field.scss\n                \n                :host {\n  width: 100%;\n}\n.field {\n   margin-bottom: 5px !important;\n}\nlabel::after {\n  content: ':';\n}\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{caption}}          {{model}}      * required    * minimum required length      {{myField.errors?.minlength?.requiredLength}}    * maxium length allowed      {{myField.errors?.maxlength?.requiredLength}}    * invalid pattern* {{regexMessage}}    * invalid email    * {{compareToMsg}}        {{model | password}}'\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'BqPasswordField'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BqTextArea.html":{"url":"components/BqTextArea.html","title":"component - BqTextArea","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BqTextArea\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/controls/bq-text-area/bq-text-area.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseField\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-text-area\n            \n\n\n\n            \n                styleUrls\n                ./bq-text-area.scss\n            \n\n\n\n            \n                templateUrl\n                ./bq-text-area.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                defaultRender\n                            \n                            \n                                    \n                                stringRender\n                            \n                            \n                                _model\n                            \n                            \n                                controlRenderTemplate\n                            \n                            \n                                dateModel\n                            \n                            \n                                editMode\n                            \n                            \n                                fieldCss\n                            \n                            \n                                innerDivVAlign\n                            \n                            \n                                labelCss\n                            \n                            \n                                mainCss\n                            \n                            \n                                    Readonly\n                                model$\n                            \n                            \n                                optionalDisplayTemplate\n                            \n                            \n                                optionalEditTemplate\n                            \n                            \n                                optionalTemplates\n                            \n                            \n                                parent\n                            \n                            \n                                    \n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initializeRender\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoResize\n                            \n                            \n                                maxLength\n                            \n                            \n                                minLength\n                            \n                            \n                                row\n                            \n                            \n                                caption\n                            \n                            \n                                disabled\n                            \n                            \n                                field\n                            \n                            \n                                fieldSize\n                            \n                            \n                                id\n                            \n                            \n                                isRequired\n                            \n                            \n                                labelSize\n                            \n                            \n                                model\n                            \n                            \n                                name\n                            \n                            \n                                readonly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(vwSvc: ViewWrapperService, formBlock?: FormBlock)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vwSvc\n                                                  \n                                                        \n                                                                        ViewWrapperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBlock\n                                                  \n                                                        \n                                                                        FormBlock\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoResize\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        row\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        caption\n                    \n                \n                \n                    \n                        Type :     string | null | undefined\n\n                    \n                \n                \n                    \n                        Caption to display. If Metadata field is set then caption will be used from that.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        show the input field but in readonly form. Similar to @member readonly but renders the input fields\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         MetadataField\n\n                    \n                \n                \n                    \n                        The meta data field to get the details from\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        the field block size in column\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        id of the field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        if the value is required in edit mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        the column block size for the display label for this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        the model binding property\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        name of the field to be used when inside a form\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        if true then in edit more it will still display value instead of showing the input field\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        when the model value changes this will be fired\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initializeRender\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeRender()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(newVal: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newVal\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        defaultRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('defaultRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stringRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('stringRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        controlRenderTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldCss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        innerDivVAlign\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelCss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainCss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        model$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalDisplayTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef | null | undefined\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalEditTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef | null | undefined\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalTemplates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dictionary>\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseFormView | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        templates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(BQTemplate)\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n    \n                \n                    ./bq-text-area.scss\n                \n                :host {\n  width: 100%;\n}\n.field {\n   margin-bottom: 5px !important;\n}\n@media screen and (min-width: 960px) {\n  label::after {\n    content: ':';\n  }\n}\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{caption}}          {{model}}      * required    * minimum required length      {{myField.errors?.minlength?.requiredLength}}    * maxium length allowed      {{myField.errors?.maxlength?.requiredLength}}    * invalid email      '\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'BqTextArea'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BqTextField.html":{"url":"components/BqTextField.html","title":"component - BqTextField","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BqTextField\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/controls/bq-text-field/bq-text-field.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseField\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-text-field\n            \n\n\n\n            \n                styleUrls\n                ./bq-text-field.scss\n            \n\n\n\n            \n                templateUrl\n                ./bq-text-field.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                booleanDisplayRender\n                            \n                            \n                                    \n                                boolRender\n                            \n                            \n                                    \n                                dateRender\n                            \n                            \n                                    \n                                defaultDateRender\n                            \n                            \n                                    \n                                defaultRender\n                            \n                            \n                                    \n                                emailRender\n                            \n                            \n                                    \n                                integerRender\n                            \n                            \n                                localeFormat\n                            \n                            \n                                localePipeFormat\n                            \n                            \n                                maxLengthInner\n                            \n                            \n                                minLengthInner\n                            \n                            \n                                numberMode\n                            \n                            \n                                    \n                                numberRender\n                            \n                            \n                                    \n                                stringRender\n                            \n                            \n                                _model\n                            \n                            \n                                controlRenderTemplate\n                            \n                            \n                                dateModel\n                            \n                            \n                                editMode\n                            \n                            \n                                fieldCss\n                            \n                            \n                                innerDivVAlign\n                            \n                            \n                                labelCss\n                            \n                            \n                                mainCss\n                            \n                            \n                                    Readonly\n                                model$\n                            \n                            \n                                optionalDisplayTemplate\n                            \n                            \n                                optionalEditTemplate\n                            \n                            \n                                optionalTemplates\n                            \n                            \n                                parent\n                            \n                            \n                                    \n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initializeRender\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                compareParent\n                            \n                            \n                                compareTo\n                            \n                            \n                                compareToMsg\n                            \n                            \n                                currency\n                            \n                            \n                                currencyCode\n                            \n                            \n                                dateFormat\n                            \n                            \n                                max\n                            \n                            \n                                maxLength\n                            \n                            \n                                min\n                            \n                            \n                                minLength\n                            \n                            \n                                regexMessage\n                            \n                            \n                                regexPattern\n                            \n                            \n                                seperateDigits\n                            \n                            \n                                showTime\n                            \n                            \n                                caption\n                            \n                            \n                                disabled\n                            \n                            \n                                field\n                            \n                            \n                                fieldSize\n                            \n                            \n                                id\n                            \n                            \n                                isRequired\n                            \n                            \n                                labelSize\n                            \n                            \n                                model\n                            \n                            \n                                name\n                            \n                            \n                                readonly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currency\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(vwSvc: ViewWrapperService, formBlock?: FormBlock)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vwSvc\n                                                  \n                                                        \n                                                                        ViewWrapperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBlock\n                                                  \n                                                        \n                                                                        FormBlock\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        compareParent\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        compareTo\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        compareToMsg\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        currencyCode\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"USD\"\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dateFormat\n                    \n                \n                \n                    \n                        Type :     string | undefined | null\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minLength\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        regexMessage\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        regexPattern\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        seperateDigits\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showTime\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        caption\n                    \n                \n                \n                    \n                        Type :     string | null | undefined\n\n                    \n                \n                \n                    \n                        Caption to display. If Metadata field is set then caption will be used from that.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        show the input field but in readonly form. Similar to @member readonly but renders the input fields\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         MetadataField\n\n                    \n                \n                \n                    \n                        The meta data field to get the details from\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        the field block size in column\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        id of the field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        if the value is required in edit mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        the column block size for the display label for this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        the model binding property\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        name of the field to be used when inside a form\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        if true then in edit more it will still display value instead of showing the input field\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        when the model value changes this will be fired\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initializeRender\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeRender()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(newVal: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newVal\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        booleanDisplayRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('booleanDisplayRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        boolRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('boolRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dateRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        defaultDateRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('defaultDateRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        defaultRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('defaultRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        emailRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('emailRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        integerRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('integerRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localeFormat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localePipeFormat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxLengthInner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minLengthInner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : \"decimal\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('numberRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stringRender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('stringRender', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        controlRenderTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fieldCss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        innerDivVAlign\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelCss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mainCss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        model$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalDisplayTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef | null | undefined\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalEditTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef | null | undefined\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalTemplates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dictionary>\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseFormView | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        templates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(BQTemplate)\n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n\n                \n                    \n                        getcurrency()\n                    \n                \n\n                \n                    \n                        setcurrency(value: boolean)\n                    \n                \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n\n\n    \n                \n                    ./bq-text-field.scss\n                \n                :host {\n  width: 100%;\n}\n.field {\n   margin-bottom: 5px !important;\n}\n@media screen and (min-width: 960px) {\n  label::after {\n    content: ':';\n  }\n}\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{caption}}          {{model}}      * required    * minimum required length      {{myField.errors?.minlength?.requiredLength}}    * maxium length allowed      {{myField.errors?.maxlength?.requiredLength}}    * invalid pattern* {{regexMessage}}    * invalid email    * {{compareToMsg}}                                {{model | boolToYesNo}}  {{dateModel | date:localePipeFormat}}'\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'BqTextField'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Breadcrumb.html":{"url":"components/Breadcrumb.html","title":"component - Breadcrumb","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Breadcrumb\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/layout/breadcrumb/breadcrumb.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                breadcrumb\n            \n\n\n\n            \n                styleUrls\n                ./breadcrumb.scss\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumb.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formType\n                            \n                            \n                                menuStack\n                            \n                            \n                                routeData$\n                            \n                            \n                                showSelf\n                            \n                            \n                                title\n                            \n                            \n                                viewDef\n                            \n                            \n                                appInitService\n                            \n                            \n                                authorizeService\n                            \n                            \n                                config\n                            \n                            \n                                dialogService\n                            \n                            \n                                injector\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoading\n                            \n                            \n                                localeService\n                            \n                            \n                                logger\n                            \n                            \n                                messageSvc\n                            \n                            \n                                navigationService\n                            \n                            \n                                runTimeId\n                            \n                            \n                                translate\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                errHandler\n                            \n                            \n                                i18\n                            \n                            \n                                isInRole\n                            \n                            \n                                showError\n                            \n                            \n                                showInfo\n                            \n                            \n                                showSuccess\n                            \n                            \n                                showWarning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errHandler\n                        \n                    \n                \n            \n            \n                \nerrHandler(error: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        i18\n                        \n                    \n                \n            \n            \n                \ni18(key: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInRole\n                        \n                    \n                \n            \n            \n                \nisInRole(role: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInfo\n                        \n                    \n                \n            \n            \n                \nshowInfo(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showWarning\n                        \n                    \n                \n            \n            \n                \nshowWarning(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormType | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuStack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuData[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeData$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSelf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewData | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        appInitService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppInitService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authorizeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorizeService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BQConfigData\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Injector\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocaleService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NavigationService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runTimeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser | null\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n    \n                \n                    ./breadcrumb.scss\n                \n                \n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  0\">            {{mn.label}}    0\">  {{title}}'\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'Breadcrumb'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Channel.html":{"url":"classes/Channel.html","title":"class - Channel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Channel\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/message.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channelName\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSubscription\n                            \n                            \n                                post\n                            \n                            \n                                removeSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channelName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSubscription\n                        \n                    \n                \n            \n            \n                \naddSubscription(subscription: Subscription)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                                Subscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(message: Message)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSubscription\n                        \n                    \n                \n            \n            \n                \nremoveSubscription(id: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CompareDirective.html":{"url":"directives/CompareDirective.html","title":"directive - CompareDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  CompareDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/ui/controls/validators/compare.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: CompareDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [compare]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                compare-parent\n                            \n                            \n                                compare-to\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        compare-parent\n                    \n                \n                \n                    \n                        Type :     boolean | undefined | null\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        compare-to\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(c: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                            AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ControlContainerDirective.html":{"url":"directives/ControlContainerDirective.html","title":"directive - ControlContainerDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ControlContainerDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/ui/core/control-container.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Enable cross component form injection for template driven forms by default. Form controls\ncreated with NgModel are implicitly included in the nearest FormGroup or NgModelGroup in the\ntemplate or component hierarchy. There is no additional configuration required.\nSee https://stackoverflow.com/questions/39242219\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                controlContainerProvider\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [ngModel],[ngModelGroup]\n                    \n\n\n\n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomFilter.html":{"url":"components/CustomFilter.html","title":"component - CustomFilter","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CustomFilter\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/controls/bq-table/bq-table-custom-filter.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-table-custom-filter\n            \n\n\n\n\n            \n                styles\n                :host ::ng-deep .ng-invalid { border-color: #f44336; }\n     :host ::ng-deep .ng-invalid input { border-color: #f44336; }\n     :host ::ng-deep .ng-valid { border-color: #36F4C5; }\n     :host ::ng-deep .ng-valid input { border-color: #36F4C5; }\n    \n            \n\n\n            \n                templateUrl\n                ./bq-table-custom-filter.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boolValues\n                            \n                            \n                                localeFormat\n                            \n                            \n                                selectedFilter\n                            \n                            \n                                selectedPredicate\n                            \n                            \n                                showDropDownValue\n                            \n                            \n                                showEquals\n                            \n                            \n                                showToValue\n                            \n                            \n                                showValue\n                            \n                            \n                                toValue\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fieldUpdated\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                predicateUpdated\n                            \n                            \n                                valueToUpdated\n                            \n                            \n                                valueUpdated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterCluase\n                            \n                            \n                                filters\n                            \n                            \n                                formName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterCluase\n                    \n                \n                \n                    \n                        Type :         FilterByClause\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     TableFilter[]\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        formName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        remove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fieldUpdated\n                        \n                    \n                \n            \n            \n                \nfieldUpdated(newVal: TableFilter)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newVal\n                                    \n                                                TableFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicateUpdated\n                        \n                    \n                \n            \n            \n                \npredicateUpdated(newVal: Predicate, selFilter: TableFilter)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newVal\n                                    \n                                                Predicate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selFilter\n                                    \n                                                TableFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueToUpdated\n                        \n                    \n                \n            \n            \n                \nvalueToUpdated(newVal: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newVal\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueUpdated\n                        \n                    \n                \n            \n            \n                \nvalueUpdated(newVal: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newVal\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        boolValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { display: 'is true', value: true },\n    { display: 'is false', value: false }\n  ]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localeFormat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableFilter\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedPredicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Predicate\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDropDownValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showEquals\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [PREDICATE_EQUALS]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n    \n            :host ::ng-deep .ng-invalid { border-color: #f44336; }\n     :host ::ng-deep .ng-invalid input { border-color: #f44336; }\n     :host ::ng-deep .ng-valid { border-color: #36F4C5; }\n     :host ::ng-deep .ng-valid input { border-color: #36F4C5; }\n    \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{item.display | translate}}              {{item.display | translate}}                    {{item.display | translate}}              {{item.display | translate}}                                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'CustomFilter'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomUserMenus.html":{"url":"interfaces/CustomUserMenus.html","title":"interface - CustomUserMenus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomUserMenus\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/config/bq-start-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Define a Custom Menu Item to display under Top Right User Menu\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            eventName\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eventName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataServiceOptions.html":{"url":"classes/DataServiceOptions.html","title":"class - DataServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataServiceOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/generic-data.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                $expandClause\n                            \n                            \n                                    Optional\n                                $filterClause\n                            \n                            \n                                    Optional\n                                $selectClause\n                            \n                            \n                                $type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        $expandClause\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        $filterClause\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        $selectClause\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        $type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DialogService.html":{"url":"injectables/DialogService.html","title":"injectable - DialogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DialogService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/dialog.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Dialog Service for showing Confirm and Error Dialogs\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertStore\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alert\n                            \n                            \n                                confirm\n                            \n                            \n                                errorDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(confirmationService: ConfirmationService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        alert\n                        \n                    \n                \n            \n            \n                \nalert(msg: string, heading?: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    heading\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm(msg: string, heading?: string, accept?: Function, cancel?: Function)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    heading\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    accept\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    cancel\n                                    \n                                                Function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorDialog\n                        \n                    \n                \n            \n            \n                \nerrorDialog(msg: string, heading?: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    heading\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alertStore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dictionary.html":{"url":"interfaces/Dictionary.html","title":"interface - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Dictionary\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/meta-data.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [Key: string]:    T\n\n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicHostDirective.html":{"url":"directives/DynamicHostDirective.html","title":"directive - DynamicHostDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  DynamicHostDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/ui/core/dynamic-host.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dynHost]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        viewContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ViewContainerRef\n\n                    \n                \n\n\n        \n    \n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicLoaderComponent.html":{"url":"components/DynamicLoaderComponent.html","title":"component - DynamicLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DynamicLoaderComponent\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/core/dynamic.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dyn-loader\n            \n\n\n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                adHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadComponent\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, regionSvc: MainRegionAdapterService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        regionSvc\n                                                  \n                                                        \n                                                                        MainRegionAdapterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadComponent\n                        \n                    \n                \n            \n            \n                \nloadComponent()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        adHost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DynamicHostDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(DynamicHostDirective, {static: true})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicMDILoaderComponent.html":{"url":"components/DynamicMDILoaderComponent.html","title":"component - DynamicMDILoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DynamicMDILoaderComponent\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/core/dynamic.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dyn-mdi-loader\n            \n\n\n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                adHost\n                            \n                            \n                                component\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadComponent\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                viewRunningData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, regionSvc: MainRegionAdapterService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        regionSvc\n                                                  \n                                                        \n                                                                        MainRegionAdapterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        viewRunningData\n                    \n                \n                \n                    \n                        Type :         ViewRunningData\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadComponent\n                        \n                    \n                \n            \n            \n                \nloadComponent()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        adHost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DynamicHostDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(DynamicHostDirective, {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicMDILoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnumItem.html":{"url":"interfaces/EnumItem.html","title":"interface - EnumItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnumItem\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/meta-data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FailureAuthenticationResult.html":{"url":"interfaces/FailureAuthenticationResult.html","title":"interface - FailureAuthenticationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FailureAuthenticationResult\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/api-authorization/authorize.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         AuthenticationResultStatus.Fail\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthenticationResultStatus.Fail\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterByClause.html":{"url":"classes/FilterByClause.html","title":"class - FilterByClause","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterByClause\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/table-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                Caption\n                            \n                            \n                                    Public\n                                CustomName\n                            \n                            \n                                    Public\n                                DataType\n                            \n                            \n                                    Public\n                                DisplayValue\n                            \n                            \n                                    Public\n                                FieldName\n                            \n                            \n                                    Public\n                                Predicate\n                            \n                            \n                                    Public\n                                ToDisplayValue\n                            \n                            \n                                    Public\n                                toString\n                            \n                            \n                                    Public\n                                ToValue\n                            \n                            \n                                    Public\n                                Value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                GetDefault\n                            \n                            \n                                    Public\n                                GetODataUrl\n                            \n                            \n                                    Public\n                                IsValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        Caption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        CustomName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        DataType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        DisplayValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        FieldName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        Predicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ToDisplayValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toString\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ToValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        Value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        GetDefault\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetDefault(caption: string, field: MetadataField)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    caption\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    field\n                                    \n                                                MetadataField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterByClause\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        GetODataUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetODataUrl()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        IsValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    IsValid()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterBar.html":{"url":"components/FooterBar.html","title":"component - FooterBar","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterBar\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/layout/footer-bar/footer-bar.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-footer-bar\n            \n\n\n\n            \n                styleUrls\n                ./footer-bar.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer-bar.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                applicationName\n                            \n                            \n                                copyright\n                            \n                            \n                                year\n                            \n                            \n                                appInitService\n                            \n                            \n                                authorizeService\n                            \n                            \n                                config\n                            \n                            \n                                dialogService\n                            \n                            \n                                injector\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoading\n                            \n                            \n                                localeService\n                            \n                            \n                                logger\n                            \n                            \n                                messageSvc\n                            \n                            \n                                navigationService\n                            \n                            \n                                runTimeId\n                            \n                            \n                                translate\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                errHandler\n                            \n                            \n                                i18\n                            \n                            \n                                isInRole\n                            \n                            \n                                showError\n                            \n                            \n                                showInfo\n                            \n                            \n                                showSuccess\n                            \n                            \n                                showWarning\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stickyFooter\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stickyFooter\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Display the footer always on bottom if true.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errHandler\n                        \n                    \n                \n            \n            \n                \nerrHandler(error: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        i18\n                        \n                    \n                \n            \n            \n                \ni18(key: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInRole\n                        \n                    \n                \n            \n            \n                \nisInRole(role: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInfo\n                        \n                    \n                \n            \n            \n                \nshowInfo(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showWarning\n                        \n                    \n                \n            \n            \n                \nshowWarning(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        applicationName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyright\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        appInitService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppInitService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authorizeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorizeService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BQConfigData\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Injector\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocaleService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NavigationService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runTimeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser | null\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n    \n                \n                    ./footer-bar.scss\n                \n                .stick-footer{\n  position: fixed;\n  bottom: 0px;\n  width: 100%;\n}\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'bq-start.copyright\\' | translate }} {{year}}, {{copyright}}           {{applicationName}}     {{\\'bq-start.poweredby\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterBar'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormBlock.html":{"url":"components/FormBlock.html","title":"component - FormBlock","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormBlock\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/controls/form-block/form-block.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: ControlContainer, useFactory: (comp: any) => comp.form, deps: [BqForm]\n}\n                \n            \n\n\n            \n                selector\n                bq-form-block\n            \n\n\n\n            \n                styleUrls\n                ./form-block.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-block.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                labelSize\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        labelSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n    \n                \n                    ./form-block.scss\n                \n                \n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormBlock'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenericDataService.html":{"url":"injectables/GenericDataService.html","title":"injectable - GenericDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenericDataService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/generic-data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Generic Data Service to fetch data from backend controllers using OData notations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                getLookupData\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, config: BQConfigData, options: DataServiceOptions)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        BQConfigData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        DataServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(model: any[], metaData: ModelMetadata)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Delete data/record\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metaData\n                                    \n                                                ModelMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        {Observable>}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(model: any[], metaData: ModelMetadata)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Fetch a single instance of a data type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metaData\n                                    \n                                                ModelMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        {Observable>}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(tableParams: TableParams)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Fetch all Data for a Given Type\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tableParams\n                                    \n                                                TableParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        {Observable>}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getLookupData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLookupData(metaData: ModelMetadata)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Get Lookup/Dropdown records sources\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metaData\n                                    \n                                                ModelMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        {Observable>}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(model: T, isAdd: Boolean)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Save Data/record\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isAdd\n                                    \n                                                Boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        {Observable>}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseEvents.html":{"url":"interfaces/IBaseEvents.html","title":"interface - IBaseEvents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseEvents\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/meta-data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        onAfterInitComplete\n                                    \n                                \n                                \n                                    \n                                        onAfterServerDataReceived\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onAfterInitComplete\n                        \n                    \n                \n            \n            \n                \nonAfterInitComplete()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAfterServerDataReceived\n                        \n                    \n                \n            \n            \n                \nonAfterServerDataReceived()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseFormViewEvents.html":{"url":"interfaces/IBaseFormViewEvents.html","title":"interface - IBaseFormViewEvents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseFormViewEvents\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/ui/core/base-form-view.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the base abstract functionality of a BQ View (List/Form)\nand their various event methods that you can override in the implemented class\n\n            \n\n            \n                Extends\n            \n            \n                        IBaseEvents\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        onAfterInitComplete\n                                    \n                                \n                                \n                                    \n                                        onAfterServerDataReceived\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onAfterInitComplete\n                        \n                    \n                \n            \n            \n                \nonAfterInitComplete()\n                \n            \n\n\n\n\n            \n                \n                    This method is called when a view is done initializing it's internal details.\nTypically you can other initialiation functions here.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAfterServerDataReceived\n                        \n                    \n                \n            \n            \n                \nonAfterServerDataReceived()\n                \n            \n\n\n\n\n            \n                \n                    This method is called when the veiw receives the data from the service.\nThe service populates the 'models' property.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseListViewEvents.html":{"url":"interfaces/IBaseListViewEvents.html","title":"interface - IBaseListViewEvents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseListViewEvents\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/ui/core/base-list-view.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the base abstract functionality of a BQ View (List/Form)\nand their various event methods that you can override in the implemented class\n\n            \n\n            \n                Extends\n            \n            \n                        IBaseEvents\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        onAfterInitComplete\n                                    \n                                \n                                \n                                    \n                                        onAfterServerDataReceived\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onAfterInitComplete\n                        \n                    \n                \n            \n            \n                \nonAfterInitComplete()\n                \n            \n\n\n\n\n            \n                \n                    This method is called when a view is done initializing it's internal details.\nTypically you can other initialiation functions here.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAfterServerDataReceived\n                        \n                    \n                \n            \n            \n                \nonAfterServerDataReceived()\n                \n            \n\n\n\n\n            \n                \n                    This method is called when the veiw receives the data from the service.\nThe service populates the 'models' property.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseView.html":{"url":"interfaces/IBaseView.html","title":"interface - IBaseView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseView\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/ui/core/base-view.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        canClose\n                                    \n                                \n                                \n                                    \n                                        canOpen\n                                    \n                                \n                                \n                                    \n                                        refresh\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canClose\n                        \n                    \n                \n            \n            \n                \ncanClose()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canOpen\n                        \n                    \n                \n            \n            \n                \ncanOpen(key: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEditFormViewEvents.html":{"url":"interfaces/IEditFormViewEvents.html","title":"interface - IEditFormViewEvents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IEditFormViewEvents\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/ui/core/base-form-view.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        onBeforeDelete\n                                    \n                                \n                                \n                                    \n                                        onBeforeSave\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onBeforeDelete\n                        \n                    \n                \n            \n            \n                \nonBeforeDelete()\n                \n            \n\n\n\n\n            \n                \n                    This method is called when the data is about to be deleted.\nIf returned true then delete operation will continue else stop.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBeforeSave\n                        \n                    \n                \n            \n            \n                \nonBeforeSave()\n                \n            \n\n\n\n\n            \n                \n                    This method is called when the data is about to be saved.\nIf returned true then save will continue else stop.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INavigationState.html":{"url":"interfaces/INavigationState.html","title":"interface - INavigationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INavigationState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/api-authorization/login/login.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ReturnUrlType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ReturnUrlType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ReturnUrlType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INavigationState-1.html":{"url":"interfaces/INavigationState-1.html","title":"interface - INavigationState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INavigationState\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/api-authorization/logout/logout.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ReturnUrlType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ReturnUrlType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ReturnUrlType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/api-authorization/authorize.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            family_name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            given_name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        family_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        family_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        given_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        given_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InternalLogService.html":{"url":"injectables/InternalLogService.html","title":"injectable - InternalLogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InternalLogService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/log/log.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        LogService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                            \n                                logWithDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                logger\n                            \n                            \n                                    Protected\n                                    \n                                writeToLog\n                            \n                            \n                                clear\n                            \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                fatal\n                            \n                            \n                                info\n                            \n                            \n                                log\n                            \n                            \n                                    Protected\n                                shouldLog\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publishersService: LogPublishersService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publishersService\n                                                  \n                                                        \n                                                                        LogPublishersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        logger\n                        \n                    \n                \n            \n            \n                \n                    \n                    logger()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         LogService\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        \n                        writeToLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeToLog(msg: string, level: LogLevel, params: any[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n\n\n            \n                \n                    Clear Logs\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(msg: string, ...optionalParams: any[])\n                \n            \n\n\n\n\n            \n                \n                    Publish Debug Log\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(msg: string, ...optionalParams: any[])\n                \n            \n\n\n\n\n            \n                \n                    Publish Error Message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(msg: string, ...optionalParams: any[])\n                \n            \n\n\n\n\n            \n                \n                    Publish Fatal Error Message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(msg: string, ...optionalParams: any[])\n                \n            \n\n\n\n\n            \n                \n                    Publish Info Message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(msg: string, ...optionalParams: any[])\n                \n            \n\n\n\n\n            \n                \n                    Publish General Log Entry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        shouldLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldLog(level: LogLevel)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(msg: string, ...optionalParams: any[])\n                \n            \n\n\n\n\n            \n                \n                    Publish Warning Message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogLevel\n\n                    \n                \n                \n                    \n                        Default value : LogLevel.All\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logWithDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocaleId.html":{"url":"classes/LocaleId.html","title":"class - LocaleId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocaleId\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/locale.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        String\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                toString\n                            \n                            \n                                    \n                                valueOf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localeService: LocaleService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localeService\n                                                  \n                                                        \n                                                                        LocaleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        toString\n                        \n                    \n                \n            \n            \n                \n                    \n                    toString()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        valueOf\n                        \n                    \n                \n            \n            \n                \n                    \n                    valueOf()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaleService.html":{"url":"injectables/LocaleService.html","title":"injectable - LocaleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocaleService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/locale.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Locale/Translation Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCoreTranslations\n                            \n                            \n                                getTranslation\n                            \n                            \n                                initLocale\n                            \n                            \n                                setDefaultLocale\n                            \n                            \n                                setLocale\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentLocale\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, translate: TranslateService, otherInstance: LocaleService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        otherInstance\n                                                  \n                                                        \n                                                                        LocaleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCoreTranslations\n                        \n                    \n                \n            \n            \n                \ngetCoreTranslations(lang: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTranslation\n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initLocale\n                        \n                    \n                \n            \n            \n                \ninitLocale(localeId: string, defaultLocaleId)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    localeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    defaultLocaleId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        localeId\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultLocale\n                        \n                    \n                \n            \n            \n                \nsetDefaultLocale(localeId: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    localeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLocale\n                        \n                    \n                \n            \n            \n                \nsetLocale(localeId: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    localeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentLocale\n                    \n                \n\n                \n                    \n                        getcurrentLocale()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogConsole.html":{"url":"classes/LogConsole.html","title":"class - LogConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogConsole\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/log/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Console Log Publishers\n\n            \n\n            \n                Extends\n            \n            \n                        LogPublisher\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                enableBqAdminLog\n                            \n                            \n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        enableBqAdminLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(entry: LogEntry)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogEntry.html":{"url":"classes/LogEntry.html","title":"class - LogEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogEntry\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/log/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a Log Entry\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entryDate\n                            \n                            \n                                extraInfo\n                            \n                            \n                                level\n                            \n                            \n                                logWithDate\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildLogString\n                            \n                            \n                                buildLogStringWithoutExtra\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        entryDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extraInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogLevel\n\n                    \n                \n                \n                    \n                        Default value : LogLevel.Debug\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logWithDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildLogString\n                        \n                    \n                \n            \n            \n                \nbuildLogString()\n                \n            \n\n\n\n\n            \n                \n                    Build the log entry as string\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildLogStringWithoutExtra\n                        \n                    \n                \n            \n            \n                \nbuildLogStringWithoutExtra()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogLocalStorage.html":{"url":"classes/LogLocalStorage.html","title":"class - LogLocalStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogLocalStorage\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/log/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Saves Log to local Storage\n\n            \n\n            \n                Extends\n            \n            \n                        LogPublisher\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                enableBqAdminLog\n                            \n                            \n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        enableBqAdminLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(entry: LogEntry)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogPublisher.html":{"url":"classes/LogPublisher.html","title":"class - LogPublisher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogPublisher\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/log/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base log publisher class. You can extend this if you want\nto provide custom publishers\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                enableBqAdminLog\n                            \n                            \n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                clear\n                            \n                            \n                                    Abstract\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        enableBqAdminLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(record: LogEntry)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    record\n                                    \n                                                LogEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogPublisherConfig.html":{"url":"classes/LogPublisherConfig.html","title":"class - LogPublisherConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogPublisherConfig\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/log/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Publisher Config\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                enableBqAdminLog\n                            \n                            \n                                isActive\n                            \n                            \n                                loggerLocation\n                            \n                            \n                                loggerName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        enableBqAdminLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggerLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggerName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogPublishersService.html":{"url":"injectables/LogPublishersService.html","title":"injectable - LogPublishersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogPublishersService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/log/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Configure Log Publishers With this service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPublisher\n                            \n                            \n                                buildPublishers\n                            \n                            \n                                getLoggers\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    publishers\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPublisher\n                        \n                    \n                \n            \n            \n                \naddPublisher(pub: LogPublisher)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pub\n                                    \n                                                LogPublisher\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildPublishers\n                        \n                    \n                \n            \n            \n                \nbuildPublishers()\n                \n            \n\n\n\n\n            \n                \n                    Build Publishers from Config File\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoggers\n                        \n                    \n                \n            \n            \n                \ngetLoggers()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        publishers\n                    \n                \n\n                \n                    \n                        getpublishers()\n                    \n                \n                    \n                        \n                                Default Log Publishers\n\n\n                                \n                                \n                                \n                                    Returns :         LogPublisher[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/log/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Log Service class to write log entry. It will be published\nto the configured publishers\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                            \n                                logWithDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                fatal\n                            \n                            \n                                info\n                            \n                            \n                                log\n                            \n                            \n                                    Protected\n                                shouldLog\n                            \n                            \n                                warn\n                            \n                            \n                                    Protected\n                                writeToLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publishersService: LogPublishersService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publishersService\n                                                  \n                                                        \n                                                                        LogPublishersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n\n\n            \n                \n                    Clear Logs\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(msg: string, ...optionalParams: any[])\n                \n            \n\n\n\n\n            \n                \n                    Publish Debug Log\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(msg: string, ...optionalParams: any[])\n                \n            \n\n\n\n\n            \n                \n                    Publish Error Message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(msg: string, ...optionalParams: any[])\n                \n            \n\n\n\n\n            \n                \n                    Publish Fatal Error Message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(msg: string, ...optionalParams: any[])\n                \n            \n\n\n\n\n            \n                \n                    Publish Info Message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(msg: string, ...optionalParams: any[])\n                \n            \n\n\n\n\n            \n                \n                    Publish General Log Entry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        shouldLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldLog(level: LogLevel)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(msg: string, ...optionalParams: any[])\n                \n            \n\n\n\n\n            \n                \n                    Publish Warning Message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        writeToLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeToLog(msg: string, level: LogLevel, params: any[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogLevel\n\n                    \n                \n                \n                    \n                        Default value : LogLevel.All\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logWithDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/api-authorization/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authorizeService: AuthorizeService, activatedRoute: ActivatedRoute, router: Router)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorizeService\n                                                  \n                                                        \n                                                                        AuthorizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ message | async }}      '\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginMenuComponent.html":{"url":"components/LoginMenuComponent.html","title":"component - LoginMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/api-authorization/login-menu/login-menu.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-menu\n            \n\n\n\n            \n                styleUrls\n                ./login-menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authorizeService: AuthorizeService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorizeService\n                                                  \n                                                        \n                                                                        AuthorizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n    \n                \n                    ./login-menu.component.css\n                \n                \n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Hello {{ userName | async }}                Logout              Register                Login    '\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/api-authorization/logout/logout.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n\n\n            \n                styleUrls\n                ./logout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authorizeService: AuthorizeService, activatedRoute: ActivatedRoute, router: Router)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorizeService\n                                                  \n                                                        \n                                                                        AuthorizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n    \n                \n                    ./logout.component.css\n                \n                \n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ message | async }}      '\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MDIComponent.html":{"url":"components/MDIComponent.html","title":"component - MDIComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MDIComponent\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/layout/mdi/mdi.component.ts\n\n\n\n    \n        Description\n    \n    \n        This document is responsible for showing a view inside a tab in tabbed MDI view\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-mdi\n            \n\n\n\n\n\n            \n                template\n                \n  \n          \n            {{item.viewDef.title}}&nbsp;\n          \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                regionSvc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleClose\n                            \n                            \n                                handleTabChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(regionSvc: MainRegionAdapterService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        regionSvc\n                                                  \n                                                        \n                                                                        MainRegionAdapterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleClose\n                        \n                    \n                \n            \n            \n                \nhandleClose(e: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleTabChange\n                        \n                    \n                \n            \n            \n                \nhandleTabChange()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        regionSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MainRegionAdapterService\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{item.viewDef.title}}                 '\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'MDIComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MDILayoutComponent.html":{"url":"components/MDILayoutComponent.html","title":"component - MDILayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MDILayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/layout/mdi/mdi-layout.ts\n\n\n\n    \n        Description\n    \n    \n        Main layout component for showing views as a Tabbed MDI interface. The config option should\nalso be True.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-mdi-app-layout\n            \n\n\n\n\n            \n                styles\n                \n      .mdi-layout {\n        height: calc(100vh - 60px);\n      }\n    \n            \n\n            \n                template\n                \n  \n  \n    \n      \n          \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n\n\n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                controlFooterTemplate\n                            \n                            \n                                customFooterTemplate\n                            \n                            \n                                    \n                                defaultFooterTemplate\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                optionalTemplates\n                            \n                            \n                                shortcutsInternal\n                            \n                            \n                                    \n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleTopMenuClick\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                injector\n                            \n                            \n                                shortcuts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTopRightMenuClicked\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    shortcuts\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(primengConfig: PrimeNGConfig, authorizeService: AuthorizeService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        primengConfig\n                                                  \n                                                        \n                                                                    PrimeNGConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizeService\n                                                  \n                                                        \n                                                                        AuthorizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        injector\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        shortcuts\n                    \n                \n                \n                    \n                        Type :     ShortcutInput[]\n\n                    \n                \n                \n                    \n                        This is the list of shortcut keyboard hooks to patch to the module\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTopRightMenuClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleTopMenuClick\n                        \n                    \n                \n            \n            \n                \nhandleTopMenuClick(ev: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BQConfigData\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        controlFooterTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customFooterTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        defaultFooterTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('defaultFooterTemplate', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionalTemplates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dictionary>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortcutsInternal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ShortcutInput[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        templates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(BQTemplate)\n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        shortcuts\n                    \n                \n\n                \n                    \n                        getshortcuts()\n                    \n                \n\n                \n                    \n                        setshortcuts(value: ShortcutInput[])\n                    \n                \n                    \n                        \n                                This is the list of shortcut keyboard hooks to patch to the module\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        ShortcutInput[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n\n\n    \n            \n      .mdi-layout {\n        height: calc(100vh - 60px);\n      }\n    \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          '\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'MDILayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MainRegionAdapterService.html":{"url":"injectables/MainRegionAdapterService.html","title":"injectable - MainRegionAdapterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MainRegionAdapterService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/mainRegionAdapter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is responsible for maintaining the MDI interface within the main view.\nBorrowed from the idea of PRISM Region Adpaters in WPF\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeIndex\n                            \n                            \n                                authorizeService\n                            \n                            \n                                config\n                            \n                            \n                                currentStack\n                            \n                            \n                                injector\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                logger\n                            \n                            \n                                messageSvc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addGenericComponentToView\n                            \n                            \n                                addToView\n                            \n                            \n                                removeCurrentView\n                            \n                            \n                                removeFromView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, metaDataService: MetaDataService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metaDataService\n                                                  \n                                                        \n                                                                        MetaDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addGenericComponentToView\n                        \n                    \n                \n            \n            \n                \naddGenericComponentToView(menuTitle: string, component: any, icon: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuTitle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    component\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addToView\n                        \n                    \n                \n            \n            \n                \naddToView(viewId: string, viewType: string, key: any, icon: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    viewType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCurrentView\n                        \n                    \n                \n            \n            \n                \nremoveCurrentView(skipCanClose: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    skipCanClose\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromView\n                        \n                    \n                \n            \n            \n                \nremoveFromView(index: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authorizeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorizeService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BQConfigData\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentStack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewRunningData[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuBar.html":{"url":"components/MenuBar.html","title":"component - MenuBar","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuBar\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/layout/menu-bar/menu-bar.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseMenu\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-menu-bar\n            \n\n\n\n            \n                styleUrls\n                ./menu-bar.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-bar.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeSubmenus\n                            \n                            \n                                menus\n                            \n                            \n                                appInitService\n                            \n                            \n                                authorizeService\n                            \n                            \n                                config\n                            \n                            \n                                dialogService\n                            \n                            \n                                injector\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoading\n                            \n                            \n                                localeService\n                            \n                            \n                                logger\n                            \n                            \n                                messageSvc\n                            \n                            \n                                navigationService\n                            \n                            \n                                runTimeId\n                            \n                            \n                                translate\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isSubmenuActive\n                            \n                            \n                                menuClicked\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSubmenu\n                            \n                            \n                                getParams\n                            \n                            \n                                getPath\n                            \n                            \n                                handleMenuClick\n                            \n                            \n                                    Protected\n                                recurseMapMenu\n                            \n                            \n                                errHandler\n                            \n                            \n                                i18\n                            \n                            \n                                isInRole\n                            \n                            \n                                showError\n                            \n                            \n                                showInfo\n                            \n                            \n                                showSuccess\n                            \n                            \n                                showWarning\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, regionSvc: MainRegionAdapterService, pageTitle: Title)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        regionSvc\n                                                  \n                                                        \n                                                                        MainRegionAdapterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pageTitle\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmenuActive\n                        \n                    \n                \n            \n            \n                \nisSubmenuActive(menu: MenuData)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                MenuData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuClicked\n                        \n                    \n                \n            \n            \n                \nmenuClicked(menuDef: MenuData)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuDef\n                                    \n                                                MenuData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSubmenu\n                        \n                    \n                \n            \n            \n                \ntoggleSubmenu(event: Event, menu: MenuData)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    menu\n                                    \n                                                MenuData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getParams\n                        \n                    \n                \n            \n            \n                \ngetParams(menuDef: MenuData)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuDef\n                                    \n                                                MenuData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPath\n                        \n                    \n                \n            \n            \n                \ngetPath(menuDef: MenuData)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuDef\n                                    \n                                                MenuData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleMenuClick\n                        \n                    \n                \n            \n            \n                \nhandleMenuClick(menu: any, link: string, queryParams: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryParams\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        recurseMapMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    recurseMapMenu(menus: MenuData[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menus\n                                    \n                                                MenuData[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errHandler\n                        \n                    \n                \n            \n            \n                \nerrHandler(error: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        i18\n                        \n                    \n                \n            \n            \n                \ni18(key: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInRole\n                        \n                    \n                \n            \n            \n                \nisInRole(role: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInfo\n                        \n                    \n                \n            \n            \n                \nshowInfo(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showWarning\n                        \n                    \n                \n            \n            \n                \nshowWarning(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeSubmenus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuData[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        appInitService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppInitService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authorizeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorizeService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BQConfigData\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Injector\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocaleService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NavigationService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runTimeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser | null\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n    \n                \n                    ./menu-bar.scss\n                \n                \n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            0 && menu.isVisible\">{{menu.label}}                        {{cm.label}}          0 && cm.isVisible\">                          {{cm.label}}                                                                                      {{scm.label}}                                                                                {{menu.label}}            '\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuBar'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuData.html":{"url":"interfaces/MenuData.html","title":"interface - MenuData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuData\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/config/bq-start-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Define a Menu Item to display in the app\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            additionalQueryParam\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            allowedRoles\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            badgeEventTopic\n                                        \n                                \n                                \n                                        \n                                            childMenus\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isExpanded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isVisible\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            queryParams\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routerLink\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            viewId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        additionalQueryParam\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        additionalQueryParam:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowedRoles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowedRoles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        badgeEventTopic\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        badgeEventTopic:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        childMenus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        childMenus:         MenuData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuData[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If this Menu will display a generic Component in Tabbed MDI View.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isExpanded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isExpanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryParams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queryParams:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routerLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/message.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageBusPayLoad.html":{"url":"classes/MessageBusPayLoad.html","title":"class - MessageBusPayLoad","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageBusPayLoad\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/meta-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                operationType\n                            \n                            \n                                typeName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        operationType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OperationType\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is responsible for showing warning messages in the UI using primeNG\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postToChannel\n                            \n                            \n                                showMessage\n                            \n                            \n                                subscribeToChannel\n                            \n                            \n                                unSubscribeToChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messageServiceProvider: PrimeMS)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageServiceProvider\n                                                  \n                                                        \n                                                                    PrimeMS\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        postToChannel\n                        \n                    \n                \n            \n            \n                \npostToChannel(channelName: string, message: Message)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMessage\n                        \n                    \n                \n            \n            \n                \nshowMessage(msg: string, title: string, type: MessageType)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                MessageType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeToChannel\n                        \n                    \n                \n            \n            \n                \nsubscribeToChannel(channelName: string, subscription: Subscription)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subscription\n                                    \n                                                Subscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unSubscribeToChannel\n                        \n                    \n                \n            \n            \n                \nunSubscribeToChannel(channelName: string, subscriptionId: string)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subscriptionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetaDataResolver.html":{"url":"injectables/MetaDataResolver.html","title":"injectable - MetaDataResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MetaDataResolver\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/meta-data.resolver.ts\n        \n\n\n            \n                Description\n            \n            \n                To load type related metadata from backend\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(metaDataService: MetaDataService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        metaDataService\n                                                  \n                                                        \n                                                                        MetaDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                            ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                            RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MetaDataService.html":{"url":"injectables/MetaDataService.html","title":"injectable - MetaDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MetaDataService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/meta-data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Responsible for fetching entity metadata from backend\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                rootUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTypeMetaData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, config: BQConfigData)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        BQConfigData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTypeMetaData\n                        \n                    \n                \n            \n            \n                \ngetTypeMetaData(typeName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        rootUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataField.html":{"url":"classes/MetadataField.html","title":"class - MetadataField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataField\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/meta-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowRelatedViewInsert\n                            \n                            \n                                allowRelatedViewSelect\n                            \n                            \n                                autoGen\n                            \n                            \n                                caption\n                            \n                            \n                                childFields\n                            \n                            \n                                dataType\n                            \n                            \n                                dateFormat\n                            \n                            \n                                enums\n                            \n                            \n                                foreignKeyName\n                            \n                            \n                                genericDataType\n                            \n                            \n                                hasForeignKey\n                            \n                            \n                                isBool\n                            \n                            \n                                isDate\n                            \n                            \n                                isEnum\n                            \n                            \n                                isGuid\n                            \n                            \n                                isInteger\n                            \n                            \n                                isNullable\n                            \n                            \n                                isNumber\n                            \n                            \n                                isPrimaryKey\n                            \n                            \n                                isString\n                            \n                            \n                                    Optional\n                                maxLength\n                            \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                relatedFormViewId\n                            \n                            \n                                relatedListViewId\n                            \n                            \n                                typeSystem\n                            \n                            \n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromObject\n                            \n                            \n                                getPredicateIndex\n                            \n                            \n                                hasEmailValidator\n                            \n                            \n                                IsValidFilterData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allowRelatedViewInsert\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allowRelatedViewSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        autoGen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        caption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        childFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dictionary\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateFormat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EnumItem[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        foreignKeyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genericDataType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasForeignKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInteger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNullable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPrimaryKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        maxLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataField\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relatedFormViewId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relatedListViewId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeSystem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeSystem\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidationData[]\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromObject(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MetadataField\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPredicateIndex\n                        \n                    \n                \n            \n            \n                \ngetPredicateIndex(predicateKey: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicateKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasEmailValidator\n                        \n                    \n                \n            \n            \n                \nhasEmailValidator()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IsValidFilterData\n                        \n                    \n                \n            \n            \n                \nIsValidFilterData(data: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModelMetadata.html":{"url":"classes/ModelMetadata.html","title":"class - ModelMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModelMetadata\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/meta-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowAdd\n                            \n                            \n                                allowDelete\n                            \n                            \n                                allowEdit\n                            \n                            \n                                allowSelect\n                            \n                            \n                                fields\n                            \n                            \n                                keys\n                            \n                            \n                                typeName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromObject\n                            \n                            \n                                    Public\n                                getPrimaryKeyAsRouteParam\n                            \n                            \n                                    Public\n                                getPrimaryKeyAsUrl\n                            \n                            \n                                    Public\n                                parseRouteParamToKeys\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allowAdd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allowDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allowEdit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allowSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dictionary\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keys\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PrimaryKey[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromObject(obj: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModelMetadata\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getPrimaryKeyAsRouteParam\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPrimaryKeyAsRouteParam(model: T)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getPrimaryKeyAsUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPrimaryKeyAsUrl(values: any[])\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        parseRouteParamToKeys\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseRouteParamToKeys(url: string | null)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ModelValuePipe.html":{"url":"pipes/ModelValuePipe.html","title":"pipe - ModelValuePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ModelValuePipe\n\n\n\n        \n            Info\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/ui/core/model-value.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        modelValue\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, ...args: any[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigationService.html":{"url":"injectables/NavigationService.html","title":"injectable - NavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NavigationService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/navigation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Wrapper service for Navigating between views or in tabbed MDI interface\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                back\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, location: Location, appInitService: AppInitService, regionSvc: MainRegionAdapterService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appInitService\n                                                  \n                                                        \n                                                                        AppInitService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        regionSvc\n                                                  \n                                                        \n                                                                        MainRegionAdapterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        back\n                        \n                    \n                \n            \n            \n                \nback(skipCanClose: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    skipCanClose\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthConfig.html":{"url":"classes/OAuthConfig.html","title":"class - OAuthConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthConfig\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/config/bq-start-config.ts\n        \n\n\n            \n                Description\n            \n            \n                OAuth Configuration Options for the app\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authority\n                            \n                            \n                                client_id\n                            \n                            \n                                post_logout_redirect_uri\n                            \n                            \n                                redirect_uri\n                            \n                            \n                                response_type\n                            \n                            \n                                scope\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    The Authority Url of the Server\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        client_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Client id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post_logout_redirect_uri\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Post Logout URL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirect_uri\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Redirect URL to handle to post login. This should be approved in the Server.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        response_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Response Type to get. Typically \"code\"\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scope\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Scope to get from the Identity/STS server\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResponse.html":{"url":"classes/ODataResponse.html","title":"class - ODataResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResponse\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/odata-response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                entities\n                            \n                            \n                                    Public\n                                    Readonly\n                                entity\n                            \n                            \n                                    Public\n                                    Readonly\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    containsMultipleEntities\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(response: any)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        entities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        entity\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        containsMultipleEntities\n                    \n                \n\n                \n                    \n                        getcontainsMultipleEntities()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderByClause.html":{"url":"classes/OrderByClause.html","title":"class - OrderByClause","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderByClause\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/table-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                Caption\n                            \n                            \n                                    Public\n                                Dir\n                            \n                            \n                                    Public\n                                FieldName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        Caption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        Dir\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        FieldName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PasswordPipe.html":{"url":"pipes/PasswordPipe.html","title":"pipe - PasswordPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PasswordPipe\n\n\n\n        \n            Info\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/ui/core/display.pipes.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        password\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, replaceChar?: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    replaceChar\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PredefinedFilter.html":{"url":"classes/PredefinedFilter.html","title":"class - PredefinedFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PredefinedFilter\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/table-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                GetFilterCluase\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    field\n                                \n                                \n                                    caption\n                                \n                                \n                                    value\n                                \n                                \n                                    filterName\n                                \n                                \n                                    predicate\n                                \n                                \n                                    toValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(param: literal type)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        GetFilterCluase\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetFilterCluase()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         FilterByClause\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n\n                \n                    \n                        getfield()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        caption\n                    \n                \n\n                \n                    \n                        getcaption()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        filterName\n                    \n                \n\n                \n                    \n                        getfilterName()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        predicate\n                    \n                \n\n                \n                    \n                        getpredicate()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        toValue\n                    \n                \n\n                \n                    \n                        gettoValue()\n                    \n                \n\n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Predicate.html":{"url":"classes/Predicate.html","title":"class - Predicate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Predicate\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/meta-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                            \n                                hasSecondParam\n                            \n                            \n                                key\n                            \n                            \n                                resource_key\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        display\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasSecondParam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resource_key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrimaryKey.html":{"url":"classes/PrimaryKey.html","title":"class - PrimaryKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrimaryKey\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/meta-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                keyName\n                            \n                            \n                                keyType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        keyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keyType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RedirectAuthenticationResult.html":{"url":"interfaces/RedirectAuthenticationResult.html","title":"interface - RedirectAuthenticationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RedirectAuthenticationResult\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/api-authorization/authorize.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         AuthenticationResultStatus.Redirect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthenticationResultStatus.Redirect\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteData.html":{"url":"classes/RouteData.html","title":"class - RouteData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteData\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/config/bq-start-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Internal Route Data in Runtime\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formType\n                            \n                            \n                                    Optional\n                                instance\n                            \n                            \n                                isModel\n                            \n                            \n                                key\n                            \n                            \n                                metaData\n                            \n                            \n                                viewDef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormType\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelMetadata\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewData\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouterService.html":{"url":"injectables/RouterService.html","title":"injectable - RouterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RouterService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/router.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Router Wrapper Service to encapsulate between router and mdi interface views\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formType\n                            \n                            \n                                isModal\n                            \n                            \n                                metaData\n                            \n                            \n                                primaryKeyValues\n                            \n                            \n                                queryParams\n                            \n                            \n                                viewDef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToView\n                            \n                            \n                                tableNavigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, regionSvc: MainRegionAdapterService, routeData?: RouteData)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        regionSvc\n                                                  \n                                                        \n                                                                        MainRegionAdapterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routeData\n                                                  \n                                                        \n                                                                        RouteData\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToView\n                        \n                    \n                \n            \n            \n                \nnavigateToView(viewId: string, viewType: string, key: any, options: any)\n                \n            \n\n\n\n\n            \n                \n                    Navigate to a given URL. If inside MDI layout then it will open that route inside a tab window\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    viewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    viewType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    key\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableNavigate\n                        \n                    \n                \n            \n            \n                \ntableNavigate(queryParams: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryParams\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormType\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelMetadata\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        primaryKeyValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewData\n\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RowExpandedEventData.html":{"url":"interfaces/RowExpandedEventData.html","title":"interface - RowExpandedEventData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RowExpandedEventData\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/ui/controls/bq-table/bq-table.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expanded\n                                        \n                                \n                                \n                                        \n                                            row\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RunningConfigHelper.html":{"url":"classes/RunningConfigHelper.html","title":"class - RunningConfigHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RunningConfigHelper\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/config/bq-start-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Runtime Configuration Class to hold various config data and helpers\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                applicationName\n                            \n                            \n                                companyName\n                            \n                            \n                                formViewsByType\n                            \n                            \n                                listViewsByType\n                            \n                            \n                                logoUrl\n                            \n                            \n                                menus\n                            \n                            \n                                tabbedUserInterface\n                            \n                            \n                                    Optional\n                                viewDefaults\n                            \n                            \n                                viewRoutes\n                            \n                            \n                                views\n                            \n                            \n                                viewsById\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPathByViewId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: BQConfigData)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        BQConfigData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        applicationName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formViewsByType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Dictionary\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listViewsByType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Dictionary\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuData[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabbedUserInterface\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        viewDefaults\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { defaultPageSize: 50, otherPageSizes:[25,50,100] }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        views\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewData[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewsById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Dictionary\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPathByViewId\n                        \n                    \n                \n            \n            \n                \ngetPathByViewId(viewId: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    viewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscription.html":{"url":"classes/Subscription.html","title":"class - Subscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscription\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/message.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                callback\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        callback\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SuccessAuthenticationResult.html":{"url":"interfaces/SuccessAuthenticationResult.html","title":"interface - SuccessAuthenticationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SuccessAuthenticationResult\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/api-authorization/authorize.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         AuthenticationResultStatus.Success\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthenticationResultStatus.Success\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Table.html":{"url":"components/Table.html","title":"component - Table","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Table\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/controls/bq-table/bq-table.ts\n\n\n\n    \n        Description\n    \n    \n        BQ Table Component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-table\n            \n\n\n\n            \n                styleUrls\n                ./bq-table.scss\n            \n\n\n\n            \n                templateUrl\n                ./bq-table.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowAdd\n                            \n                            \n                                allowDetails\n                            \n                            \n                                allowEdit\n                            \n                            \n                                    \n                                columns\n                            \n                            \n                                count\n                            \n                            \n                                countSub\n                            \n                            \n                                    \n                                filters\n                            \n                            \n                                formViewId\n                            \n                            \n                                    \n                                internalTable\n                            \n                            \n                                pageSize\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                styleClass\n                            \n                            \n                                tableParamsSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                expandRow\n                            \n                            \n                                getCellValue\n                            \n                            \n                                getFormattedValue\n                            \n                            \n                                getKeyName\n                            \n                            \n                                getKeyValue\n                            \n                            \n                                gotoAddNew\n                            \n                            \n                                gotoDetails\n                            \n                            \n                                gotoEdit\n                            \n                            \n                                lazyLoadData\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                syncWithTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                density\n                            \n                            \n                                equalColumnWidth\n                            \n                            \n                                expandedRowTemplate\n                            \n                            \n                                hideOptionsColumn\n                            \n                            \n                                loading\n                            \n                            \n                                metaData\n                            \n                            \n                                model\n                            \n                            \n                                optionColumnTemplate\n                            \n                            \n                                predefinedFilters\n                            \n                            \n                                resizableColumns\n                            \n                            \n                                showAddButton\n                            \n                            \n                                showGrid\n                            \n                            \n                                showStripedGrid\n                            \n                            \n                                tableParams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loadTableData\n                            \n                            \n                                onRowExpandToggled\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(locale: string, appInitService: AppInitService, routerSvc: RouterService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appInitService\n                                                  \n                                                        \n                                                                        AppInitService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routerSvc\n                                                  \n                                                        \n                                                                        RouterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        density\n                    \n                \n                \n                    \n                        Type :         TableDensity\n\n                    \n                \n                \n                    \n                        Default value : TableDensity.Normal\n                    \n                \n                \n                    \n                        The density of the table\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        equalColumnWidth\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        if the table should have a flexible view or fixed column width\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        expandedRowTemplate\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        use this template for showing expanded row details\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOptionsColumn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Control whether to show or hide the options column\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        metaData\n                    \n                \n                \n                    \n                        Type :         ModelMetadata\n\n                    \n                \n                \n                    \n                        Require the metadata from the view backend\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        The model that table will bind to\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        optionColumnTemplate\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        if you want to customise the options column supply ur own template here\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        predefinedFilters\n                    \n                \n                \n                    \n                        Type :         PredefinedFilter[]\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resizableColumns\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        if the columns width can be changed runtime using a mouse\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showAddButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showGrid\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Should display the Grid Lines of tha table?\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showStripedGrid\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Should display Stripped background for alternate rows?\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tableParams\n                    \n                \n                \n                    \n                        Type :         TableParams\n\n                    \n                \n                \n                    \n                        The Table Param object to act as bridge between the query params of the view\nand the table\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        loadTableData\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        When the table needs to reload data from server this event gets fired.\nTypically you will load data from server on this event\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onRowExpandToggled\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        expandRow\n                        \n                    \n                \n            \n            \n                \nexpandRow(rowData: any, expanded: boolean, ev?: Event)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rowData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expanded\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ev\n                                    \n                                            Event\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellValue\n                        \n                    \n                \n            \n            \n                \ngetCellValue(rowData: any, field: MetadataField)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rowData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    field\n                                    \n                                                MetadataField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormattedValue\n                        \n                    \n                \n            \n            \n                \ngetFormattedValue(rowData: any, field: MetadataField)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rowData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    field\n                                    \n                                                MetadataField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getKeyName\n                        \n                    \n                \n            \n            \n                \ngetKeyName()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getKeyValue\n                        \n                    \n                \n            \n            \n                \ngetKeyValue(rowData: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rowData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gotoAddNew\n                        \n                    \n                \n            \n            \n                \ngotoAddNew()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gotoDetails\n                        \n                    \n                \n            \n            \n                \ngotoDetails(row: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gotoEdit\n                        \n                    \n                \n            \n            \n                \ngotoEdit(row: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lazyLoadData\n                        \n                    \n                \n            \n            \n                \nlazyLoadData(event: TableLazyLoadEvent)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                TableLazyLoadEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncWithTable\n                        \n                    \n                \n            \n            \n                \nsyncWithTable()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allowAdd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allowDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allowEdit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(TableColumn)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subscription\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        filters\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(TableFilter)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formViewId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        internalTable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ngTable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('internalTable', {static: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        styleClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableParamsSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subscription\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n    \n                \n                    ./bq-table.scss\n                \n                :host ::ng-deep {\n  .bq-table-flex table {\n      table-layout: unset;\n  }\n}\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                {{col.caption}}                                                          {{col.caption}}                                                    Options                                                            {{getFormattedValue(data, col.field)}}                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'Table'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableColumn.html":{"url":"components/TableColumn.html","title":"component - TableColumn","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TableColumn\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/controls/bq-table/bq-table-column.ts\n\n\n\n    \n        Description\n    \n    \n        Represents a column layout for the Table\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-table>bq-table-column\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allowSort\n                            \n                            \n                                caption\n                            \n                            \n                                cellStyle\n                            \n                            \n                                cellTemplate\n                            \n                            \n                                field\n                            \n                            \n                                headerStyle\n                            \n                            \n                                sortName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allowSort\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        caption\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        cellStyle\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        cellTemplate\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         MetadataField\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        headerStyle\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sortName\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TableColumn'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableFilter.html":{"url":"components/TableFilter.html","title":"component - TableFilter","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TableFilter\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/controls/bq-table/bq-table-filter.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-table>bq-table-filter\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultPredicate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                caption\n                            \n                            \n                                defaultSearchField\n                            \n                            \n                                displayName\n                            \n                            \n                                field\n                            \n                            \n                                itemSource\n                            \n                            \n                                showTime\n                            \n                            \n                                valueName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        caption\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultSearchField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        displayName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        what display property to use for the dropdown values\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         MetadataField\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemSource\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        If this filter will display values from a predefined list, like a dropdown box\nthen setup the source here\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showTime\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        value property to use for dropdown values\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultPredicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Predicate\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TableFilter'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableFilters.html":{"url":"components/TableFilters.html","title":"component - TableFilters","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TableFilters\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/controls/bq-table/bq-table-filters.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-table-filters\n            \n\n\n\n            \n                styleUrls\n                ./bq-table-filters.scss\n            \n\n\n\n            \n                templateUrl\n                ./bq-table-filters.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appliedFilters\n                            \n                            \n                                container\n                            \n                            \n                                customFilters\n                            \n                            \n                                documentClickListener\n                            \n                            \n                                    Public\n                                el\n                            \n                            \n                                isContainerClicked\n                            \n                            \n                                    Public\n                                renderer\n                            \n                            \n                                showMenu\n                            \n                            \n                                tableParamsSub\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCondtion\n                            \n                            \n                                apply\n                            \n                            \n                                bindDocumentClickListener\n                            \n                            \n                                clear\n                            \n                            \n                                getDefaultFilterName\n                            \n                            \n                                gotoAddView\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAdd\n                            \n                            \n                                onContainerClick\n                            \n                            \n                                onRemove\n                            \n                            \n                                pfMenuClicked\n                            \n                            \n                                removeConditon\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                unbindDocumentClickListener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                metaData\n                            \n                            \n                                predefinedFilters\n                            \n                            \n                                showAddButton\n                            \n                            \n                                tableParams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addButtonClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(msgSvc: MessageService, el: ElementRef, renderer: Renderer2, zone: NgZone, translate: TranslateService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        msgSvc\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        metaData\n                    \n                \n                \n                    \n                        Type :         ModelMetadata\n\n                    \n                \n                \n                    \n                        Require the metadata from the view backend\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        predefinedFilters\n                    \n                \n                \n                    \n                        Type :         PredefinedFilter[]\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showAddButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tableParams\n                    \n                \n                \n                    \n                        Type :         TableParams\n\n                    \n                \n                \n                    \n                        The Table Param object to act as bridge between the query params of the view\nand the table\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addButtonClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCondtion\n                        \n                    \n                \n            \n            \n                \naddCondtion()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bindDocumentClickListener\n                        \n                    \n                \n            \n            \n                \nbindDocumentClickListener()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultFilterName\n                        \n                    \n                \n            \n            \n                \ngetDefaultFilterName()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     TableFilter | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gotoAddView\n                        \n                    \n                \n            \n            \n                \ngotoAddView()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAdd\n                        \n                    \n                \n            \n            \n                \nonAdd(event: literal type)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onContainerClick\n                        \n                    \n                \n            \n            \n                \nonContainerClick()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemove\n                        \n                    \n                \n            \n            \n                \nonRemove(event: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pfMenuClicked\n                        \n                    \n                \n            \n            \n                \npfMenuClicked(filter: PredefinedFilter, event: MouseEvent)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                PredefinedFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeConditon\n                        \n                    \n                \n            \n            \n                \nremoveConditon(index: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unbindDocumentClickListener\n                        \n                    \n                \n            \n            \n                \nunbindDocumentClickListener()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appliedFilters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterByClause[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLDivElement | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customFilters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterByClause[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        documentClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isContainerClicked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Renderer2\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableParamsSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subscription\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n    \n                \n                    ./bq-table-filters.scss\n                \n                .bq-filter-overlay-container {\n  position: relative;\n}\n\n.bq-filter-overlay {\n  width: 30vw;\n  position: absolute;\n  right: 0;\n  left: unset;\n  z-index: 9999;\n  margin-top:35px;\n  padding: 5px;\n  visibility: hidden;\n  display: none;\n\n  &.visible {\n    visibility: inherit;\n    display: inherit;\n  }\n}\n\n@media screen and (max-width: 576px) {\n  .bq-filter-overlay-container {\n    position: revert;\n  }\n  .bq-filter-overlay {\n    left: 15px;\n    right: 15px;\n    width: unset;\n  }\n}\n\n.bq-table-custom-filter-container{\n  flex-grow: 90;\n}\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    0\">                         {{item}}                                                                      0\">                              {{\\'bq-start.filters.title\\' | translate}}                                                                                                    {{pf.filterName}}                                                                                      {{\\'bq-start.filters.customTitle\\' | translate}}                                                                                                  0\">                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TableFilters'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableParams.html":{"url":"classes/TableParams.html","title":"class - TableParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableParams\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/table-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                count\n                            \n                            \n                                    Public\n                                expand\n                            \n                            \n                                    Public\n                                filterByCollection\n                            \n                            \n                                    Public\n                                orderByCollection\n                            \n                            \n                                    Public\n                                skip\n                            \n                            \n                                    Public\n                                top\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFilter\n                            \n                            \n                                addFilters\n                            \n                            \n                                clearFilters\n                            \n                            \n                                destroy\n                            \n                            \n                                getChanges\n                            \n                            \n                                gotoPage\n                            \n                            \n                                removeFilter\n                            \n                            \n                                serverDataLoaded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(routerSvc: RouterService, appSvc: AppInitService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routerSvc\n                                                  \n                                                        \n                                                                        RouterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appSvc\n                                                  \n                                                        \n                                                                        AppInitService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        expand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filterByCollection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        orderByCollection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        top\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFilter\n                        \n                    \n                \n            \n            \n                \naddFilter(filter: FilterByClause)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterByClause\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addFilters\n                        \n                    \n                \n            \n            \n                \naddFilters(filters: FilterByClause[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                FilterByClause[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearFilters\n                        \n                    \n                \n            \n            \n                \nclearFilters()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChanges\n                        \n                    \n                \n            \n            \n                \ngetChanges()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gotoPage\n                        \n                    \n                \n            \n            \n                \ngotoPage(param: literal type)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFilter\n                        \n                    \n                \n            \n            \n                \nremoveFilter(filter: FilterByClause)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterByClause\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDataLoaded\n                        \n                    \n                \n            \n            \n                \nserverDataLoaded(data: ODataResponse)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopBar.html":{"url":"components/TopBar.html","title":"component - TopBar","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopBar\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/layout/top-bar/top-bar.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-top-bar\n            \n\n\n\n            \n                styleUrls\n                ./top-bar.scss\n            \n\n\n\n            \n                templateUrl\n                ./top-bar.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeMenuIndex\n                            \n                            \n                                authorizeService\n                            \n                            \n                                config\n                            \n                            \n                                injector\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                loginPath\n                            \n                            \n                                logo\n                            \n                            \n                                logoutPath\n                            \n                            \n                                outsideClickListener\n                            \n                            \n                                subscription\n                            \n                            \n                                    \n                                topbarMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticationChanged\n                            \n                            \n                                bindOutsideClickListener\n                            \n                            \n                                isOutsideTopbarMenuClicked\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onMenuButtonClick\n                            \n                            \n                                onOverlayMenuEnter\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                unbindOutsideClickListener\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                menuButtonClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        menuButtonClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationChanged\n                        \n                    \n                \n            \n            \n                \nauthenticationChanged(status: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bindOutsideClickListener\n                        \n                    \n                \n            \n            \n                \nbindOutsideClickListener()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOutsideTopbarMenuClicked\n                        \n                    \n                \n            \n            \n                \nisOutsideTopbarMenuClicked(event: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMenuButtonClick\n                        \n                    \n                \n            \n            \n                \nonMenuButtonClick(event: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOverlayMenuEnter\n                        \n                    \n                \n            \n            \n                \nonOverlayMenuEnter(event: AnimationEvent)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            AnimationEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu(event: Event, index: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unbindOutsideClickListener\n                        \n                    \n                \n            \n            \n                \nunbindOutsideClickListener()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeMenuIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authorizeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorizeService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BQConfigData\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Injector\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outsideClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subscription\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        topbarMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('topbarMenu')\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n    \n                \n                    ./top-bar.scss\n                \n                .logo-margin{\n  margin-right: 10px;\n}\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                     Profile                                                                         Logout                                                     Login                                  '\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TopBar'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopMenuBar.html":{"url":"components/TopMenuBar.html","title":"component - TopMenuBar","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopMenuBar\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/layout/top-menu-bar/top-menu-bar.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseMenu\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bq-top-menu-bar\n            \n\n\n\n\n\n            \n                template\n                \n  \n    \n  \n  \n    \n      \n    \n    \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                loginPath\n                            \n                            \n                                logo\n                            \n                            \n                                logoutPath\n                            \n                            \n                                menuData\n                            \n                            \n                                menuTarget\n                            \n                            \n                                profileUrl\n                            \n                            \n                                topRightMenus\n                            \n                            \n                                userMenus\n                            \n                            \n                                appInitService\n                            \n                            \n                                authorizeService\n                            \n                            \n                                config\n                            \n                            \n                                dialogService\n                            \n                            \n                                injector\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isLoading\n                            \n                            \n                                localeService\n                            \n                            \n                                logger\n                            \n                            \n                                messageSvc\n                            \n                            \n                                navigationService\n                            \n                            \n                                runTimeId\n                            \n                            \n                                translate\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticationChanged\n                            \n                            \n                                handleTopMenuClick\n                            \n                            \n                                mapMenuDataToPrimeMenu\n                            \n                            \n                                getParams\n                            \n                            \n                                getPath\n                            \n                            \n                                handleMenuClick\n                            \n                            \n                                    Protected\n                                recurseMapMenu\n                            \n                            \n                                errHandler\n                            \n                            \n                                i18\n                            \n                            \n                                isInRole\n                            \n                            \n                                showError\n                            \n                            \n                                showInfo\n                            \n                            \n                                showSuccess\n                            \n                            \n                                showWarning\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTopRightMenuClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, regionSvc: MainRegionAdapterService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        regionSvc\n                                                  \n                                                        \n                                                                        MainRegionAdapterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onTopRightMenuClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationChanged\n                        \n                    \n                \n            \n            \n                \nauthenticationChanged(status: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleTopMenuClick\n                        \n                    \n                \n            \n            \n                \nhandleTopMenuClick(ev: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapMenuDataToPrimeMenu\n                        \n                    \n                \n            \n            \n                \nmapMenuDataToPrimeMenu(menu: MenuData)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                MenuData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MenuItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getParams\n                        \n                    \n                \n            \n            \n                \ngetParams(menuDef: MenuData)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuDef\n                                    \n                                                MenuData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPath\n                        \n                    \n                \n            \n            \n                \ngetPath(menuDef: MenuData)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menuDef\n                                    \n                                                MenuData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleMenuClick\n                        \n                    \n                \n            \n            \n                \nhandleMenuClick(menu: any, link: string, queryParams: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryParams\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        recurseMapMenu\n                        \n                    \n                \n            \n            \n                \n                    \n                    recurseMapMenu(menus: MenuData[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menus\n                                    \n                                                MenuData[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errHandler\n                        \n                    \n                \n            \n            \n                \nerrHandler(error: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        i18\n                        \n                    \n                \n            \n            \n                \ni18(key: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInRole\n                        \n                    \n                \n            \n            \n                \nisInRole(role: string[])\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInfo\n                        \n                    \n                \n            \n            \n                \nshowInfo(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showWarning\n                        \n                    \n                \n            \n            \n                \nshowWarning(message: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuData[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuTarget\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '_self'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/Identity/Account/Manage'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topRightMenus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TopRightMenuData[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userMenus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        appInitService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppInitService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authorizeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthorizeService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BQConfigData\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Injector\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        localeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocaleService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigationService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NavigationService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runTimeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateService\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser | null\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  '\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TopMenuBar'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TopRightMenuData.html":{"url":"interfaces/TopRightMenuData.html","title":"interface - TopRightMenuData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TopRightMenuData\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/config/bq-start-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Define a Menu Item to display in the app\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buttonClass\n                                        \n                                \n                                \n                                        \n                                            eventName\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buttonClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buttonClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeSystem.html":{"url":"classes/TypeSystem.html","title":"class - TypeSystem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeSystem\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/meta-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                predicates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                escapeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, predicates: Predicate[])\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        predicates\n                                                  \n                                                        \n                                                                        Predicate[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Predicate[]\n\n                    \n                \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        escapeValue\n                        \n                    \n                \n            \n            \n                \nescapeValue(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationData.html":{"url":"interfaces/ValidationData.html","title":"interface - ValidationData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationData\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/meta-data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorMessage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isEmail\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isRequired\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxRange\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minRange\n                                        \n                                \n                                \n                                        \n                                            otherProperty\n                                        \n                                \n                                \n                                        \n                                            otherPropertyDisplayName\n                                        \n                                \n                                \n                                        \n                                            pattern\n                                        \n                                \n                                \n                                        \n                                            validationType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isEmail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isEmail:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRequired\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isRequired:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxRange:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minRange:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otherProperty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        otherProperty:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otherPropertyDisplayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        otherPropertyDisplayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pattern:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validationType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validationType:         ValidationType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValidationType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ViewData.html":{"url":"interfaces/ViewData.html","title":"interface - ViewData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ViewData\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/config/bq-start-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Define a view, i.e. metadata of the view\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideBreadCrumb\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            typeName\n                                        \n                                \n                                \n                                        \n                                            viewId\n                                        \n                                \n                                \n                                        \n                                            viewType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The component that is resposible for this View Display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideBreadCrumb\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideBreadCrumb:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Do not show breadcrumb for this view in normal navigation mode\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title/Label of the View\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typeName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        typeName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The Entity Type from the Server which will constitute this View Data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Should be a unique Id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewType:         ViewType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ViewType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is this a List or Detail Form view\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewOptionalData.html":{"url":"classes/ViewOptionalData.html","title":"class - ViewOptionalData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewOptionalData\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/models/meta-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                $expandClause\n                            \n                            \n                                    Optional\n                                $filterClause\n                            \n                            \n                                    Optional\n                                $selectClause\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        $expandClause\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        $filterClause\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        $selectClause\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ViewRunningData.html":{"url":"classes/ViewRunningData.html","title":"class - ViewRunningData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ViewRunningData\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/services/mainRegionAdapter.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                            \n                                routeData\n                            \n                            \n                                viewDef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routeData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RouteData\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewData\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewWrapper.html":{"url":"components/ViewWrapper.html","title":"component - ViewWrapper","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewWrapper\n\n\n\n        \n            Info\n        \n        \n            Styles\n        \n\n\n\n    \n    File\n\n\n    projects/bq-start-prime/src/lib/ui/controls/view-wrapper/view-wrapper.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                view-wrapper\n            \n\n\n\n            \n                styleUrls\n                ./view-wrapper.scss\n            \n\n\n\n            \n                templateUrl\n                ./view-wrapper.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(vwService: ViewWrapperService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        vwService\n                                                  \n                                                        \n                                                                        ViewWrapperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n    \n                \n                    ./view-wrapper.scss\n                \n                \n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppLayout', 'selector': 'bq-app-layout'},{'name': 'BaseComponent', 'selector': ''},{'name': 'BaseField', 'selector': 'bq-form > base-field'},{'name': 'BaseFormView', 'selector': ''},{'name': 'BaseListView', 'selector': ''},{'name': 'BqDropdownField', 'selector': 'bq-dropdown-field'},{'name': 'BqForm', 'selector': 'bq-form'},{'name': 'BqPasswordField', 'selector': 'bq-password-field'},{'name': 'BqTextArea', 'selector': 'bq-text-area'},{'name': 'BqTextField', 'selector': 'bq-text-field'},{'name': 'Breadcrumb', 'selector': 'breadcrumb'},{'name': 'ChipsMenu', 'selector': 'bq-chips-menu'},{'name': 'CustomFilter', 'selector': 'bq-table-custom-filter'},{'name': 'DynamicLoaderComponent', 'selector': 'dyn-loader'},{'name': 'DynamicMDILoaderComponent', 'selector': 'dyn-mdi-loader'},{'name': 'FooterBar', 'selector': 'bq-footer-bar'},{'name': 'FormBlock', 'selector': 'bq-form-block'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginMenuComponent', 'selector': 'app-login-menu'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MDIComponent', 'selector': 'bq-mdi'},{'name': 'MDILayoutComponent', 'selector': 'bq-mdi-app-layout'},{'name': 'MenuBar', 'selector': 'bq-menu-bar'},{'name': 'Table', 'selector': 'bq-table'},{'name': 'TableColumn', 'selector': 'bq-table>bq-table-column'},{'name': 'TableFilter', 'selector': 'bq-table>bq-table-filter'},{'name': 'TableFilters', 'selector': 'bq-table-filters'},{'name': 'TopBar', 'selector': 'bq-top-bar'},{'name': 'TopMenuBar', 'selector': 'bq-top-menu-bar'},{'name': 'ViewWrapper', 'selector': 'view-wrapper'}];\n    var DIRECTIVES = [{'name': 'BQTemplate', 'selector': '[bqTemplate]'},{'name': 'CompareDirective', 'selector': '[compare]'},{'name': 'ControlContainerDirective', 'selector': '[ngModel],[ngModelGroup]'},{'name': 'DynamicHostDirective', 'selector': '[dynHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewWrapper'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViewWrapperService.html":{"url":"injectables/ViewWrapperService.html","title":"injectable - ViewWrapperService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ViewWrapperService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/bq-start-prime/src/lib/ui/controls/view-wrapper/view-wrapper.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                attachToView$\n                            \n                            \n                                    Optional\n                                currentView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setupView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setupView\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupView(view: BaseFormView)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    view\n                                    \n                                                BaseFormView\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        attachToView$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject|null>(null)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        currentView\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseFormView\n\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.3\n        \n            @angular/common : ^16.2.3\n        \n            @angular/compiler : ^16.2.3\n        \n            @angular/core : ^16.2.3\n        \n            @angular/forms : ^16.2.3\n        \n            @angular/platform-browser : ^16.2.3\n        \n            @angular/platform-browser-dynamic : ^16.2.3\n        \n            @angular/router : ^16.2.3\n        \n            @babel/core : ^7.21.4\n        \n            @ng-select/ng-option-highlight : ^11.1.1\n        \n            @ng-select/ng-select : ^11.1.1\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @ngx-translate/http-loader : ^7.0.0\n        \n            angular-auth-oidc-client : ^15.0.4\n        \n            core-js : ^3.30.1\n        \n            lodash-es : ^4.17.21\n        \n            luxon : ^3.4.2\n        \n            moment-timezone : ^0.5.43\n        \n            ng-keyboard-shortcuts : ^13.0.8\n        \n            oidc-client : ^1.11.5\n        \n            primeflex : ^3.3.0\n        \n            primeicons : ^6.0.1\n        \n            primeng : ^16.3.1\n        \n            rxjs : ~7.8.1\n        \n            tslib : ^2.3.0\n        \n            uuid : ^9.0.0\n        \n            validator : ^13.9.0\n        \n            zone.js : ~0.13.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthenticationResultStatus   (projects/.../authorize.service.ts)\n                        \n                        \n                            FormType   (projects/.../bq-start-config.ts)\n                        \n                        \n                            LogLevel   (projects/.../log.service.ts)\n                        \n                        \n                            MessageType   (projects/.../message.service.ts)\n                        \n                        \n                            OperationType   (projects/.../meta-data.ts)\n                        \n                        \n                            RecordState   (projects/.../base-model.ts)\n                        \n                        \n                            TableDensity   (projects/.../bq-table.ts)\n                        \n                        \n                            ValidationType   (projects/.../meta-data.ts)\n                        \n                        \n                            ViewType   (projects/.../bq-start-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/bq-start-prime/src/lib/api-authorization/authorize.service.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthenticationResultStatus\n                    \n                \n                        \n                            \n                                 Success\n                            \n                        \n                        \n                            \n                                 Redirect\n                            \n                        \n                        \n                            \n                                 Fail\n                            \n                        \n            \n        \n\n    projects/bq-start-prime/src/lib/config/bq-start-config.ts\n    \n        \n            \n                \n                    \n                        \n                        FormType\n                    \n                \n                    \n                        \n                            Type of Form view\n\n                        \n                    \n                        \n                            \n                                 List\n                            \n                        \n                        \n                            \n                                 New\n                            \n                        \n                        \n                            \n                                 Edit\n                            \n                        \n                        \n                            \n                                 Details\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ViewType\n                    \n                \n                    \n                        \n                            BQ Form can be either List or Form/Details View\n\n                        \n                    \n                        \n                            \n                                 List\n                            \n                        \n                        \n                            \n                                 Form\n                            \n                        \n            \n        \n\n    projects/bq-start-prime/src/lib/services/log/log.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                    \n                        \n                            Log Level Types\n\n                        \n                    \n                        \n                            \n                                 All\n                            \n                        \n                        \n                            \n                                 Debug\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 Info\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Warn\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 Fatal\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 Off\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    projects/bq-start-prime/src/lib/services/message.service.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageType\n                    \n                \n                        \n                            \n                                 info\n                            \n                        \n                        \n                            \n                                 warn\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 error\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    projects/bq-start-prime/src/lib/models/meta-data.ts\n    \n        \n            \n                \n                    \n                        \n                        OperationType\n                    \n                \n                        \n                            \n                                 Added\n                            \n                        \n                        \n                            \n                                 Updated\n                            \n                        \n                        \n                            \n                                 Deleted\n                            \n                        \n                        \n                            \n                                 ServerUpdated\n                            \n                        \n                        \n                            \n                                 ServerAdded\n                            \n                        \n                        \n                            \n                                 ServerDeleted\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ValidationType\n                    \n                \n                        \n                            \n                                 required\n                            \n                        \n                        \n                            \n                                 maxLength\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 minLength\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 range\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 regularExpression\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 compare\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 email\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 phone\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n            \n        \n\n    projects/bq-start-prime/src/lib/models/base-model.ts\n    \n        \n            \n                \n                    \n                        \n                        RecordState\n                    \n                \n                        \n                            \n                                 Unchanged\n                            \n                        \n                        \n                            \n                                Value : Unchanged\n                            \n                        \n                        \n                            \n                                 Inserted\n                            \n                        \n                        \n                            \n                                Value : Inserted\n                            \n                        \n                        \n                            \n                                 Modified\n                            \n                        \n                        \n                            \n                                Value : Modified\n                            \n                        \n                        \n                            \n                                 Deleted\n                            \n                        \n                        \n                            \n                                Value : Deleted\n                            \n                        \n            \n        \n\n    projects/bq-start-prime/src/lib/ui/controls/bq-table/bq-table.ts\n    \n        \n            \n                \n                    \n                        \n                        TableDensity\n                    \n                \n                    \n                        \n                            Table Density Enum to Control the Visual State of the Table\n\n                        \n                    \n                        \n                            \n                                 Normal\n                            \n                        \n                        \n                            \n                                 Compact\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 Large\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            canCallAfterInitComplete   (projects/.../base-form-view.ts)\n                        \n                        \n                            canCallAfterInitComplete   (projects/.../base-list-view.ts)\n                        \n                        \n                            canCallAfterServerDataReceived   (projects/.../base-form-view.ts)\n                        \n                        \n                            canCallAfterServerDataReceived   (projects/.../base-list-view.ts)\n                        \n                        \n                            canCallBeforeDelete   (projects/.../base-form-view.ts)\n                        \n                        \n                            canCallBeforeSave   (projects/.../base-form-view.ts)\n                        \n                        \n                            initializeApp   (projects/.../bq-start-prime.module.ts)\n                        \n                        \n                            initializeApp   (projects/.../app-init.service.ts)\n                        \n                        \n                            nz   (projects/.../compare.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/bq-start-prime/src/lib/ui/core/base-form-view.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        canCallAfterInitComplete\n                        \n                    \n                \n            \n            \n                \ncanCallAfterInitComplete(arg: Object)\n                \n            \n\n\n\n\n            \n                \n                    Type Guard Functions for casting Interface Implementation Check runtime if\ninherited classes has the events functions that can be called runtime\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IBaseFormViewEvents\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canCallAfterServerDataReceived\n                        \n                    \n                \n            \n            \n                \ncanCallAfterServerDataReceived(arg: Object)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IBaseFormViewEvents\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canCallBeforeDelete\n                        \n                    \n                \n            \n            \n                \ncanCallBeforeDelete(arg: Object)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IEditFormViewEvents\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canCallBeforeSave\n                        \n                    \n                \n            \n            \n                \ncanCallBeforeSave(arg: Object)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IEditFormViewEvents\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/bq-start-prime/src/lib/ui/core/base-list-view.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        canCallAfterInitComplete\n                        \n                    \n                \n            \n            \n                \ncanCallAfterInitComplete(arg: Object)\n                \n            \n\n\n\n\n            \n                \n                    Type Guard Functions for casting Interface Implementation Check runtime if\ninherited classes has the events functions that can be called runtime\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IBaseListViewEvents\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canCallAfterServerDataReceived\n                        \n                    \n                \n            \n            \n                \ncanCallAfterServerDataReceived(arg: Object)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IBaseListViewEvents\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/bq-start-prime/src/lib/bq-start-prime.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initializeApp\n                        \n                    \n                \n            \n            \n                \ninitializeApp(appInitService: AppInitService)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appInitService\n                                    \n                                                AppInitService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/bq-start-prime/src/lib/services/app-init.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initializeApp\n                        \n                    \n                \n            \n            \n                \ninitializeApp(appInitService: AppInitService)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appInitService\n                                    \n                                                AppInitService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/bq-start-prime/src/lib/ui/controls/validators/compare.directive.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nz\n                        \n                    \n                \n            \n            \n                \nnz(val: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBQ Start Prime Angular\nPlease visit BQ Start on how to use this Package\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        BQStartPrimeModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    30 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    30 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    20 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IAuthenticationResult   (projects/.../authorize.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/bq-start-prime/src/lib/api-authorization/authorize.service.ts\n    \n    \n        \n            \n                \n                    \n                    IAuthenticationResult\n                \n            \n            \n                \n                        SuccessAuthenticationResult | FailureAuthenticationResult | RedirectAuthenticationResult\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _singleton   (projects/.../log.service.ts)\n                        \n                        \n                            ALL_PREDICATES   (projects/.../meta-data.ts)\n                        \n                        \n                            ApplicationName   (projects/.../api-authorization.constants.ts)\n                        \n                        \n                            applicationPaths   (projects/.../api-authorization.constants.ts)\n                        \n                        \n                            ApplicationPaths   (projects/.../api-authorization.constants.ts)\n                        \n                        \n                            BQConfigService   (projects/.../bq-start-config.ts)\n                        \n                        \n                            CHIPS_VALUE_ACCESSOR   (projects/.../bq-chips-menu.ts)\n                        \n                        \n                            containerFactory   (projects/.../control-container.provider.ts)\n                        \n                        \n                            controlContainerProvider   (projects/.../control-container.provider.ts)\n                        \n                        \n                            DataServiceToken   (projects/.../generic-data.service.ts)\n                        \n                        \n                            LocaleProvider   (projects/.../locale.service.ts)\n                        \n                        \n                            LoginActions   (projects/.../api-authorization.constants.ts)\n                        \n                        \n                            LogoutActions   (projects/.../api-authorization.constants.ts)\n                        \n                        \n                            numberPredicates   (projects/.../meta-data.ts)\n                        \n                        \n                            numberPredicatesWithoutBetween   (projects/.../meta-data.ts)\n                        \n                        \n                            onlyEuqals   (projects/.../meta-data.ts)\n                        \n                        \n                            PREDICATE_BETWEEN   (projects/.../meta-data.ts)\n                        \n                        \n                            PREDICATE_CONTAINS   (projects/.../meta-data.ts)\n                        \n                        \n                            PREDICATE_ENDS   (projects/.../meta-data.ts)\n                        \n                        \n                            PREDICATE_EQUALS   (projects/.../meta-data.ts)\n                        \n                        \n                            PREDICATE_GREATER   (projects/.../meta-data.ts)\n                        \n                        \n                            PREDICATE_GREATEREQUALS   (projects/.../meta-data.ts)\n                        \n                        \n                            PREDICATE_ISNOTNULL   (projects/.../meta-data.ts)\n                        \n                        \n                            PREDICATE_ISNULL   (projects/.../meta-data.ts)\n                        \n                        \n                            PREDICATE_LESS   (projects/.../meta-data.ts)\n                        \n                        \n                            PREDICATE_LESSEQUALS   (projects/.../meta-data.ts)\n                        \n                        \n                            PREDICATE_NOT_CONTAINS   (projects/.../meta-data.ts)\n                        \n                        \n                            PREDICATE_STARTS   (projects/.../meta-data.ts)\n                        \n                        \n                            PUBLISHERS_FILE   (projects/.../log.service.ts)\n                        \n                        \n                            QueryParameterNames   (projects/.../api-authorization.constants.ts)\n                        \n                        \n                            ReturnUrlType   (projects/.../api-authorization.constants.ts)\n                        \n                        \n                            TYPE_SYSTEM   (projects/.../meta-data.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/bq-start-prime/src/lib/services/log/log.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _singleton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InternalLogService | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PUBLISHERS_FILE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/assets/log-publishers.json\"\n                    \n                \n\n\n        \n    \n\n    projects/bq-start-prime/src/lib/models/meta-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_PREDICATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  'contains': PREDICATE_CONTAINS,\n  'not contains': PREDICATE_NOT_CONTAINS,\n  'starts': PREDICATE_STARTS,\n  'ends': PREDICATE_ENDS,\n  '=': PREDICATE_EQUALS,\n  '>': PREDICATE_GREATER,\n  '=': PREDICATE_GREATEREQUALS,\n  '\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberPredicates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [PREDICATE_EQUALS, PREDICATE_GREATER, PREDICATE_GREATEREQUALS, PREDICATE_LESS, PREDICATE_LESSEQUALS, PREDICATE_BETWEEN, PREDICATE_ISNULL, PREDICATE_ISNOTNULL]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberPredicatesWithoutBetween\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [PREDICATE_EQUALS, PREDICATE_GREATER, PREDICATE_GREATEREQUALS, PREDICATE_LESS, PREDICATE_LESSEQUALS, PREDICATE_ISNULL, PREDICATE_ISNOTNULL]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onlyEuqals\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [PREDICATE_EQUALS]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATE_BETWEEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Predicate\n\n                    \n                \n                \n                    \n                        Default value : Object.assign(new Predicate(), { key: 'between', display: 'bq-start.filters.between', resource_key: 'predicate_between', hasSecondParam: true })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATE_CONTAINS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Predicate\n\n                    \n                \n                \n                    \n                        Default value : Object.assign(new Predicate(), { key: 'contains', display: 'bq-start.filters.contains', resource_key: 'predicate_contains', hasSecondParam: false })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATE_ENDS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Predicate\n\n                    \n                \n                \n                    \n                        Default value : Object.assign(new Predicate(), { key: 'ends', display: 'bq-start.filters.endsWith', resource_key: 'predicate_ends', hasSecondParam: false })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATE_EQUALS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Predicate\n\n                    \n                \n                \n                    \n                        Default value : Object.assign(new Predicate(), { key: '=', display: 'bq-start.filters.eq', resource_key: 'predicate_equals', hasSecondParam: false })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATE_GREATER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Predicate\n\n                    \n                \n                \n                    \n                        Default value : Object.assign(new Predicate(), { key: '>', display: 'bq-start.filters.gt', resource_key: 'predicate_greater', hasSecondParam: false })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATE_GREATEREQUALS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Predicate\n\n                    \n                \n                \n                    \n                        Default value : Object.assign(new Predicate(), { key: '>=', display: 'bq-start.filters.ge', resource_key: 'predicate_greterequals', hasSecondParam: false })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATE_ISNOTNULL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Predicate\n\n                    \n                \n                \n                    \n                        Default value : Object.assign(new Predicate(), { key: 'is not set', display: 'bq-start.filters.isNotSet', resource_key: 'predicate_is_not_set', hasSecondParam: false })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATE_ISNULL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Predicate\n\n                    \n                \n                \n                    \n                        Default value : Object.assign(new Predicate(), { key: 'is set', display: 'bq-start.filters.isSet', resource_key: 'predicate_is_set', hasSecondParam: false })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATE_LESS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Predicate\n\n                    \n                \n                \n                    \n                        Default value : Object.assign(new Predicate(), { key: '\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATE_LESSEQUALS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Predicate\n\n                    \n                \n                \n                    \n                        Default value : Object.assign(new Predicate(), { key: '\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATE_NOT_CONTAINS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Predicate\n\n                    \n                \n                \n                    \n                        Default value : Object.assign(new Predicate(), { key: 'not contains', display: 'bq-start.filters.notContains', resource_key: 'predicate_not_contains', hasSecondParam: false })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATE_STARTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Predicate\n\n                    \n                \n                \n                    \n                        Default value : Object.assign(new Predicate(), { key: 'starts', display: 'bq-start.filters.startsWith', resource_key: 'predicate_starts', hasSecondParam: false })\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TYPE_SYSTEM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dictionary\n\n                    \n                \n                \n                    \n                        Default value : {\n  \"Boolean\": new TypeSystem('Boolean', onlyEuqals),\n  \"Byte\": new TypeSystem('Byte', onlyEuqals),\n  \"SByte\": new TypeSystem('SByte', onlyEuqals),\n  \"Char\": new TypeSystem('Char', onlyEuqals),\n  \"Decimal\": new TypeSystem('Decimal', numberPredicates),\n  \"Double\": new TypeSystem('Double', numberPredicates),\n  \"Single\": new TypeSystem('Single', numberPredicates),\n  \"Int32\": new TypeSystem('Int32', numberPredicates),\n  \"Int64\": new TypeSystem('Int64', numberPredicates),\n  \"UInt32\": new TypeSystem('UInt32', numberPredicates),\n  \"UInt64\": new TypeSystem('UInt64', numberPredicates),\n  \"String\": new TypeSystem('String', [PREDICATE_CONTAINS, PREDICATE_NOT_CONTAINS, PREDICATE_STARTS, PREDICATE_ENDS, ...numberPredicatesWithoutBetween]),\n  \"Enum\": new TypeSystem('Enum', onlyEuqals),\n  \"DateTime\": new TypeSystem('DateTime', numberPredicates),\n  \"Guid\": new TypeSystem('Guid', onlyEuqals),\n}\n                    \n                \n\n\n        \n    \n\n    projects/bq-start-prime/src/lib/api-authorization/api-authorization.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApplicationName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applicationPaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationPathsType\n\n                    \n                \n                \n                    \n                        Default value : {\n  DefaultLoginRedirectPath: '/',\n  ApiAuthorizationClientConfigurationUrl: `_configuration/${ApplicationName}`,\n  Login: `authentication/${LoginActions.Login}`,\n  LoginFailed: `authentication/${LoginActions.LoginFailed}`,\n  LoginCallback: `authentication/${LoginActions.LoginCallback}`,\n  Register: `authentication/${LoginActions.Register}`,\n  Profile: `authentication/${LoginActions.Profile}`,\n  LogOut: `authentication/${LogoutActions.Logout}`,\n  LoggedOut: `authentication/${LogoutActions.LoggedOut}`,\n  LogOutCallback: `authentication/${LogoutActions.LogoutCallback}`,\n  LoginPathComponents: [],\n  LoginFailedPathComponents: [],\n  LoginCallbackPathComponents: [],\n  RegisterPathComponents: [],\n  ProfilePathComponents: [],\n  LogOutPathComponents: [],\n  LoggedOutPathComponents: [],\n  LogOutCallbackPathComponents: [],\n  IdentityRegisterPath: 'Identity/Account/Register',\n  IdentityManagePath: 'Identity/Account/Manage'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ApplicationPaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationPathsType\n\n                    \n                \n                \n                    \n                        Default value : applicationPaths\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoginActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  Login: 'login',\n  LoginCallback: 'login-callback',\n  LoginFailed: 'login-failed',\n  Profile: 'profile',\n  Register: 'register'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LogoutActions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  LogoutCallback: 'logout-callback',\n  Logout: 'logout',\n  LoggedOut: 'logged-out'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QueryParameterNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  ReturnUrl: ReturnUrlType,\n  Message: 'message'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReturnUrlType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'returnUrl'\n                    \n                \n\n\n        \n    \n\n    projects/bq-start-prime/src/lib/config/bq-start-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BQConfigService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\"BQConfig\")\n                    \n                \n\n            \n                \n                    This is not a real service, but it looks like it from the outside.\nIt's just an InjectionTToken used to import the config object, provided from the outside\n\n                \n            \n\n        \n    \n\n    projects/bq-start-prime/src/lib/ui/controls/bq-chips-menu/bq-chips-menu.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CHIPS_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ChipsMenu),\n  multi: true\n}\n                    \n                \n\n\n        \n    \n\n    projects/bq-start-prime/src/lib/ui/core/control-container.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        containerFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (container: ControlContainer) => {\n  return container\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        controlContainerProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [{\n  provide: ControlContainer,\n  deps: [[new Optional(), new SkipSelf(), ControlContainer]],\n  useFactory: containerFactory\n}]\n                    \n                \n\n            \n                \n                    Enable cross component form injection for a directive.\n\n                \n            \n\n        \n    \n\n    projects/bq-start-prime/src/lib/services/generic-data.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DataServiceToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('GSvcDataOptions')\n                    \n                \n\n\n        \n    \n\n    projects/bq-start-prime/src/lib/services/locale.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LocaleProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Provider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: LOCALE_ID,\n  useClass: LocaleId,\n  deps: [LocaleService],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
